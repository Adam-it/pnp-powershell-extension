{
  "Add-PnPAlert": {
    "description": "This cmdlets allows to add an alert for a user to a list.",
    "prefix": [
      "Add-PnPAlert"
    ],
    "body": [
      "Add-PnPAlert "
    ]
  },
  "Add-PnPApp": {
    "description": [
      "Allows to upload an app to the app catalog at tenant or site collection level. By specifying -Publish option it is possible to deploy/trust it at the same time.",
      "-Publish"
    ],
    "prefix": [
      "Add-PnPApp"
    ],
    "body": [
      "Add-PnPApp "
    ]
  },
  "Add-PnPApplicationCustomizer": {
    "description": "Adds a SharePoint Framework client side extension application customizer by registering a user custom action to a web or sitecollection. This can be useful in the scenario where you have a SPFx Application Customizer whcih you decide to deploy to the global app catalog, checking the box to deploy it to the entire tenant. If you then go to the Tenant Wide Extensions list inside the tenant app catalog and set the SPFx Application Customizer its Disabled property to be Yes, you can use this cmdlet to add the functionality of that SPFx component to specific site collections manually. This voids having to add it as an app to every site colllection and it being visible in the site contents, yet you having full control over where it should be ran and where not.",
    "prefix": [
      "Add-PnPApplicationCustomizer"
    ],
    "body": [
      "Add-PnPApplicationCustomizer "
    ]
  },
  "Add-PnPAvailableSiteClassification": {
    "description": "Allows to add classic site classification values",
    "prefix": [
      "Add-PnPAvailableSiteClassification"
    ],
    "body": [
      "Add-PnPAvailableSiteClassification -Classifications $1"
    ]
  },
  "Add-PnPAzureADGroupMember": {
    "description": [
      "Allows to add users to Azure Active Directory Group. This can be a security, distribution or Microsoft 365 group. By specifying -RemoveExisting option it is possible to first clear the group of all existing members.",
      "-RemoveExisting"
    ],
    "prefix": [
      "Add-PnPAzureADGroupMember"
    ],
    "body": [
      "Add-PnPAzureADGroupMember -Identity $1 -Users $2"
    ]
  },
  "Add-PnPAzureADGroupOwner": {
    "description": [
      "Allows to add users to owners of an Azure Active Directory Group. This can be a security, distribution or Microsoft 365 group. By specifying -RemoveExisting option it is possible to first clear the group of all existing members.",
      "-RemoveExisting"
    ],
    "prefix": [
      "Add-PnPAzureADGroupOwner"
    ],
    "body": [
      "Add-PnPAzureADGroupOwner -Identity $1 -Users $2"
    ]
  },
  "Add-PnPAzureADServicePrincipalAppRole": {
    "description": "Allows adding of an app role such as Sites.FullControl.All to a service principal/application registration in Azure Active Directory. This can be used to grant permissions to a service principal/application registration, such as a Managed Identity.",
    "prefix": [
      "Add-PnPAzureADServicePrincipalAppRole"
    ],
    "body": [
      "Add-PnPAzureADServicePrincipalAppRole -Principal $1 -AppRole $2 -BuiltInType $3"
    ]
  },
  "Add-PnPContentType": {
    "description": "Adds a new content type to a site. To create a content type in the modern Content Type Gallery, first connect to the content type hub site for the tenant.",
    "prefix": [
      "Add-PnPContentType"
    ],
    "body": [
      "Add-PnPContentType -Name $1"
    ]
  },
  "Add-PnPContentTypesFromContentTypeHub": {
    "description": "Allows to add content types from content type hub site to current site. In case the same content type is already present on the current site then the latest published version will be used.",
    "prefix": [
      "Add-PnPContentTypesFromContentTypeHub"
    ],
    "body": [
      "Add-PnPContentTypesFromContentTypeHub -ContentTypes $1"
    ]
  },
  "Add-PnPContentTypeToDocumentSet": {
    "description": "Allows to add content type to document set.",
    "prefix": [
      "Add-PnPContentTypeToDocumentSet"
    ],
    "body": [
      "Add-PnPContentTypeToDocumentSet -ContentType $1 -DocumentSet $2"
    ]
  },
  "Add-PnPContentTypeToList": {
    "description": [
      "Allows to add content type to list. By specifying -DefaultContentType option it is possible set the newly added content type as default.",
      "-DefaultContentType"
    ],
    "prefix": [
      "Add-PnPContentTypeToList"
    ],
    "body": [
      "Add-PnPContentTypeToList -List $1 -ContentType $2"
    ]
  },
  "Add-PnPCustomAction": {
    "description": "Adds a user custom action to a web or sitecollection.",
    "prefix": [
      "Add-PnPCustomAction"
    ],
    "body": [
      "Add-PnPCustomAction -Name $1 -Title $2 -Description $3 -Group $4 -Location $5"
    ]
  },
  "Add-PnPDataRowsToSiteTemplate": {
    "description": [
      "Allows to add datarows to list inside a PnP Provisioning Template. The command allows to specify the fields which should be retrieved using -Fields option and filter the datarows to be used by using -Query option.",
      "-Fields",
      "-Query"
    ],
    "prefix": [
      "Add-PnPDataRowsToSiteTemplate"
    ],
    "body": [
      "Add-PnPDataRowsToSiteTemplate "
    ]
  },
  "Add-PnPDocumentSet": {
    "description": "Allows to add new document set to library.",
    "prefix": [
      "Add-PnPDocumentSet"
    ],
    "body": [
      "Add-PnPDocumentSet -List $1 -Name $2 -ContentType $3"
    ]
  },
  "Add-PnPEventReceiver": {
    "description": "This cmdlet adds a new remote event receiver.",
    "prefix": [
      "Add-PnPEventReceiver"
    ],
    "body": [
      "Add-PnPEventReceiver "
    ]
  },
  "Add-PnPField": {
    "description": "Adds a field (a column) to a list or as a site column. To add a column of type Managed Metadata use the Add-PnPTaxonomyField cmdlet.",
    "prefix": [
      "Add-PnPField"
    ],
    "body": [
      "Add-PnPField "
    ]
  },
  "Add-PnPFieldFromXml": {
    "description": "Allows to add new field by specifying its definition in CAML/XML format to list or site columns.",
    "prefix": [
      "Add-PnPFieldFromXml"
    ],
    "body": [
      "Add-PnPFieldFromXml "
    ]
  },
  "Add-PnPFieldToContentType": {
    "description": "Allows to add a field from site columns to an existing content type.",
    "prefix": [
      "Add-PnPFieldToContentType"
    ],
    "body": [
      "Add-PnPFieldToContentType -Field $1 -ContentType $2"
    ]
  },
  "Add-PnPFile": {
    "description": "This cmdlet uploads a local file, file from a stream or plain text to the specified folder.",
    "prefix": [
      "Add-PnPFile"
    ],
    "body": [
      "Add-PnPFile -Path $1 -Folder $2"
    ]
  },
  "Add-PnPFileToSiteTemplate": {
    "description": "Allows adding a file to a PnP Provisioning Template package (.pnp) so that the file will get uploaded to the SharePoint Online site to which the template is being invoked. This allows the file to be referenced in i.e. a document template, site logo or any other component that references a file.",
    "prefix": [
      "Add-PnPFileToSiteTemplate"
    ],
    "body": [
      "Add-PnPFileToSiteTemplate "
    ]
  },
  "Add-PnPFolder": {
    "description": "Allows to add a new folder.",
    "prefix": [
      "Add-PnPFolder"
    ],
    "body": [
      "Add-PnPFolder -Name $1 -Folder $2"
    ]
  },
  "Add-PnPGroupMember": {
    "description": "Allows to add new user to SharePoint group. The SharePoint group may be specified either by id, name or related object.",
    "prefix": [
      "Add-PnPGroupMember"
    ],
    "body": [
      "Add-PnPGroupMember -LoginName $1 -Group $2"
    ]
  },
  "Add-PnPHtmlPublishingPageLayout": {
    "description": "Allows to add a HTML based publishing page layout.",
    "prefix": [
      "Add-PnPHtmlPublishingPageLayout"
    ],
    "body": [
      "Add-PnPHtmlPublishingPageLayout -SourceFilePath $1 -Title $2 -Description $3 -AssociatedContentTypeID $4"
    ]
  },
  "Add-PnPHubSiteAssociation": {
    "description": "Connects an existing site to a hubsite",
    "prefix": [
      "Add-PnPHubSiteAssociation"
    ],
    "body": [
      "Add-PnPHubSiteAssociation -Site $1 -HubSite $2"
    ]
  },
  "Add-PnPHubToHubAssociation": {
    "description": "Use this cmdlet to associate a hub site to a hub site.",
    "prefix": [
      "Add-PnPHubToHubAssociation"
    ],
    "body": [
      "Add-PnPHubToHubAssociation -Source $1 -Target $2"
    ]
  },
  "Add-PnPIndexedProperty": {
    "description": "Allows to set search index on propertybag key.",
    "prefix": [
      "Add-PnPIndexedProperty"
    ],
    "body": [
      "Add-PnPIndexedProperty "
    ]
  },
  "Add-PnPJavaScriptBlock": {
    "description": "Specify a scope as 'Site' to add the custom action to all sites in a site collection.",
    "prefix": [
      "Add-PnPJavaScriptBlock"
    ],
    "body": [
      "Add-PnPJavaScriptBlock -Name $1 -Script $2"
    ]
  },
  "Add-PnPJavaScriptLink": {
    "description": "Creates a custom action that refers to a JavaScript file",
    "prefix": [
      "Add-PnPJavaScriptLink"
    ],
    "body": [
      "Add-PnPJavaScriptLink -Name $1 -Url $2"
    ]
  },
  "Add-PnPListDesign": {
    "description": "Allows to add new List Design to tenant.",
    "prefix": [
      "Add-PnPListDesign"
    ],
    "body": [
      "Add-PnPListDesign -Title $1 -SiteScriptIds $2"
    ]
  },
  "Add-PnPListFoldersToSiteTemplate": {
    "description": "Allows to add folders to a list in a PnP Provisioning Template.",
    "prefix": [
      "Add-PnPListFoldersToSiteTemplate"
    ],
    "body": [
      "Add-PnPListFoldersToSiteTemplate "
    ]
  },
  "Add-PnPListItem": {
    "description": "Allows to add an item to the list and sets the creation time to the current date and time. The author is set to the current authenticated user executing the cmdlet. In order to set the author to a different user, please refer to Set-PnPListItem.",
    "prefix": [
      "Add-PnPListItem"
    ],
    "body": [
      "Add-PnPListItem "
    ]
  },
  "Add-PnPListItemAttachment": {
    "description": "This cmdlet allows adding a file as an attachment to a list item in a SharePoint Online list.",
    "prefix": [
      "Add-PnPListItemAttachment"
    ],
    "body": [
      "Add-PnPListItemAttachment "
    ]
  },
  "Add-PnPListItemComment": {
    "description": "Allows to add comment to the specified list item.",
    "prefix": [
      "Add-PnPListItemComment"
    ],
    "body": [
      "Add-PnPListItemComment "
    ]
  },
  "Add-PnPMasterPage": {
    "description": "Allows to add Masterpage.",
    "prefix": [
      "Add-PnPMasterPage"
    ],
    "body": [
      "Add-PnPMasterPage -SourceFilePath $1 -Title $2 -Description $3"
    ]
  },
  "Add-PnPMicrosoft365GroupMember": {
    "description": "Allows to add multiple users to Microsoft 365 Group.",
    "prefix": [
      "Add-PnPMicrosoft365GroupMember"
    ],
    "body": [
      "Add-PnPMicrosoft365GroupMember -Identity $1 -Users $2"
    ]
  },
  "Add-PnPMicrosoft365GroupOwner": {
    "description": "Allows to add multiple users to Microsoft 365 Group as owners.",
    "prefix": [
      "Add-PnPMicrosoft365GroupOwner"
    ],
    "body": [
      "Add-PnPMicrosoft365GroupOwner -Identity $1 -Users $2"
    ]
  },
  "Add-PnPMicrosoft365GroupToSite": {
    "description": "This command allows you to add a Microsoft 365 Unified group to an existing classic site collection, also known as groupifying.",
    "prefix": [
      "Add-PnPMicrosoft365GroupToSite"
    ],
    "body": [
      "Add-PnPMicrosoft365GroupToSite -Url $1 -Alias $2 -DisplayName $3"
    ]
  },
  "Add-PnPNavigationNode": {
    "description": "Adds a menu item to either the quicklaunch, top navigation, search navigation or the footer",
    "prefix": [
      "Add-PnPNavigationNode"
    ],
    "body": [
      "Add-PnPNavigationNode -Location $1 -Title $2"
    ]
  },
  "Add-PnPOrgAssetsLibrary": {
    "description": [
      "Adds a given document library as an organizational asset source in your SharePoint Online Tenant. You can specify multiple libraries, but all organizational asset sources you add must reside in the same site collection.",
      "Document libraries specified as organizational asset must be enabled as an Office 365 CDN source, either as private or public.",
      "The libraries must also have read rights for 'Everyone except external users' enabled on them. Either on library or on the entire site level.",
      "Only entire libraries can be configured as an organizational asset, folders cannot.",
      "It may take some time before this change will be reflected in the webinterface."
    ],
    "prefix": [
      "Add-PnPOrgAssetsLibrary"
    ],
    "body": [
      "Add-PnPOrgAssetsLibrary -LibraryUrl $1"
    ]
  },
  "Add-PnPOrgNewsSite": {
    "description": "Allows to add site as an organization news source in your tenant.",
    "prefix": [
      "Add-PnPOrgNewsSite"
    ],
    "body": [
      "Add-PnPOrgNewsSite -OrgNewsSiteUrl $1"
    ]
  },
  "Add-PnPPage": {
    "description": "Creates a new page. The page will be located inside the Site Pages library of the site currently connected to.",
    "prefix": [
      "Add-PnPPage"
    ],
    "body": [
      "Add-PnPPage "
    ]
  },
  "Add-PnPPageImageWebPart": {
    "description": "Adds a new image element to a section on a client-side page.",
    "prefix": [
      "Add-PnPPageImageWebPart"
    ],
    "body": [
      "Add-PnPPageImageWebPart "
    ]
  },
  "Add-PnPPageSection": {
    "description": "Allows to add a new section to a page.",
    "prefix": [
      "Add-PnPPageSection"
    ],
    "body": [
      "Add-PnPPageSection "
    ]
  },
  "Add-PnPPageTextPart": {
    "description": "Adds a new text element to a section on a client-side page.",
    "prefix": [
      "Add-PnPPageTextPart"
    ],
    "body": [
      "Add-PnPPageTextPart -Page $1 -Text $2"
    ]
  },
  "Add-PnPPageWebPart": {
    "description": "Adds a client-side web part to an existing client-side page.",
    "prefix": [
      "Add-PnPPageWebPart"
    ],
    "body": [
      "Add-PnPPageWebPart "
    ]
  },
  "Add-PnPPlannerBucket": {
    "description": "This cmdlets creates a new bucket for tasks in a Planner plan.",
    "prefix": [
      "Add-PnPPlannerBucket"
    ],
    "body": [
      "Add-PnPPlannerBucket -Group $1 -Plan $2 -Name $3"
    ]
  },
  "Add-PnPPlannerRoster": {
    "description": "Creates a new Microsoft Planner Roster",
    "prefix": [
      "Add-PnPPlannerRoster"
    ],
    "body": [
      "Add-PnPPlannerRoster "
    ]
  },
  "Add-PnPPlannerRosterMember": {
    "description": "Adds a user to an existing Microsoft Planner Roster",
    "prefix": [
      "Add-PnPPlannerRosterMember"
    ],
    "body": [
      "Add-PnPPlannerRosterMember -Identity $1 -User $2"
    ]
  },
  "Add-PnPPlannerTask": {
    "description": "This cmdlet adds a new task to Planner bucket",
    "prefix": [
      "Add-PnPPlannerTask"
    ],
    "body": [
      "Add-PnPPlannerTask -Group $1 -Plan $2 -Bucket $3 -Title $4"
    ]
  },
  "Add-PnPPublishingImageRendition": {
    "description": "Allowss to add an Image Rendition.",
    "prefix": [
      "Add-PnPPublishingImageRendition"
    ],
    "body": [
      "Add-PnPPublishingImageRendition -Name $1 -Width $2 -Height $3"
    ]
  },
  "Add-PnPPublishingPage": {
    "description": "Allows to add a publishing page.",
    "prefix": [
      "Add-PnPPublishingPage"
    ],
    "body": [
      "Add-PnPPublishingPage -PageName $1"
    ]
  },
  "Add-PnPPublishingPageLayout": {
    "description": "Allows to add a publishing page layout and associate it to a content type.",
    "prefix": [
      "Add-PnPPublishingPageLayout"
    ],
    "body": [
      "Add-PnPPublishingPageLayout -SourceFilePath $1 -Title $2 -Description $3 -AssociatedContentTypeID $4"
    ]
  },
  "Add-PnPRoleDefinition": {
    "description": "This command allows adding a custom Role Defintion (Permission Level) to the site collection in the current context. It does not replace or remove existing Role Definitions.",
    "prefix": [
      "Add-PnPRoleDefinition"
    ],
    "body": [
      "Add-PnPRoleDefinition -RoleName $1"
    ]
  },
  "Add-PnPSiteCollectionAdmin": {
    "description": [
      "This command allows adding one to many users as site collection administrators to the site collection in the current context. It does not replace or remove existing site collection administrators. You must be a Site Collection Admin to run this command. Use Set-PnPTenantSite -Owners if you are not an Admin for the site but have the SharePoint Online admin role.",
      "Set-PnPTenantSite -Owners"
    ],
    "prefix": [
      "Add-PnPSiteCollectionAdmin"
    ],
    "body": [
      "Add-PnPSiteCollectionAdmin "
    ]
  },
  "Add-PnPSiteCollectionAppCatalog": {
    "description": "Allows to add Site Collection scoped App Catalog.",
    "prefix": [
      "Add-PnPSiteCollectionAppCatalog"
    ],
    "body": [
      "Add-PnPSiteCollectionAppCatalog "
    ]
  },
  "Add-PnPSiteDesign": {
    "description": "Allows to add a new Site Design on the current tenant.",
    "prefix": [
      "Add-PnPSiteDesign"
    ],
    "body": [
      "Add-PnPSiteDesign -Title $1 -SiteScriptIds $2"
    ]
  },
  "Add-PnPSiteDesignFromWeb": {
    "description": [
      "Creates a new Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. It combines the steps of Get-PnPSiteScriptFromWeb, Add-PnPSiteScript and Add-PnPSiteDesign into one cmdlet. The information returned from running the cmdlet is the information of the Site Design that has been created.",
      "Get-PnPSiteScriptFromWeb",
      "Add-PnPSiteScript",
      "Add-PnPSiteDesign"
    ],
    "prefix": [
      "Add-PnPSiteDesignFromWeb"
    ],
    "body": [
      "Add-PnPSiteDesignFromWeb -Title $1"
    ]
  },
  "Add-PnPSiteDesignTask": {
    "description": "Allows to apply a site design to a specified site collection. This command is intended to be used when you need to apply a large number of actions or multiple site scripts.",
    "prefix": [
      "Add-PnPSiteDesignTask"
    ],
    "body": [
      "Add-PnPSiteDesignTask -SiteDesignId $1"
    ]
  },
  "Add-PnPSiteScript": {
    "description": "Allows to add a Site Script on the current tenant.",
    "prefix": [
      "Add-PnPSiteScript"
    ],
    "body": [
      "Add-PnPSiteScript -Title $1"
    ]
  },
  "Add-PnPSiteScriptPackage": {
    "description": "Allows to add a new Site Script Package on the current tenant",
    "prefix": [
      "Add-PnPSiteScriptPackage"
    ],
    "body": [
      "Add-PnPSiteScriptPackage -Title $1"
    ]
  },
  "Add-PnPSiteTemplate": {
    "description": "Allows to add PnP Site Template object to a tenant template.",
    "prefix": [
      "Add-PnPSiteTemplate"
    ],
    "body": [
      "Add-PnPSiteTemplate -SiteTemplate $1 -TenantTemplate $2"
    ]
  },
  "Add-PnPStoredCredential": {
    "description": [
      "Adds an entry to the Windows Credential Manager or Mac OS Key Chain Entry. If you add an entry in the form of the URL of your tenant/server PnP PowerShell will check if that entry is available when you connect using Connect-PnPOnline. If it finds a matching URL it will use the associated credentials.",
      "If you add a Credential with a name of \"https://yourtenant.sharepoint.com\" it will find a match when you connect to \"https://yourtenant.sharepoint.com\" but also when you connect to \"https://yourtenant.sharepoint.com/sites/demo1\". Of course you can specify more granular entries, allow you to automatically provide credentials for different URLs."
    ],
    "prefix": [
      "Add-PnPStoredCredential"
    ],
    "body": [
      "Add-PnPStoredCredential -Name $1 -Username $2"
    ]
  },
  "Add-PnPTaxonomyField": {
    "description": "Adds a taxonomy/managed metadata field to a list or as a site column.",
    "prefix": [
      "Add-PnPTaxonomyField"
    ],
    "body": [
      "Add-PnPTaxonomyField "
    ]
  },
  "Add-PnPTeamsChannel": {
    "description": [
      "Allows to add channel to an existing team in Microsoft Teams. By using the IsFavoriteByDefault it is possible to specify if the channel will be visible for members by default.",
      "IsFavoriteByDefault"
    ],
    "prefix": [
      "Add-PnPTeamsChannel"
    ],
    "body": [
      "Add-PnPTeamsChannel -Team $1 -DisplayName $2"
    ]
  },
  "Add-PnPTeamsChannelUser": {
    "description": "Allows to add a user to a private channel in Microsoft Teams.",
    "prefix": [
      "Add-PnPTeamsChannelUser"
    ],
    "body": [
      "Add-PnPTeamsChannelUser -Team $1 -Channel $2 -User $3 -Role $4"
    ]
  },
  "Add-PnPTeamsTab": {
    "description": [
      "Allows to add a tab to an existing Channel. By using ContentUrl option you may specify the content of the tab.",
      "ContentUrl"
    ],
    "prefix": [
      "Add-PnPTeamsTab"
    ],
    "body": [
      "Add-PnPTeamsTab -Team $1 -Channel $2 -DisplayName $3 -Type $4 -ContentUrl $5"
    ]
  },
  "Add-PnPTeamsTeam": {
    "description": "This command allows you to add a Teams team to an existing, Microsoft 365 group connected, site collection.",
    "prefix": [
      "Add-PnPTeamsTeam"
    ],
    "body": [
      "Add-PnPTeamsTeam "
    ]
  },
  "Add-PnPTeamsUser": {
    "description": "This cmdlet adds one or more users to an existing Team.",
    "prefix": [
      "Add-PnPTeamsUser"
    ],
    "body": [
      "Add-PnPTeamsUser -Team $1 -Channel $2 -User $3 -Role $4"
    ]
  },
  "Add-PnPTenantCdnOrigin": {
    "description": [
      "Add a new origin to the public or private CDN, on either Tenant level or on a single Site level. Effectively, a tenant admin points out to a document library, or a folder in the document library and requests that content in that library should be retrievable by using a CDN.",
      "You must be a SharePoint Online Administrator and a site collection administrator to run the cmdlet."
    ],
    "prefix": [
      "Add-PnPTenantCdnOrigin"
    ],
    "body": [
      "Add-PnPTenantCdnOrigin -OriginUrl $1 -CdnType $2"
    ]
  },
  "Add-PnPTenantSequence": {
    "description": "Allows to add a a tenant sequence object to a tenant template.",
    "prefix": [
      "Add-PnPTenantSequence"
    ],
    "body": [
      "Add-PnPTenantSequence -Template $1 -Sequence $2"
    ]
  },
  "Add-PnPTenantSequenceSite": {
    "description": "Allows to add a existing tenant sequence site object to a tenant template.",
    "prefix": [
      "Add-PnPTenantSequenceSite"
    ],
    "body": [
      "Add-PnPTenantSequenceSite -Site $1 -Sequence $2"
    ]
  },
  "Add-PnPTenantSequenceSubSite": {
    "description": "Allows to add a tenant sequence sub site object to a tenant sequence site object.",
    "prefix": [
      "Add-PnPTenantSequenceSubSite"
    ],
    "body": [
      "Add-PnPTenantSequenceSubSite -SubSite $1 -Site $2"
    ]
  },
  "Add-PnPTenantTheme": {
    "description": "Adds or updates a theme to the tenant.",
    "prefix": [
      "Add-PnPTenantTheme"
    ],
    "body": [
      "Add-PnPTenantTheme "
    ]
  },
  "Add-PnPTermToTerm": {
    "description": "This cmdlet adds a new taxonomy term as a child term to an existing term.",
    "prefix": [
      "Add-PnPTermToTerm"
    ],
    "body": [
      "Add-PnPTermToTerm -ParentTerm $1 -Name $2"
    ]
  },
  "Add-PnPView": {
    "description": "Allows to add a new view to a list.",
    "prefix": [
      "Add-PnPView"
    ],
    "body": [
      "Add-PnPView "
    ]
  },
  "Add-PnPViewsFromXML": {
    "description": "This cmdlet allows the creation of one or more views on a SharePoint Online list based on passing in an XML definition with the view details.",
    "prefix": [
      "Add-PnPViewsFromXML"
    ],
    "body": [
      "Add-PnPViewsFromXML "
    ]
  },
  "Add-PnPVivaConnectionsDashboardACE": {
    "description": "Allows to add a new an Adaptive card extension in the Viva Home dashboard page. Before running the command it is required you are connect to a SharePoint Home site and have configured the Viva connections page.",
    "prefix": [
      "Add-PnPVivaConnectionsDashboardACE"
    ],
    "body": [
      "Add-PnPVivaConnectionsDashboardACE "
    ]
  },
  "Add-PnPWebhookSubscription": {
    "description": "Allows to addd a new Webhook subscription to a list.",
    "prefix": [
      "Add-PnPWebhookSubscription"
    ],
    "body": [
      "Add-PnPWebhookSubscription "
    ]
  },
  "Add-PnPWebPartToWebPartPage": {
    "description": [
      "Allows to add a web part to a web part page. Use the ZoneIndex option to specify the zone.",
      "ZoneIndex"
    ],
    "prefix": [
      "Add-PnPWebPartToWebPartPage"
    ],
    "body": [
      "Add-PnPWebPartToWebPartPage -ServerRelativePageUrl $1 -Xml $2 -ZoneId $3 -ZoneIndex $4"
    ]
  },
  "Add-PnPWebPartToWikiPage": {
    "description": [
      "Allows to add a web part a wiki page. Use the Row and Column option to specify the location of the web part.",
      "Row",
      "Column"
    ],
    "prefix": [
      "Add-PnPWebPartToWikiPage"
    ],
    "body": [
      "Add-PnPWebPartToWikiPage -ServerRelativePageUrl $1 -Xml $2 -Row $3 -Column $4"
    ]
  },
  "Add-PnPWikiPage": {
    "description": "Allows to add a wiki page.",
    "prefix": [
      "Add-PnPWikiPage"
    ],
    "body": [
      "Add-PnPWikiPage -ServerRelativePageUrl $1 -Content $2"
    ]
  },
  "Approve-PnPTenantServicePrincipalPermissionRequest": {
    "description": [
      "Approves a permission request for the current tenant's \"SharePoint Online Client\" service principal",
      "The return value of a successful call is a permission grant object.",
      "To get the collection of permission grants for the \"SharePoint Online Client\" service principal, use the Get-PnPTenantServicePrincipalPermissionGrants command.",
      "Approving a permission request also removes that request from the list of permission requests."
    ],
    "prefix": [
      "Approve-PnPTenantServicePrincipalPermissionRequest"
    ],
    "body": [
      "Approve-PnPTenantServicePrincipalPermissionRequest -RequestId $1"
    ]
  },
  "Clear-PnPAzureADGroupMember": {
    "description": "Allows to remove all current members from specified Azure Active Directory group. This can be a security, distribution or Microsoft 365 group.",
    "prefix": [
      "Clear-PnPAzureADGroupMember"
    ],
    "body": [
      "Clear-PnPAzureADGroupMember -Identity $1"
    ]
  },
  "Clear-PnPAzureADGroupOwner": {
    "description": "Allows to remove all current owners from specified Azure Active Directory group. This can be a security, distribution or Microsoft 365 group.",
    "prefix": [
      "Clear-PnPAzureADGroupOwner"
    ],
    "body": [
      "Clear-PnPAzureADGroupOwner -Identity $1"
    ]
  },
  "Clear-PnPDefaultColumnValues": {
    "description": "Clear default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified.",
    "prefix": [
      "Clear-PnPDefaultColumnValues"
    ],
    "body": [
      "Clear-PnPDefaultColumnValues "
    ]
  },
  "Clear-PnPListItemAsRecord": {
    "description": "Allows to undeclare a list item in a list as a record.",
    "prefix": [
      "Clear-PnPListItemAsRecord"
    ],
    "body": [
      "Clear-PnPListItemAsRecord "
    ]
  },
  "Clear-PnPMicrosoft365GroupMember": {
    "description": "Allows to remove all current members from a specified Microsoft 365 Group.",
    "prefix": [
      "Clear-PnPMicrosoft365GroupMember"
    ],
    "body": [
      "Clear-PnPMicrosoft365GroupMember -Identity $1"
    ]
  },
  "Clear-PnPMicrosoft365GroupOwner": {
    "description": "Allows to remove all current owners from a specified Microsoft 365 Group.",
    "prefix": [
      "Clear-PnPMicrosoft365GroupOwner"
    ],
    "body": [
      "Clear-PnPMicrosoft365GroupOwner -Identity $1"
    ]
  },
  "Clear-PnPRecycleBinItem": {
    "description": [
      "Allows to permanently delete items from recycle bin. By default the command will delete all items but it is allow to specify the items by using the Identity or RowLimit options.",
      "Identity",
      "RowLimit"
    ],
    "prefix": [
      "Clear-PnPRecycleBinItem"
    ],
    "body": [
      "Clear-PnPRecycleBinItem "
    ]
  },
  "Clear-PnPTenantAppCatalogUrl": {
    "description": "Allows to remove the url of the tenant scoped app catalog. The app catalog site collection will not be removed.",
    "prefix": [
      "Clear-PnPTenantAppCatalogUrl"
    ],
    "body": [
      "Clear-PnPTenantAppCatalogUrl "
    ]
  },
  "Clear-PnPTenantRecycleBinItem": {
    "description": "The Clear-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be permanently deleted from the recycle bin as well.",
    "prefix": [
      "Clear-PnPTenantRecycleBinItem"
    ],
    "body": [
      "Clear-PnPTenantRecycleBinItem -Url $1"
    ]
  },
  "Connect-PnPOnline": {
    "description": [
      "Connects to a SharePoint site or another API and creates a context that is required for the other PnP Cmdlets. See https://pnp.github.io/powershell/articles/connecting.html for more information on the options to connect.",
      "https://pnp.github.io/powershell/articles/connecting.html"
    ],
    "prefix": [
      "Connect-PnPOnline"
    ],
    "body": [
      "Connect-PnPOnline "
    ]
  },
  "Convert-PnPFolderToSiteTemplate": {
    "description": "Allows to convert the current folder together with all files, to a pnp package file of and existing template xml.",
    "prefix": [
      "Convert-PnPFolderToSiteTemplate"
    ],
    "body": [
      "Convert-PnPFolderToSiteTemplate "
    ]
  },
  "Convert-PnPSiteTemplate": {
    "description": "Allows to convert a provisioning template to an other schema version.",
    "prefix": [
      "Convert-PnPSiteTemplate"
    ],
    "body": [
      "Convert-PnPSiteTemplate "
    ]
  },
  "Convert-PnPSiteTemplateToMarkdown": {
    "description": "Converts an existing PnP Site Template to markdown report. Notice that this cmdlet is work in work progress, and the completeness of the report will increase in the future.",
    "prefix": [
      "Convert-PnPSiteTemplateToMarkdown"
    ],
    "body": [
      "Convert-PnPSiteTemplateToMarkdown -TemplatePath $1"
    ]
  },
  "ConvertTo-PnPPage": {
    "description": [
      "EXAMPLE 1",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite",
      "Converts a wiki/web part page named 'somepage' to a client side page",
      "EXAMPLE 2",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -WebPartMappingFile c:\\contoso\\webpartmapping.xml",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -WebPartMappingFile c:\\contoso\\webpartmapping.xml",
      "Converts a wiki/web part page named 'somepage' to a client side page using a custom provided mapping file",
      "EXAMPLE 3",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -AddPageAcceptBanner",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -AddPageAcceptBanner",
      "Converts a wiki/web part page named 'somepage' to a client side page and adds the page accept banner web part on top of the page. This requires that the SPFX solution holding the web part (https://github.com/SharePoint/sp-dev-modernization/blob/master/Solutions/PageTransformationUI/assets/sharepointpnp-pagetransformation-client.sppkg?raw=true) has been installed to the tenant app catalog",
      "https://github.com/SharePoint/sp-dev-modernization/blob/master/Solutions/PageTransformationUI/assets/sharepointpnp-pagetransformation-client.sppkg?raw=true",
      "EXAMPLE 4",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -CopyPageMetadata",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -CopyPageMetadata",
      "Converts a wiki/web part page named 'somepage' to a client side page, including the copying of the page metadata (if any)",
      "EXAMPLE 5",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "Converts a publishing page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site",
      "https://contoso.sharepoint.com/sites/targetmodernsite",
      "EXAMPLE 6",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target",
      "Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in one environment (on-premises, tenant A) and create in another online location (tenant B)",
      "EXAMPLE 7",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Library \"SiteAssets\" -Folder \"Folder1\" -Overwrite",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Library \"SiteAssets\" -Folder \"Folder1\" -Overwrite",
      "Converts a web part page named 'somepage' living inside the SiteAssets library in a folder named folder1 into a client side page",
      "EXAMPLE 8",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Folder \"<root>\" -Overwrite",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Folder \"<root>\" -Overwrite",
      "Converts a web part page named 'somepage' living inside the root of the site collection (so outside of a library)",
      "EXAMPLE 9",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "Converts a wiki/web part page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site",
      "https://contoso.sharepoint.com/sites/targetmodernsite",
      "EXAMPLE 10",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType File -LogFolder c:\\temp -LogVerbose -Overwrite",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType File -LogFolder c:\\temp -LogVerbose -Overwrite",
      "Converts a wiki/web part page named 'somepage' and creates a log file in c:\\temp using verbose logging",
      "EXAMPLE 11",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType SharePoint -LogSkipFlush",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType SharePoint -LogSkipFlush",
      "Converts a wiki/web part page named 'somepage' and creates a log file in SharePoint but skip the actual write. Use this option to make multiple ConvertTo-PnPPage invocations create a single log",
      "EXAMPLE 12",
      "ConvertTo-PnPPage -Identity \"My post title\" -BlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "ConvertTo-PnPPage -Identity \"My post title\" -BlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "Converts a blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site",
      "https://contoso.sharepoint.com/sites/targetmodernsite",
      "EXAMPLE 13",
      "ConvertTo-PnPPage -Identity \"My post title\" -DelveBlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "ConvertTo-PnPPage -Identity \"My post title\" -DelveBlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\"",
      "Converts a Delve blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site",
      "https://contoso.sharepoint.com/sites/targetmodernsite",
      "EXAMPLE 14",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target -UserMappingFile c:\\\\temp\\user_mapping_file.csv",
      "ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target -UserMappingFile c:\\\\temp\\user_mapping_file.csv",
      "Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in on-premises environment and create in another online locations including using specific user mappings between the two environments."
    ],
    "prefix": [
      "ConvertTo-PnPPage"
    ],
    "body": [
      "ConvertTo-PnPPage -Identity $1"
    ]
  },
  "Copy-PnPFile": {
    "description": [
      "Copies a file or folder to a different location. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Notice that if copying between sites or to a subsite you cannot specify a target filename, only a folder name. It is currently not possible to copy files between a OneDrive for Business site to SharePoint or vice versa.",
      "Copying files and folders is bound to some restrictions. You can find more on it here: https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites",
      "https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites"
    ],
    "prefix": [
      "Copy-PnPFile"
    ],
    "body": [
      "Copy-PnPFile "
    ]
  },
  "Copy-PnPFolder": {
    "description": [
      "Copies a folder or file to a different location. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Notice that if copying between sites or to a subsite you cannot specify a target filename, only a folder name.",
      "Copying files and folders is bound to some restrictions. You can find more on it here: https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites",
      "https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites"
    ],
    "prefix": [
      "Copy-PnPFolder"
    ],
    "body": [
      "Copy-PnPFolder "
    ]
  },
  "Copy-PnPItemProxy": {
    "description": [
      "This cmdlet is an alias of the Copy-Item cmdlet that is natively available with PowerShell.",
      "This cmdlet is an alias of the Copy-Item cmdlet that is natively available with PowerShell",
      "Copy-Item",
      "The Copy-PnPItemProxy cmdlet copies an item from one location to another location in the same namespace. For instance, it can copy a file to a folder, but it can't copy a file to a certificate drive.",
      "Copy-PnPItemProxy",
      "This cmdlet doesn't cut or delete the items being copied. The particular items that the cmdlet can copy depend on the PowerShell provider that exposes the item. For instance, it can copy files and directories in a file system drive and registry keys and entries in the registry drive.",
      "This cmdlet can copy and rename items in the same command. To rename an item, enter the new name in the value of the Destination parameter. To rename an item and not copy it, use the Rename-Item cmdlet.",
      "For more information and details, please refer to the official PowerShell documentation here.",
      "here"
    ],
    "prefix": [
      "Copy-PnPItemProxy"
    ],
    "body": [
      "Copy-PnPItemProxy "
    ]
  },
  "Copy-PnPList": {
    "description": "This cmdlet allows an existing list to be copied to either the same site or to another site (same tenant). It copies the fields, views and settings of the list. It does not copy along the list items in the list. If you wish to copy a list from one tenant to another, you will have to export the list as a provisioning template, and then apply the template to the target tenant.",
    "prefix": [
      "Copy-PnPList"
    ],
    "body": [
      "Copy-PnPList -Identity $1 -Title $2"
    ]
  },
  "Copy-PnPTeamsTeam": {
    "description": [
      "Using this command, global admins and Microsoft Teams service admins can access teams that they are not a member of to make a copy of them.",
      "Creates a copy of a team. This operation also creates a copy of the corresponding group. You can specify which parts of the team to clone:",
      "apps - Copies Microsoft Teams apps that are installed in the team. channels – Copies the channel structure (but not the messages in the channel). members – Copies the members and owners of the group. settings – Copies all settings within the team, along with key group settings. tabs – Copies the tabs within channels.",
      "When tabs are cloned, they are put into an unconfigured state -- they are displayed on the tab bar in Microsoft Teams, and the first time you open them, you'll go through the configuration screen. If the person opening the tab does not have permission to configure apps, they will see a message explaining that the tab hasn't been configured."
    ],
    "prefix": [
      "Copy-PnPTeamsTeam"
    ],
    "body": [
      "Copy-PnPTeamsTeam -DisplayName $1 -Identity $2"
    ]
  },
  "Deny-PnPTenantServicePrincipalPermissionRequest": {
    "description": [
      "Denies a permission request for the current tenant's \"SharePoint Online Client\" service principal",
      "Denying a permission request removes that request from the list of permission requests."
    ],
    "prefix": [
      "Deny-PnPTenantServicePrincipalPermissionRequest"
    ],
    "body": [
      "Deny-PnPTenantServicePrincipalPermissionRequest -RequestId $1"
    ]
  },
  "Disable-PnPFeature": {
    "description": "Deactivates a feature that was active on a site",
    "prefix": [
      "Disable-PnPFeature"
    ],
    "body": [
      "Disable-PnPFeature "
    ]
  },
  "Disable-PnPFlow": {
    "description": "This cmdlet disables a specific flow",
    "prefix": [
      "Disable-PnPFlow"
    ],
    "body": [
      "Disable-PnPFlow -Environment $1 -Identity $2"
    ]
  },
  "Disable-PnPPageScheduling": {
    "description": "This will disable page publishing scheduling on modern sites",
    "prefix": [
      "Disable-PnPPageScheduling"
    ],
    "body": [
      "Disable-PnPPageScheduling "
    ]
  },
  "Disable-PnPPowerShellTelemetry": {
    "description": "This cmdlet disables sending of telemetry data.",
    "prefix": [
      "Disable-PnPPowerShellTelemetry"
    ],
    "body": [
      "Disable-PnPPowerShellTelemetry "
    ]
  },
  "Disable-PnPSharingForNonOwnersOfSite": {
    "description": "Configures the site to only allow sharing of the site and items in the site by owners. At this point there is no interface available yet to undo this action through script. You will have to do so through the user interface of SharePoint.",
    "prefix": [
      "Disable-PnPSharingForNonOwnersOfSite"
    ],
    "body": [
      "Disable-PnPSharingForNonOwnersOfSite "
    ]
  },
  "Disable-PnPSiteClassification": {
    "description": "Allows to disable site classifications for the tenant.",
    "prefix": [
      "Disable-PnPSiteClassification"
    ],
    "body": [
      "Disable-PnPSiteClassification "
    ]
  },
  "Disable-PnPTenantServicePrincipal": {
    "description": "Enables the current tenant's \"SharePoint Online Client\" service principal.",
    "prefix": [
      "Disable-PnPTenantServicePrincipal"
    ],
    "body": [
      "Disable-PnPTenantServicePrincipal "
    ]
  },
  "Disconnect-PnPOnline": {
    "description": [
      "Disconnects the current connection and clears its token cache. It will require you to build up a new connection again using Connect-PnPOnline in order to use any of the PnP PowerShell cmdlets. You will have to reauthenticate. If instead you simply want to connect to another site collection within the same tenant using the same credentials you used previously, do not use this cmdlet but instead use Connect-PnPOnline -Url https://tenant.sharepoint.com/sites/othersite instead without disconnecting. It will try to reuse the existing authentication method and cached credentials.",
      "Connect-PnPOnline",
      "Connect-PnPOnline -Url https://tenant.sharepoint.com/sites/othersite",
      "Note that this cmdlet does not support passing in a specific connection to disconnect. If you wish to dispose a specific connection you have set up in a variable using $variable = Connect-PnPOnline -ReturnConnection, just dispose that variable using $variable = $null and it will be cleared from memory.",
      "$variable = Connect-PnPOnline -ReturnConnection",
      "$variable = $null"
    ],
    "prefix": [
      "Disconnect-PnPOnline"
    ],
    "body": [
      "Disconnect-PnPOnline "
    ]
  },
  "Enable-PnPCommSite": {
    "description": "This command will enable the modern site experience on a classic team site. The site must be the root site of the site collection.",
    "prefix": [
      "Enable-PnPCommSite"
    ],
    "body": [
      "Enable-PnPCommSite "
    ]
  },
  "Enable-PnPFeature": {
    "description": "Allows to enable to feature.",
    "prefix": [
      "Enable-PnPFeature"
    ],
    "body": [
      "Enable-PnPFeature "
    ]
  },
  "Enable-PnPFlow": {
    "description": "This cmdlet enables a specific flow",
    "prefix": [
      "Enable-PnPFlow"
    ],
    "body": [
      "Enable-PnPFlow -Environment $1 -Identity $2"
    ]
  },
  "Enable-PnPPageScheduling": {
    "description": "This will enable page publishing scheduling on modern sites",
    "prefix": [
      "Enable-PnPPageScheduling"
    ],
    "body": [
      "Enable-PnPPageScheduling "
    ]
  },
  "Enable-PnPPowerShellTelemetry": {
    "description": "This cmdlet Enables sending of telemetry data.",
    "prefix": [
      "Enable-PnPPowerShellTelemetry"
    ],
    "body": [
      "Enable-PnPPowerShellTelemetry "
    ]
  },
  "Enable-PnPSiteClassification": {
    "description": "Allows to enable site classifications for the tenant.",
    "prefix": [
      "Enable-PnPSiteClassification"
    ],
    "body": [
      "Enable-PnPSiteClassification -Classifications $1 -DefaultClassification $2"
    ]
  },
  "Enable-PnPTenantServicePrincipal": {
    "description": "Enables the current tenant's \"SharePoint Online Client\" service principal.",
    "prefix": [
      "Enable-PnPTenantServicePrincipal"
    ],
    "body": [
      "Enable-PnPTenantServicePrincipal "
    ]
  },
  "Export-PnPFlow": {
    "description": [
      "This cmdlet exports a Microsoft Power Automate Flow either as a json file or as a zip package.",
      "Many times exporting a Microsoft Power Automate Flow will not be possible due to various reasons such as connections having gone stale, SharePoint sites referenced no longer existing or other configuration errors in the Flow. To display these errors when trying to export a Flow, provide the -Verbose flag with your export request. If not provided, these errors will silently be ignored."
    ],
    "prefix": [
      "Export-PnPFlow"
    ],
    "body": [
      "Export-PnPFlow -Environment $1 -Identity $2"
    ]
  },
  "Export-PnPListToSiteTemplate": {
    "description": "Allows to export one or more lists to provisioning template.",
    "prefix": [
      "Export-PnPListToSiteTemplate"
    ],
    "body": [
      "Export-PnPListToSiteTemplate -List $1"
    ]
  },
  "Export-PnPPage": {
    "description": "Allows to export a Client Side Page to a PnP Provisioning Template.",
    "prefix": [
      "Export-PnPPage"
    ],
    "body": [
      "Export-PnPPage "
    ]
  },
  "Export-PnPPageMapping": {
    "description": [
      "------------------EXAMPLE 1------------------",
      "Export-PnPPageMapping -BuiltInPageLayoutMapping -CustomPageLayoutMapping -Folder c:\\\\temp -Overwrite",
      "Export-PnPPageMapping -BuiltInPageLayoutMapping -CustomPageLayoutMapping -Folder c:\\\\temp -Overwrite",
      "Exports the built in page layout mapping and analyzes the current site's page layouts and exports these to files in folder c:\\temp",
      "------------------EXAMPLE 2------------------",
      "Export-PnPPageMapping -CustomPageLayoutMapping -PublishingPage mypage.aspx -Folder c:\\\\temp -Overwrite",
      "Export-PnPPageMapping -CustomPageLayoutMapping -PublishingPage mypage.aspx -Folder c:\\\\temp -Overwrite",
      "Analyzes the page layout of page mypage.aspx and exports this to a file in folder c:\\temp",
      "------------------EXAMPLE 3------------------",
      "Export-PnPPageMapping -BuiltInWebPartMapping -Folder c:\\\\temp -Overwrite",
      "Export-PnPPageMapping -BuiltInWebPartMapping -Folder c:\\\\temp -Overwrite",
      "Exports the built in webpart mapping to a file in folder c:\\temp. Use this a starting basis if you want to tailer the web part mapping behavior."
    ],
    "prefix": [
      "Export-PnPPageMapping"
    ],
    "body": [
      "Export-PnPPageMapping "
    ]
  },
  "Export-PnPTaxonomy": {
    "description": "Allows to export a taxonomy to either the output or to a file.",
    "prefix": [
      "Export-PnPTaxonomy"
    ],
    "body": [
      "Export-PnPTaxonomy "
    ]
  },
  "Export-PnPTermGroupToXml": {
    "description": "Allows to export a taxonomy TermGroup to either the output or to an XML file.",
    "prefix": [
      "Export-PnPTermGroupToXml"
    ],
    "body": [
      "Export-PnPTermGroupToXml "
    ]
  },
  "Export-PnPUserInfo": {
    "description": "Export user information from the site user information list. If the Site parameter has not been specified, the current connect to site will be used.",
    "prefix": [
      "Export-PnPUserInfo"
    ],
    "body": [
      "Export-PnPUserInfo -LoginName $1"
    ]
  },
  "Export-PnPUserProfile": {
    "description": "Export user profile data.",
    "prefix": [
      "Export-PnPUserProfile"
    ],
    "body": [
      "Export-PnPUserProfile -LoginName $1"
    ]
  },
  "Find-PnPFile": {
    "description": "Allows to find a file in the virtual file system of the web.",
    "prefix": [
      "Find-PnPFile"
    ],
    "body": [
      "Find-PnPFile "
    ]
  },
  "Get-PnPAccessToken": {
    "description": [
      "Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API. Doesn't work with all Connect-PnPOnline options. To retrieve the SharePoint Online access token, you can also use Get-PnPAppAuthAccessToken.",
      "Get-PnPAppAuthAccessToken"
    ],
    "prefix": [
      "Get-PnPAccessToken"
    ],
    "body": [
      "Get-PnPAccessToken "
    ]
  },
  "Get-PnPAlert": {
    "description": [
      "Allows to retrieve all registered alerts for given users. Using AllUsers option will allow to retrieve all alerts in the current site, regardless of the user or list it belongs to.",
      "AllUsers"
    ],
    "prefix": [
      "Get-PnPAlert"
    ],
    "body": [
      "Get-PnPAlert "
    ]
  },
  "Get-PnPApp": {
    "description": [
      "Allows to retrieve available apps from the app catalog. In order to get apps from site collection scoped app catalog set Scope option to Site.",
      "Scope",
      "Site"
    ],
    "prefix": [
      "Get-PnPApp"
    ],
    "body": [
      "Get-PnPApp "
    ]
  },
  "Get-PnPAppAuthAccessToken": {
    "description": [
      "Returns the SharePoint Online access token from the current client context. This will only work in the App authentication flow (App+user or App-Only). For the Microsoft Graph access token, use Get-PnPAccessToken instead.",
      "Get-PnPAccessToken"
    ],
    "prefix": [
      "Get-PnPAppAuthAccessToken"
    ],
    "body": [
      "Get-PnPAppAuthAccessToken "
    ]
  },
  "Get-PnPAppErrors": {
    "description": [
      "The Get-PnPAppErrors cmdlet returns application monitoring errors (if available) for the application that is specified by ProductId between StartTimeInUtc in Coordinated Universal Time (UTC) and EndTimeInUtc in UTC.",
      "Based on server configuration, errors are available for a limited time. The default is seven days. Older errors are purged. Date time values that are older than 50 years or later than 20 years from today are considered invalid",
      "Each error includes the error message, time in UTC that error happened, the site where the error happened, and the error type. Values for error type are as follows: 0 - None, 1 - Install Error, 2 - Upgrade Error, 3 - Runtime Error."
    ],
    "prefix": [
      "Get-PnPAppErrors"
    ],
    "body": [
      "Get-PnPAppErrors -ProductId $1"
    ]
  },
  "Get-PnPAppInfo": {
    "description": [
      "The Get-PnPAppInfo cmdlet gets all the installed applications from an external marketplace or from the App Catalog that contain Name in their application names or the installed application with mentioned ProductId.",
      "Name",
      "ProductId",
      "The returned collection of installed applications contains Product ID (GUID), Product name and Source."
    ],
    "prefix": [
      "Get-PnPAppInfo"
    ],
    "body": [
      "Get-PnPAppInfo -ProductId $1"
    ]
  },
  "Get-PnPApplicationCustomizer": {
    "description": "Returns all SharePoint Framework client side extension application customizers registered on the current web and/or site",
    "prefix": [
      "Get-PnPApplicationCustomizer"
    ],
    "body": [
      "Get-PnPApplicationCustomizer "
    ]
  },
  "Get-PnPAuditing": {
    "description": "Allows to get the auditing setting of the site.",
    "prefix": [
      "Get-PnPAuditing"
    ],
    "body": [
      "Get-PnPAuditing "
    ]
  },
  "Get-PnPAuthenticationRealm": {
    "description": "Gets the authentication realm for the current web",
    "prefix": [
      "Get-PnPAuthenticationRealm"
    ],
    "body": [
      "Get-PnPAuthenticationRealm "
    ]
  },
  "Get-PnPAvailableLanguage": {
    "description": "Allows to retrieve available languages from the current site.",
    "prefix": [
      "Get-PnPAvailableLanguage"
    ],
    "body": [
      "Get-PnPAvailableLanguage "
    ]
  },
  "Get-PnPAvailableSensitivityLabel": {
    "description": [
      "This cmdlet allows retrieval of the available Microsoft Purview sensitivity labels in the currently connected tenant. You can retrieve all the labels, a specific label or all the labels available to a specific user. When connected with a delegate token, it will return the Microsoft Purview sensitivity labels for the user you logged on with. When connecting with an application token, it will return all available Microsoft Purview sensitivity labels on the tenant.",
      "For retrieval of the available classic Site Classification, use Get-PnPAvailableSiteClassification instead.",
      "Get-PnPAvailableSiteClassification"
    ],
    "prefix": [
      "Get-PnPAvailableSensitivityLabel"
    ],
    "body": [
      "Get-PnPAvailableSensitivityLabel "
    ]
  },
  "Get-PnPAvailableSiteClassification": {
    "description": [
      "This cmdlet allows for retrieving the configuration of the classic site classifications configured within the tenant. For the new Microsoft Purview sensitivity labels, use Get-PnPAvailableSensitivityLabel instead.",
      "Get-PnPAvailableSensitivityLabel"
    ],
    "prefix": [
      "Get-PnPAvailableSiteClassification"
    ],
    "body": [
      "Get-PnPAvailableSiteClassification "
    ]
  },
  "Get-PnPAzureADActivityReportDirectoryAudit": {
    "description": "This cmdlet gets the list of audit logs generated by AzureAD. This includes audit logs generated by different services in Azure AD such as user, app, device and group Management, privileged identity management (PIM), access reviews, terms of use, identity protection, password management (self-service and admin password resets) and others.",
    "prefix": [
      "Get-PnPAzureADActivityReportDirectoryAudit"
    ],
    "body": [
      "Get-PnPAzureADActivityReportDirectoryAudit "
    ]
  },
  "Get-PnPAzureADActivityReportSignIn": {
    "description": "This cmdlet gets the list of sign in logs generated by Azure AD.",
    "prefix": [
      "Get-PnPAzureADActivityReportSignIn"
    ],
    "body": [
      "Get-PnPAzureADActivityReportSignIn "
    ]
  },
  "Get-PnPAzureADApp": {
    "description": "This cmdlets returns all app registrations, a specific one or ones matching a provided filter.",
    "prefix": [
      "Get-PnPAzureADApp"
    ],
    "body": [
      "Get-PnPAzureADApp "
    ]
  },
  "Get-PnPAzureADAppPermission": {
    "description": "This cmdlet returns the appid, displayname and permissions set for Microsoft SharePoint and the Microsoft Graph APIs",
    "prefix": [
      "Get-PnPAzureADAppPermission"
    ],
    "body": [
      "Get-PnPAzureADAppPermission "
    ]
  },
  "Get-PnPAzureADAppSitePermission": {
    "description": "This cmdlet returns app permissions for either the current or a given site.",
    "prefix": [
      "Get-PnPAzureADAppSitePermission"
    ],
    "body": [
      "Get-PnPAzureADAppSitePermission "
    ]
  },
  "Get-PnPAzureADGroup": {
    "description": [
      "Allows to retrieve list of Azure Active Directory groups. Those can be a security, distribution or Microsoft 365 group. By specifing Identity option it is possible to get single group.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPAzureADGroup"
    ],
    "body": [
      "Get-PnPAzureADGroup "
    ]
  },
  "Get-PnPAzureADGroupMember": {
    "description": "Allows to list members from given Azure Active Directory group. This can be a security, distribution or Microsoft 365 group.",
    "prefix": [
      "Get-PnPAzureADGroupMember"
    ],
    "body": [
      "Get-PnPAzureADGroupMember -Identity $1"
    ]
  },
  "Get-PnPAzureADGroupOwner": {
    "description": "Allows to list owners from given Azure Active Directory group. This can be a security, distribution or Microsoft 365 group.",
    "prefix": [
      "Get-PnPAzureADGroupOwner"
    ],
    "body": [
      "Get-PnPAzureADGroupOwner -Identity $1"
    ]
  },
  "Get-PnPAzureADServicePrincipal": {
    "description": "Allows retrieval of all service principals/app registrations in Azure Active Directory or a specific service principal/app registration based on the AppId, ObjectId or AppName. This will include both application registrations as well as enterprise applications in Azure Active Directory.",
    "prefix": [
      "Get-PnPAzureADServicePrincipal"
    ],
    "body": [
      "Get-PnPAzureADServicePrincipal "
    ]
  },
  "Get-PnPAzureADServicePrincipalAssignedAppRole": {
    "description": "Allows retrieval of currently assigned app roles of a specific service principals/app registration in Azure Active Directory.",
    "prefix": [
      "Get-PnPAzureADServicePrincipalAssignedAppRole"
    ],
    "body": [
      "Get-PnPAzureADServicePrincipalAssignedAppRole -Principal $1"
    ]
  },
  "Get-PnPAzureADServicePrincipalAvailableAppRole": {
    "description": [
      "Allows retrieval of all available app roles of a specific service principals/app registration in Azure Active Directory. To retrieve the app roles currently assigned to a specific service principal/application registration, use Get-PnPAzureADServicePrincipalAssignedAppRole instead.",
      "Get-PnPAzureADServicePrincipalAssignedAppRole"
    ],
    "prefix": [
      "Get-PnPAzureADServicePrincipalAvailableAppRole"
    ],
    "body": [
      "Get-PnPAzureADServicePrincipalAvailableAppRole -Principal $1"
    ]
  },
  "Get-PnPAzureADUser": {
    "description": "Allows to retrieve single or list of users from Azure Active Directory.",
    "prefix": [
      "Get-PnPAzureADUser"
    ],
    "body": [
      "Get-PnPAzureADUser "
    ]
  },
  "Get-PnPAzureCertificate": {
    "description": "Allows to PEM values and manifest settings for an existing certificate (.pfx) for use when using CSOM via an app-only ADAL application.",
    "prefix": [
      "Get-PnPAzureCertificate"
    ],
    "body": [
      "Get-PnPAzureCertificate -Path $1"
    ]
  },
  "Get-PnPBrowserIdleSignout": {
    "description": "Use this cmdlet to retrieve the current configuration values for Idle session sign-out policy, the time at which users are warned and subsequently signed out of Microsft 365 after a period of browser inactivity in SharePoint and OneDrive.",
    "prefix": [
      "Get-PnPBrowserIdleSignout"
    ],
    "body": [
      "Get-PnPBrowserIdleSignout "
    ]
  },
  "Get-PnPBuiltInDesignPackageVisibility": {
    "description": "Use this cmdlet to retrieve the current visibility state of each built-in design package.",
    "prefix": [
      "Get-PnPBuiltInDesignPackageVisibility"
    ],
    "body": [
      "Get-PnPBuiltInDesignPackageVisibility "
    ]
  },
  "Get-PnPBuiltInSiteTemplateSettings": {
    "description": "Retrieves the current configuration of the built into SharePoint Online site templates.",
    "prefix": [
      "Get-PnPBuiltInSiteTemplateSettings"
    ],
    "body": [
      "Get-PnPBuiltInSiteTemplateSettings "
    ]
  },
  "Get-PnPChangeLog": {
    "description": "This cmdlets returns the changelog in markdown format. It is retrieved dynamically from GitHub.",
    "prefix": [
      "Get-PnPChangeLog"
    ],
    "body": [
      "Get-PnPChangeLog "
    ]
  },
  "Get-PnPCompatibleHubContentTypes": {
    "description": "Allows to retrieve list of content types present in content type hub site that are possible to be added to the current site or given list.",
    "prefix": [
      "Get-PnPCompatibleHubContentTypes"
    ],
    "body": [
      "Get-PnPCompatibleHubContentTypes -WebUrl $1"
    ]
  },
  "Get-PnPConnection": {
    "description": "Returns a PnP PowerShell Connection for use with the -Connection parameter on other cmdlets.",
    "prefix": [
      "Get-PnPConnection"
    ],
    "body": [
      "Get-PnPConnection "
    ]
  },
  "Get-PnPContentType": {
    "description": [
      "Allows to get single or list of content types from site or list. Use the Identity option to specify the exact content type.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPContentType"
    ],
    "body": [
      "Get-PnPContentType "
    ]
  },
  "Get-PnPContentTypePublishingHubUrl": {
    "description": "Allows to retrieve the url of the Content Type Publishing Hub.",
    "prefix": [
      "Get-PnPContentTypePublishingHubUrl"
    ],
    "body": [
      "Get-PnPContentTypePublishingHubUrl "
    ]
  },
  "Get-PnPContentTypePublishingStatus": {
    "description": "Allows to retrieve the publishing status of a content type present on content type hub site.",
    "prefix": [
      "Get-PnPContentTypePublishingStatus"
    ],
    "body": [
      "Get-PnPContentTypePublishingStatus -ContentType $1"
    ]
  },
  "Get-PnPContext": {
    "description": "Returns a SharePoint Online Client Side Object Model (CSOM) context",
    "prefix": [
      "Get-PnPContext"
    ],
    "body": [
      "Get-PnPContext "
    ]
  },
  "Get-PnPCustomAction": {
    "description": "Returns all or a specific user custom action",
    "prefix": [
      "Get-PnPCustomAction"
    ],
    "body": [
      "Get-PnPCustomAction "
    ]
  },
  "Get-PnPDefaultColumnValues": {
    "description": "Gets the default column values for a document library, per folder. Supports both text, people and taxonomy fields.",
    "prefix": [
      "Get-PnPDefaultColumnValues"
    ],
    "body": [
      "Get-PnPDefaultColumnValues "
    ]
  },
  "Get-PnPDeletedMicrosoft365Group": {
    "description": [
      "Allows to get list of deleted Microsoft 365 Groups. Use the Identity option to specify the exact group.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPDeletedMicrosoft365Group"
    ],
    "body": [
      "Get-PnPDeletedMicrosoft365Group "
    ]
  },
  "Get-PnPDeletedTeam": {
    "description": "Allows to retrieve a list of deleted Microsoft Teams teams",
    "prefix": [
      "Get-PnPDeletedTeam"
    ],
    "body": [
      "Get-PnPDeletedTeam "
    ]
  },
  "Get-PnPDiagnostics": {
    "description": "This cmdlet returns diagnostic information which can help to determine issues with PnP PowerShell",
    "prefix": [
      "Get-PnPDiagnostics"
    ],
    "body": [
      "Get-PnPDiagnostics "
    ]
  },
  "Get-PnPDisableSpacesActivation": {
    "description": "Retrieves if SharePoint Spaces is disabled on the entire tenant. At this point there is no API yet for retrieving the setting for a specific site, although you can set it for a specific site.",
    "prefix": [
      "Get-PnPDisableSpacesActivation"
    ],
    "body": [
      "Get-PnPDisableSpacesActivation "
    ]
  },
  "Get-PnPDocumentSetTemplate": {
    "description": "Allows to retrieve a document set template.",
    "prefix": [
      "Get-PnPDocumentSetTemplate"
    ],
    "body": [
      "Get-PnPDocumentSetTemplate "
    ]
  },
  "Get-PnPEventReceiver": {
    "description": "Returns all registered or a specific event receiver",
    "prefix": [
      "Get-PnPEventReceiver"
    ],
    "body": [
      "Get-PnPEventReceiver "
    ]
  },
  "Get-PnPException": {
    "description": "Returns the last exception which can be used while debugging PnP Cmdlets",
    "prefix": [
      "Get-PnPException"
    ],
    "body": [
      "Get-PnPException "
    ]
  },
  "Get-PnPExternalUser": {
    "description": "The Get-PnPExternalUser cmdlet returns external users that are located in the tenant based on specified criteria.",
    "prefix": [
      "Get-PnPExternalUser"
    ],
    "body": [
      "Get-PnPExternalUser "
    ]
  },
  "Get-PnPFeature": {
    "description": "This cmdlet returns all activated features or a specific activated feature.",
    "prefix": [
      "Get-PnPFeature"
    ],
    "body": [
      "Get-PnPFeature "
    ]
  },
  "Get-PnPField": {
    "description": "",
    "prefix": [
      "Get-PnPField"
    ],
    "body": [
      "Get-PnPField "
    ]
  },
  "Get-PnPFile": {
    "description": "Allows downloading of a file from SharePoint Online. The file contents can either be read directly into memory as text, directly saved to local disk or stored in memory for further processing.",
    "prefix": [
      "Get-PnPFile"
    ],
    "body": [
      "Get-PnPFile "
    ]
  },
  "Get-PnPFileVersion": {
    "description": "Retrieves the version history of a file, not including its current version. To get the current version use the MajorVersion and MinorVersion properties returned from Get-PnPFile.",
    "prefix": [
      "Get-PnPFileVersion"
    ],
    "body": [
      "Get-PnPFileVersion -Url $1"
    ]
  },
  "Get-PnPFlow": {
    "description": "This cmdlet returns the flows for a given enviroment.",
    "prefix": [
      "Get-PnPFlow"
    ],
    "body": [
      "Get-PnPFlow -Environment $1"
    ]
  },
  "Get-PnPFlowRun": {
    "description": "This cmdlet returns the flow runs for a given flow.",
    "prefix": [
      "Get-PnPFlowRun"
    ],
    "body": [
      "Get-PnPFlowRun -Environment $1 -Flow $2"
    ]
  },
  "Get-PnPFolder": {
    "description": "Retrieves a folder if it exists or all folders inside a provided list or library. Use Resolve-PnPFolder to create the folder if it does not exist.",
    "prefix": [
      "Get-PnPFolder"
    ],
    "body": [
      "Get-PnPFolder "
    ]
  },
  "Get-PnPFolderItem": {
    "description": "",
    "prefix": [
      "Get-PnPFolderItem"
    ],
    "body": [
      "Get-PnPFolderItem "
    ]
  },
  "Get-PnPFolderStorageMetric": {
    "description": [
      "Allows retrieval of storage metrics for a folder in SharePoint Online. It will reveal the true storage usage, similar to what will be shown through storman.aspx, the date and time the folder was last modified and the amount of files inside the folder.",
      "Please note that there is a delay of typically just a few minutes between making changes to files on a site and this cmdlet returning updated values."
    ],
    "prefix": [
      "Get-PnPFolderStorageMetric"
    ],
    "body": [
      "Get-PnPFolderStorageMetric "
    ]
  },
  "Get-PnPFooter": {
    "description": "Allows the current configuration of the footer in the current web to be retrieved. The footer currently only works on Modern Communication sites.",
    "prefix": [
      "Get-PnPFooter"
    ],
    "body": [
      "Get-PnPFooter "
    ]
  },
  "Get-PnPGraphAccessToken": {
    "description": "Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API",
    "prefix": [
      "Get-PnPGraphAccessToken"
    ],
    "body": [
      "Get-PnPGraphAccessToken "
    ]
  },
  "Get-PnPGraphSubscription": {
    "description": "",
    "prefix": [
      "Get-PnPGraphSubscription"
    ],
    "body": [
      "Get-PnPGraphSubscription "
    ]
  },
  "Get-PnPGroup": {
    "description": "",
    "prefix": [
      "Get-PnPGroup"
    ],
    "body": [
      "Get-PnPGroup "
    ]
  },
  "Get-PnPGroupMember": {
    "description": "This command will return all the users (or a specific user) that are members of the provided SharePoint group",
    "prefix": [
      "Get-PnPGroupMember"
    ],
    "body": [
      "Get-PnPGroupMember -Group $1"
    ]
  },
  "Get-PnPGroupPermissions": {
    "description": "This command will return the permissions of a specific SharePoint group",
    "prefix": [
      "Get-PnPGroupPermissions"
    ],
    "body": [
      "Get-PnPGroupPermissions "
    ]
  },
  "Get-PnPHideDefaultThemes": {
    "description": [
      "Returns if the default themes are visible. Use Set-PnPHideDefaultThemes to change this value.",
      "You must be a SharePoint Online global administrator to run the cmdlet."
    ],
    "prefix": [
      "Get-PnPHideDefaultThemes"
    ],
    "body": [
      "Get-PnPHideDefaultThemes "
    ]
  },
  "Get-PnPHomePage": {
    "description": "Returns the URL to the page set as home page",
    "prefix": [
      "Get-PnPHomePage"
    ],
    "body": [
      "Get-PnPHomePage "
    ]
  },
  "Get-PnPHomeSite": {
    "description": "",
    "prefix": [
      "Get-PnPHomeSite"
    ],
    "body": [
      "Get-PnPHomeSite "
    ]
  },
  "Get-PnPHubSite": {
    "description": "",
    "prefix": [
      "Get-PnPHubSite"
    ],
    "body": [
      "Get-PnPHubSite "
    ]
  },
  "Get-PnPHubSiteChild": {
    "description": "Retrieves all sites associated to a specific hub site",
    "prefix": [
      "Get-PnPHubSiteChild"
    ],
    "body": [
      "Get-PnPHubSiteChild "
    ]
  },
  "Get-PnPIndexedPropertyKeys": {
    "description": "",
    "prefix": [
      "Get-PnPIndexedPropertyKeys"
    ],
    "body": [
      "Get-PnPIndexedPropertyKeys "
    ]
  },
  "Get-PnPInPlaceRecordsManagement": {
    "description": "",
    "prefix": [
      "Get-PnPInPlaceRecordsManagement"
    ],
    "body": [
      "Get-PnPInPlaceRecordsManagement "
    ]
  },
  "Get-PnPIsSiteAliasAvailable": {
    "description": "",
    "prefix": [
      "Get-PnPIsSiteAliasAvailable"
    ],
    "body": [
      "Get-PnPIsSiteAliasAvailable "
    ]
  },
  "Get-PnPJavaScriptLink": {
    "description": "",
    "prefix": [
      "Get-PnPJavaScriptLink"
    ],
    "body": [
      "Get-PnPJavaScriptLink "
    ]
  },
  "Get-PnPKnowledgeHubSite": {
    "description": "",
    "prefix": [
      "Get-PnPKnowledgeHubSite"
    ],
    "body": [
      "Get-PnPKnowledgeHubSite "
    ]
  },
  "Get-PnPLabel": {
    "description": [
      "Allows to retrieve all retention labels for current site or list. Use Raw option if you want will include more detailed information regarding labels.",
      "Raw"
    ],
    "prefix": [
      "Get-PnPLabel"
    ],
    "body": [
      "Get-PnPLabel "
    ]
  },
  "Get-PnPList": {
    "description": "This cmdlet returns lists in the current web.",
    "prefix": [
      "Get-PnPList"
    ],
    "body": [
      "Get-PnPList "
    ]
  },
  "Get-PnPListDesign": {
    "description": "Retrieve List Designs that have been registered on the current tenant. When providing a name with -Identity, it returns all list designs with that name.",
    "prefix": [
      "Get-PnPListDesign"
    ],
    "body": [
      "Get-PnPListDesign "
    ]
  },
  "Get-PnPListInformationRightsManagement": {
    "description": "Allows to get the site closure status of the current site or list which has a site policy applied.",
    "prefix": [
      "Get-PnPListInformationRightsManagement"
    ],
    "body": [
      "Get-PnPListInformationRightsManagement -List $1"
    ]
  },
  "Get-PnPListItem": {
    "description": "Allows to retrieve list items.",
    "prefix": [
      "Get-PnPListItem"
    ],
    "body": [
      "Get-PnPListItem "
    ]
  },
  "Get-PnPListItemAttachment": {
    "description": [
      "Allows to download the list item attachments to a specified path. Use Force option in order to skip the confirmation question and overwrite the files on the local disk, if they already exist.",
      "Force"
    ],
    "prefix": [
      "Get-PnPListItemAttachment"
    ],
    "body": [
      "Get-PnPListItemAttachment "
    ]
  },
  "Get-PnPListItemComment": {
    "description": [
      "-Connection",
      "Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.",
      "Type: PnPConnection\r\nParameter Sets: (All)\r\n\r\nRequired: False\r\nPosition: Named\r\nDefault value: None\r\nAccept pipeline input: False\r\nAccept wildcard characters: False",
      "Type: PnPConnectionParameter Sets: (All)Required: FalsePosition: Named\r\nDefault value: NoneAccept pipeline input: FalseAccept wildcard characters: False",
      "-Identity",
      "The ID of the listitem, or actual ListItem object",
      "Type: ListItemPipeBind\r\nParameter Sets: (All)\r\n\r\nRequired: True\r\nPosition: Named\r\nDefault value: None\r\nAccept pipeline input: False\r\nAccept wildcard characters: False",
      "Type: ListItemPipeBindParameter Sets: (All)Required: TruePosition: Named\r\nDefault value: NoneAccept pipeline input: FalseAccept wildcard characters: False",
      "-List",
      "The ID, Title or Url of the list.",
      "Type: ListPipeBind\r\nParameter Sets: (All)\r\n\r\nRequired: True\r\nPosition: 0\r\nDefault value: None\r\nAccept pipeline input: True (ByValue)\r\nAccept wildcard characters: False",
      "Type: ListPipeBindParameter Sets: (All)Required: TruePosition: 0\r\nDefault value: NoneAccept pipeline input: True (ByValue)\r\nAccept wildcard characters: False"
    ],
    "prefix": [
      "Get-PnPListItemComment"
    ],
    "body": [
      "Get-PnPListItemComment -List $1 -Identity $2"
    ]
  },
  "Get-PnPListItemPermission": {
    "description": "Allows to retrieve list item permissions.",
    "prefix": [
      "Get-PnPListItemPermission"
    ],
    "body": [
      "Get-PnPListItemPermission "
    ]
  },
  "Get-PnPListPermissions": {
    "description": "This cmdlet retrieves the list permissions (role definitions) for a specific user or group in a provided list.",
    "prefix": [
      "Get-PnPListPermissions"
    ],
    "body": [
      "Get-PnPListPermissions "
    ]
  },
  "Get-PnPListRecordDeclaration": {
    "description": "Allows to retrieve the record declaration settings for given list.",
    "prefix": [
      "Get-PnPListRecordDeclaration"
    ],
    "body": [
      "Get-PnPListRecordDeclaration -List $1"
    ]
  },
  "Get-PnPMasterPage": {
    "description": "Allows to retrieve urls of the default Master Page and custom Master Page of the current site.",
    "prefix": [
      "Get-PnPMasterPage"
    ],
    "body": [
      "Get-PnPMasterPage "
    ]
  },
  "Get-PnPMessageCenterAnnouncement": {
    "description": "Allows to retrieve the available message center announcements.",
    "prefix": [
      "Get-PnPMessageCenterAnnouncement"
    ],
    "body": [
      "Get-PnPMessageCenterAnnouncement "
    ]
  },
  "Get-PnPMicrosoft365ExpiringGroup": {
    "description": [
      "This command returns all soon to expire Microsoft 365 Groups. By default, groups expiring in the next 31 days are returned (in accordance with SharePoint/OneDrive's retention period's 31-day months). The -Limit parameter can be used to specify a different time period.",
      "-Limit"
    ],
    "prefix": [
      "Get-PnPMicrosoft365ExpiringGroup"
    ],
    "body": [
      "Get-PnPMicrosoft365ExpiringGroup "
    ]
  },
  "Get-PnPMicrosoft365Group": {
    "description": [
      "Allows to retrieve Microsoft 365 Groups. By using Identity option you may specify the exact group that will be retrieved.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPMicrosoft365Group"
    ],
    "body": [
      "Get-PnPMicrosoft365Group "
    ]
  },
  "Get-PnPMicrosoft365GroupEndpoint": {
    "description": "This cmdlet allows retrieval of details on the endpoints connected to a Microsoft 365 Group",
    "prefix": [
      "Get-PnPMicrosoft365GroupEndpoint"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupEndpoint -Identity $1"
    ]
  },
  "Get-PnPMicrosoft365GroupMember": {
    "description": "Returns the members of a particular Microsoft 365 Group",
    "prefix": [
      "Get-PnPMicrosoft365GroupMember"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupMember -Identity $1"
    ]
  },
  "Get-PnPMicrosoft365GroupOwner": {
    "description": "Allows to retrieve owners of Microsoft 365 Group.",
    "prefix": [
      "Get-PnPMicrosoft365GroupOwner"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupOwner -Identity $1"
    ]
  },
  "Get-PnPMicrosoft365GroupSettings": {
    "description": [
      "Allows to retrieve tenant wide settings of Microsoft 365 Groups or by using Identity option you may specify the exact Microsoft 365 Group.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPMicrosoft365GroupSettings"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupSettings "
    ]
  },
  "Get-PnPMicrosoft365GroupSettingTemplates": {
    "description": "Allows to retrieve available system wide template of settings for Microsoft 365 Groups.",
    "prefix": [
      "Get-PnPMicrosoft365GroupSettingTemplates"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupSettingTemplates "
    ]
  },
  "Get-PnPMicrosoft365GroupTeam": {
    "description": "This cmdlet allows retrieval of details on the Microsoft Teams team connected to a Microsoft 365 Group.",
    "prefix": [
      "Get-PnPMicrosoft365GroupTeam"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupTeam -Identity $1"
    ]
  },
  "Get-PnPMicrosoft365GroupYammerCommunity": {
    "description": "This cmdlet allows retrieval of details on the Yammer Community connected to a Microsoft 365 Group",
    "prefix": [
      "Get-PnPMicrosoft365GroupYammerCommunity"
    ],
    "body": [
      "Get-PnPMicrosoft365GroupYammerCommunity -Identity $1"
    ]
  },
  "Get-PnPNavigationNode": {
    "description": [
      "Allows to retrieve all navigation nodes or a specific on by using Id option.",
      "Id"
    ],
    "prefix": [
      "Get-PnPNavigationNode"
    ],
    "body": [
      "Get-PnPNavigationNode "
    ]
  },
  "Get-PnPOrgAssetsLibrary": {
    "description": "Allows to retrieve list of all the configured organizational asset libraries.",
    "prefix": [
      "Get-PnPOrgAssetsLibrary"
    ],
    "body": [
      "Get-PnPOrgAssetsLibrary "
    ]
  },
  "Get-PnPOrgNewsSite": {
    "description": "Allows to retrieve list of all the configured organizational news sites.",
    "prefix": [
      "Get-PnPOrgNewsSite"
    ],
    "body": [
      "Get-PnPOrgNewsSite "
    ]
  },
  "Get-PnPPage": {
    "description": "This command allows the retrieval of a modern sitepage along with its properties and contents on it. Note that for a newly created modern site, the Columns and Sections of the Home.aspx page will not be filled according to the actual site page contents. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published. The reason for this behavior is to allow for the default homepage to be able to be updated by Microsoft as long as it hasn't been modified. For any other site page or after editing and publishing the homepage, this command will return the correct columns and sections as they are positioned on the site page.",
    "prefix": [
      "Get-PnPPage"
    ],
    "body": [
      "Get-PnPPage -Identity $1"
    ]
  },
  "Get-PnPPageComponent": {
    "description": "This command allows the retrieval of the components placed on a modern sitepage along with its properties. Note that for a newly created modern site, the Home.aspx page will not be returning any components. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published. The reason for this behavior is to allow for the default homepage to be able to be updated by Microsoft as long as it hasn't been modified. For any other site page or after editing and publishing the homepage, this command will return the correct components as they are positioned on the site page.",
    "prefix": [
      "Get-PnPPageComponent"
    ],
    "body": [
      "Get-PnPPageComponent "
    ]
  },
  "Get-PnPPlannerBucket": {
    "description": "This cmdlets returns all or a specific bucket in a Planner plan.",
    "prefix": [
      "Get-PnPPlannerBucket"
    ],
    "body": [
      "Get-PnPPlannerBucket -Group $1 -Plan $2"
    ]
  },
  "Get-PnPPlannerConfiguration": {
    "description": [
      "This cmdlet returns the Microsoft Planner admin configuration of the tenant. Note that after changing the configuration using Set-PnPPlannerTenantConfiguration, this cmdlet may return varying results which could deviate from your desired configuration while the new configuration is being propagated across the tenant.",
      "Set-PnPPlannerTenantConfiguration"
    ],
    "prefix": [
      "Get-PnPPlannerConfiguration"
    ],
    "body": [
      "Get-PnPPlannerConfiguration "
    ]
  },
  "Get-PnPPlannerPlan": {
    "description": "This cmdlet returns all or a specific Planner plan for a Microsoft 365 Group.",
    "prefix": [
      "Get-PnPPlannerPlan"
    ],
    "body": [
      "Get-PnPPlannerPlan -Group $1"
    ]
  },
  "Get-PnPPlannerRosterMember": {
    "description": "This cmdlet will return the current members of a Microsoft Planner Roster",
    "prefix": [
      "Get-PnPPlannerRosterMember"
    ],
    "body": [
      "Get-PnPPlannerRosterMember -Identity $1"
    ]
  },
  "Get-PnPPlannerRosterPlan": {
    "description": "This cmdlet returns Microsft Planner roster plans for a specific Microsoft Planner Roster or a specific user",
    "prefix": [
      "Get-PnPPlannerRosterPlan"
    ],
    "body": [
      "Get-PnPPlannerRosterPlan "
    ]
  },
  "Get-PnPPlannerTask": {
    "description": "This cmdlet returns Planner tasks.",
    "prefix": [
      "Get-PnPPlannerTask"
    ],
    "body": [
      "Get-PnPPlannerTask -Group $1 -Plan $2"
    ]
  },
  "Get-PnPPlannerUserPolicy": {
    "description": "This cmdlet returns the Microsoft Planner user policy for the provided user. If a Microsoft Planner user policy has never been set yet on a tenant, this cmdlet may return a '403 Forbidden: Access is denied' error. Set a policy once first to enable the background configuration to be done so this cmdlet can succeed from thereon.",
    "prefix": [
      "Get-PnPPlannerUserPolicy"
    ],
    "body": [
      "Get-PnPPlannerUserPolicy -Identity $1"
    ]
  },
  "Get-PnPPowerPlatformEnvironment": {
    "description": "This cmdlet retrieves the Microsoft Power Platform environments for the current tenant",
    "prefix": [
      "Get-PnPPowerPlatformEnvironment"
    ],
    "body": [
      "Get-PnPPowerPlatformEnvironment "
    ]
  },
  "Get-PnPPowerShellTelemetryEnabled": {
    "description": [
      "In order to help to make PnP PowerShell better, we can track anonymous telemetry. For more information on what we collect and how to prevent this data from being collected, visit Configure PnP PowerShell.",
      "Configure PnP PowerShell"
    ],
    "prefix": [
      "Get-PnPPowerShellTelemetryEnabled"
    ],
    "body": [
      "Get-PnPPowerShellTelemetryEnabled "
    ]
  },
  "Get-PnPProperty": {
    "description": "Will populate properties of an object and optionally, if needed, load the value from the server. If one property is specified its value will be returned to the output.",
    "prefix": [
      "Get-PnPProperty"
    ],
    "body": [
      "Get-PnPProperty "
    ]
  },
  "Get-PnPPropertyBag": {
    "description": [
      "Allows to retrieve all property bag values. It is possible to get property bag values for a folder using Folder option or a specific property bag value using Key option.",
      "Folder",
      "Key"
    ],
    "prefix": [
      "Get-PnPPropertyBag"
    ],
    "body": [
      "Get-PnPPropertyBag "
    ]
  },
  "Get-PnPPublishingImageRendition": {
    "description": [
      "Allows to retrieve all image renditions or a specific one when Identity option is used.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPPublishingImageRendition"
    ],
    "body": [
      "Get-PnPPublishingImageRendition "
    ]
  },
  "Get-PnPRecycleBinItem": {
    "description": "This command will return all the items in the recycle bin for the SharePoint site you connected to with Connect-PnPOnline. You must connect as a Site Collection Owner or Administrator. The SharePoint Admin Role in the tenant alone will not work. If you are not a Site Collection Admin connect to the Tenant Admin URL with Connect-PnPOnline and use Get-PnPTenantRecycleBinItem.",
    "prefix": [
      "Get-PnPRecycleBinItem"
    ],
    "body": [
      "Get-PnPRecycleBinItem "
    ]
  },
  "Get-PnPRequestAccessEmails": {
    "description": "Allows to retrieve request access e-mail addresses.",
    "prefix": [
      "Get-PnPRequestAccessEmails"
    ],
    "body": [
      "Get-PnPRequestAccessEmails "
    ]
  },
  "Get-PnPRoleDefinition": {
    "description": "Allows to retrieve Role Definitions of a site.",
    "prefix": [
      "Get-PnPRoleDefinition"
    ],
    "body": [
      "Get-PnPRoleDefinition "
    ]
  },
  "Get-PnPSearchConfiguration": {
    "description": "Allows to retrieve search configuration.",
    "prefix": [
      "Get-PnPSearchConfiguration"
    ],
    "body": [
      "Get-PnPSearchConfiguration "
    ]
  },
  "Get-PnPSearchCrawlLog": {
    "description": [
      "Allows to retrieve entries from the SharePoint search crawl log. To be able to use this command you need to grant access to the crawl log via the SharePoint search admin center at https://-admin.sharepoint.com/_layouts/15/searchadmin/crawllogreadpermission.aspx.",
      null
    ],
    "prefix": [
      "Get-PnPSearchCrawlLog"
    ],
    "body": [
      "Get-PnPSearchCrawlLog "
    ]
  },
  "Get-PnPSearchSettings": {
    "description": "Allows to retrieve search settings for a site.",
    "prefix": [
      "Get-PnPSearchSettings"
    ],
    "body": [
      "Get-PnPSearchSettings "
    ]
  },
  "Get-PnPServiceCurrentHealth": {
    "description": "Allows to retrieve current service status of the Office 365 Services from the Microsoft Graph API.",
    "prefix": [
      "Get-PnPServiceCurrentHealth"
    ],
    "body": [
      "Get-PnPServiceCurrentHealth "
    ]
  },
  "Get-PnPServiceHealthIssue": {
    "description": "Allows to retrieve current service health issues of the Office 365 Services from the Microsoft Graph API.",
    "prefix": [
      "Get-PnPServiceHealthIssue"
    ],
    "body": [
      "Get-PnPServiceHealthIssue "
    ]
  },
  "Get-PnPSharingForNonOwnersOfSite": {
    "description": "Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share. You can disable sharing by non owners by using Disable-PnPSharingForNonOwnersOfSite. At this point there is no interface available yet to enable sharing by owners and members again through script. You will have to do so through the user interface of SharePoint.",
    "prefix": [
      "Get-PnPSharingForNonOwnersOfSite"
    ],
    "body": [
      "Get-PnPSharingForNonOwnersOfSite "
    ]
  },
  "Get-PnPSite": {
    "description": "Allows to retrieve current site collection from the context.",
    "prefix": [
      "Get-PnPSite"
    ],
    "body": [
      "Get-PnPSite "
    ]
  },
  "Get-PnPSiteClosure": {
    "description": "Allows to retrieve current site closure status of the site which has a site policy applied.",
    "prefix": [
      "Get-PnPSiteClosure"
    ],
    "body": [
      "Get-PnPSiteClosure "
    ]
  },
  "Get-PnPSiteCollectionAdmin": {
    "description": "This command will return all current site collection administrators of the site collection in the current context",
    "prefix": [
      "Get-PnPSiteCollectionAdmin"
    ],
    "body": [
      "Get-PnPSiteCollectionAdmin "
    ]
  },
  "Get-PnPSiteCollectionAppCatalog": {
    "description": "Returns all the site collection scoped app catalogs that exist on the tenant",
    "prefix": [
      "Get-PnPSiteCollectionAppCatalog"
    ],
    "body": [
      "Get-PnPSiteCollectionAppCatalog "
    ]
  },
  "Get-PnPSiteCollectionTermStore": {
    "description": "Returns the site collection scoped term store for the currently connected to site collection. If it does not exist yet, it will return a null value.",
    "prefix": [
      "Get-PnPSiteCollectionTermStore"
    ],
    "body": [
      "Get-PnPSiteCollectionTermStore "
    ]
  },
  "Get-PnPSiteDesign": {
    "description": "Retrieve Site Designs that have been registered on the current tenant. When providing a name with -Identity, it returns all site designs with that name.",
    "prefix": [
      "Get-PnPSiteDesign"
    ],
    "body": [
      "Get-PnPSiteDesign "
    ]
  },
  "Get-PnPSiteDesignRights": {
    "description": "Allows to retrieve the principals with design rights on a specific Site Design.",
    "prefix": [
      "Get-PnPSiteDesignRights"
    ],
    "body": [
      "Get-PnPSiteDesignRights "
    ]
  },
  "Get-PnPSiteDesignRun": {
    "description": [
      "Allows to retrieve a list of site designs applied to a specified site collection. By default the command will retrieve list of designs applied to the current site but it is also possible to get this information from a different site collection using WebUrl option.",
      "WebUrl"
    ],
    "prefix": [
      "Get-PnPSiteDesignRun"
    ],
    "body": [
      "Get-PnPSiteDesignRun "
    ]
  },
  "Get-PnPSiteDesignRunStatus": {
    "description": "Allows to retrieve a list of all site script actions executed for a specified site design applied to a site.",
    "prefix": [
      "Get-PnPSiteDesignRunStatus"
    ],
    "body": [
      "Get-PnPSiteDesignRunStatus -Run $1"
    ]
  },
  "Get-PnPSiteDesignTask": {
    "description": "Allows to retrieve a scheduled site design script.",
    "prefix": [
      "Get-PnPSiteDesignTask"
    ],
    "body": [
      "Get-PnPSiteDesignTask "
    ]
  },
  "Get-PnPSiteGroup": {
    "description": "Use the Get-PnPSiteGroup cmdlet to get all the groups on the specified or currently connected site collection.",
    "prefix": [
      "Get-PnPSiteGroup"
    ],
    "body": [
      "Get-PnPSiteGroup "
    ]
  },
  "Get-PnPSitePolicy": {
    "description": "Allows to retrieve site policies.",
    "prefix": [
      "Get-PnPSitePolicy"
    ],
    "body": [
      "Get-PnPSitePolicy "
    ]
  },
  "Get-PnPSiteScript": {
    "description": [
      "Allows to retrieve site scripts registered on the current tenant. By using Identity option it is possible to retrieve specified site script",
      "Identity"
    ],
    "prefix": [
      "Get-PnPSiteScript"
    ],
    "body": [
      "Get-PnPSiteScript "
    ]
  },
  "Get-PnPSiteScriptFromList": {
    "description": "This command allows a Site Script to be generated off of an existing list on your tenant. Connect to your SharePoint Online Admin site before executing this command.",
    "prefix": [
      "Get-PnPSiteScriptFromList"
    ],
    "body": [
      "Get-PnPSiteScriptFromList -Url $1"
    ]
  },
  "Get-PnPSiteScriptFromWeb": {
    "description": "This command allows a Site Script to be generated off of an existing site on your tenant. You need to provide at least one of the optional Include or Lists arguments. If you omit the URL, the Site Script will be created from the site to which you are connected.",
    "prefix": [
      "Get-PnPSiteScriptFromWeb"
    ],
    "body": [
      "Get-PnPSiteScriptFromWeb -Url $1"
    ]
  },
  "Get-PnPSiteSearchQueryResults": {
    "description": "Allows to run a search query to retrieve indexed site collections.",
    "prefix": [
      "Get-PnPSiteSearchQueryResults"
    ],
    "body": [
      "Get-PnPSiteSearchQueryResults "
    ]
  },
  "Get-PnPSiteSensitivityLabel": {
    "description": "This cmdlet allows retrieval of the currently assigned Microsoft Purview sensitivity label to the currently connectected to site.",
    "prefix": [
      "Get-PnPSiteSensitivityLabel"
    ],
    "body": [
      "Get-PnPSiteSensitivityLabel "
    ]
  },
  "Get-PnPSiteTemplate": {
    "description": "Allows to generate a provisioning site template from a web.",
    "prefix": [
      "Get-PnPSiteTemplate"
    ],
    "body": [
      "Get-PnPSiteTemplate "
    ]
  },
  "Get-PnPSiteUserInvitations": {
    "description": "Searches against all stored sharing links on a Site and retrieves the email invites. If the site parameter is omitted the current site will be searched.",
    "prefix": [
      "Get-PnPSiteUserInvitations"
    ],
    "body": [
      "Get-PnPSiteUserInvitations "
    ]
  },
  "Get-PnPStorageEntity": {
    "description": "Allows to retrieve storage entities from either tenant app catalog or current site app catalog.",
    "prefix": [
      "Get-PnPStorageEntity"
    ],
    "body": [
      "Get-PnPStorageEntity "
    ]
  },
  "Get-PnPStoredCredential": {
    "description": "Returns a stored credential from the Windows Credential Manager or Mac OS Key Chain Entry.",
    "prefix": [
      "Get-PnPStoredCredential"
    ],
    "body": [
      "Get-PnPStoredCredential -Name $1"
    ]
  },
  "Get-PnPStructuralNavigationCacheSiteState": {
    "description": "The Get-PnPStructuralNavigationCacheSiteState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used.",
    "prefix": [
      "Get-PnPStructuralNavigationCacheSiteState"
    ],
    "body": [
      "Get-PnPStructuralNavigationCacheSiteState "
    ]
  },
  "Get-PnPStructuralNavigationCacheWebState": {
    "description": "The Get-PnPStructuralNavigationCacheWebState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a web in a site collection. If the WebUrl parameter has not been specified the currently connected to web will be used.",
    "prefix": [
      "Get-PnPStructuralNavigationCacheWebState"
    ],
    "body": [
      "Get-PnPStructuralNavigationCacheWebState "
    ]
  },
  "Get-PnPSubscribeSharePointNewsDigest": {
    "description": [
      "Requires a connection to a SharePoint Tenant Admin site.",
      "Retrieves if the SharePoint News Digest mails are enabled or disabled for a particular user."
    ],
    "prefix": [
      "Get-PnPSubscribeSharePointNewsDigest"
    ],
    "body": [
      "Get-PnPSubscribeSharePointNewsDigest -Account $1"
    ]
  },
  "Get-PnPSubWeb": {
    "description": "Allows to retrieve subwebs of the current web.",
    "prefix": [
      "Get-PnPSubWeb"
    ],
    "body": [
      "Get-PnPSubWeb "
    ]
  },
  "Get-PnPSyntexModel": {
    "description": "This command allows the retrieval of a Syntex document processing models defined in the connected Syntex Content Center site.",
    "prefix": [
      "Get-PnPSyntexModel"
    ],
    "body": [
      "Get-PnPSyntexModel "
    ]
  },
  "Get-PnPSyntexModelPublication": {
    "description": "This command returns the libraries to which a Syntex document processing model defined in the connected Syntex Content Center site was published.",
    "prefix": [
      "Get-PnPSyntexModelPublication"
    ],
    "body": [
      "Get-PnPSyntexModelPublication -Model $1"
    ]
  },
  "Get-PnPTaxonomyItem": {
    "description": "Provide the term path only and then the term item if found will be returned.",
    "prefix": [
      "Get-PnPTaxonomyItem"
    ],
    "body": [
      "Get-PnPTaxonomyItem "
    ]
  },
  "Get-PnPTaxonomySession": {
    "description": "Allows to retrieve taxonomy session.",
    "prefix": [
      "Get-PnPTaxonomySession"
    ],
    "body": [
      "Get-PnPTaxonomySession "
    ]
  },
  "Get-PnPTeamsApp": {
    "description": [
      "Allows to retrieve Microsoft Teams apps. By using Identity option it is possible to retrieve a specific app.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPTeamsApp"
    ],
    "body": [
      "Get-PnPTeamsApp "
    ]
  },
  "Get-PnPTeamsChannel": {
    "description": "Allows to retrieve list of channels for a specified team.",
    "prefix": [
      "Get-PnPTeamsChannel"
    ],
    "body": [
      "Get-PnPTeamsChannel -Team $1"
    ]
  },
  "Get-PnPTeamsChannelFilesFolder": {
    "description": "Allows to retrieve folder metadata for specified channel.",
    "prefix": [
      "Get-PnPTeamsChannelFilesFolder"
    ],
    "body": [
      "Get-PnPTeamsChannelFilesFolder "
    ]
  },
  "Get-PnPTeamsChannelMessage": {
    "description": "Allows to retrieve messages from the specified channel.",
    "prefix": [
      "Get-PnPTeamsChannelMessage"
    ],
    "body": [
      "Get-PnPTeamsChannelMessage -Team $1 -Channel $2"
    ]
  },
  "Get-PnPTeamsChannelMessageReply": {
    "description": "Allows to retrieve replies from the specified channel message.",
    "prefix": [
      "Get-PnPTeamsChannelMessageReply"
    ],
    "body": [
      "Get-PnPTeamsChannelMessageReply -Team $1 -Channel $2 -Message $3"
    ]
  },
  "Get-PnPTeamsChannelUser": {
    "description": "Allows to retrieve list of members of the specified private channel.",
    "prefix": [
      "Get-PnPTeamsChannelUser"
    ],
    "body": [
      "Get-PnPTeamsChannelUser -Team $1 -Channel $2"
    ]
  },
  "Get-PnPTeamsPrimaryChannel": {
    "description": "Gets the default channel, General, of a team.",
    "prefix": [
      "Get-PnPTeamsPrimaryChannel"
    ],
    "body": [
      "Get-PnPTeamsPrimaryChannel -Team $1"
    ]
  },
  "Get-PnPTeamsTab": {
    "description": [
      "Allows to retrieve tabs in channel. By using Identity it is possible to retrieve a specific single tab.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPTeamsTab"
    ],
    "body": [
      "Get-PnPTeamsTab -Team $1 -Channel $2"
    ]
  },
  "Get-PnPTeamsTag": {
    "description": "",
    "prefix": [
      "Get-PnPTeamsTag"
    ],
    "body": [
      "Get-PnPTeamsTag -Team $1"
    ]
  },
  "Get-PnPTeamsTeam": {
    "description": [
      "Allows to retrieve list of Microsoft Teams teams. By using Identity it is possible to retrieve a specific team, and by using Filter you can supply any filter queries supported by the Graph API.",
      "Identity",
      "Filter"
    ],
    "prefix": [
      "Get-PnPTeamsTeam"
    ],
    "body": [
      "Get-PnPTeamsTeam "
    ]
  },
  "Get-PnPTeamsUser": {
    "description": "Allows to retrieve list of owners, members or guests from a team.",
    "prefix": [
      "Get-PnPTeamsUser"
    ],
    "body": [
      "Get-PnPTeamsUser -Team $1"
    ]
  },
  "Get-PnPTemporarilyDisableAppBar": {
    "description": "Allows to retrieve disabled state of the SharePoint Online App Bar.",
    "prefix": [
      "Get-PnPTemporarilyDisableAppBar"
    ],
    "body": [
      "Get-PnPTemporarilyDisableAppBar "
    ]
  },
  "Get-PnPTenant": {
    "description": [
      "Returns organization-level site collection properties such as StorageQuota, StorageQuotaAllocated, ResourceQuota, ResourceQuotaAllocated, and SiteCreationMode.",
      "Currently, there are no parameters for this cmdlet.",
      "You must have the SharePoint Online admin or Global admin role to run the cmdlet."
    ],
    "prefix": [
      "Get-PnPTenant"
    ],
    "body": [
      "Get-PnPTenant "
    ]
  },
  "Get-PnPTenantAppCatalogUrl": {
    "description": "Allows to retrieve the url of the tenant scoped app catalog.",
    "prefix": [
      "Get-PnPTenantAppCatalogUrl"
    ],
    "body": [
      "Get-PnPTenantAppCatalogUrl "
    ]
  },
  "Get-PnPTenantCdnEnabled": {
    "description": "Enables or disabled the public or private Office 365 Content Delivery Network (CDN).",
    "prefix": [
      "Get-PnPTenantCdnEnabled"
    ],
    "body": [
      "Get-PnPTenantCdnEnabled -CdnType $1"
    ]
  },
  "Get-PnPTenantCdnOrigin": {
    "description": "Returns the current registered origins from the public or private content delivery network (CDN).",
    "prefix": [
      "Get-PnPTenantCdnOrigin"
    ],
    "body": [
      "Get-PnPTenantCdnOrigin -CdnType $1"
    ]
  },
  "Get-PnPTenantCdnPolicies": {
    "description": "Retrieves the current CDN policies for the tenant for the specified CDN type.",
    "prefix": [
      "Get-PnPTenantCdnPolicies"
    ],
    "body": [
      "Get-PnPTenantCdnPolicies -CdnType $1"
    ]
  },
  "Get-PnPTenantDeletedSite": {
    "description": "Fetches the site collection's which are listed in your tenant's recycle bin.",
    "prefix": [
      "Get-PnPTenantDeletedSite"
    ],
    "body": [
      "Get-PnPTenantDeletedSite "
    ]
  },
  "Get-PnPTenantId": {
    "description": "Allows to retrieve id of tenant. This does not require an active connection to that tenant.",
    "prefix": [
      "Get-PnPTenantId"
    ],
    "body": [
      "Get-PnPTenantId -TenantUrl $1"
    ]
  },
  "Get-PnPTenantInstance": {
    "description": "Allows to retrieve list of all instances of the tenant.",
    "prefix": [
      "Get-PnPTenantInstance"
    ],
    "body": [
      "Get-PnPTenantInstance "
    ]
  },
  "Get-PnPTenantRecycleBinItem": {
    "description": "This command will return all the items in the tenant recycle bin for the Office 365 tenant you are connected to. If you are not a SharePoint Tenant Admin connect to the site where you want to manage the recycle bin and use Get-PnPRecycleBinItem.",
    "prefix": [
      "Get-PnPTenantRecycleBinItem"
    ],
    "body": [
      "Get-PnPTenantRecycleBinItem "
    ]
  },
  "Get-PnPTenantSequence": {
    "description": [
      "Allows to retrieve provisioning sequence objects from a tenant template. By using Identity option it is possible to retrieve a specific provisioning sequence object.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPTenantSequence"
    ],
    "body": [
      "Get-PnPTenantSequence -Template $1"
    ]
  },
  "Get-PnPTenantSequenceSite": {
    "description": "Allows to retrieve list of sites from tenant template sequence.",
    "prefix": [
      "Get-PnPTenantSequenceSite"
    ],
    "body": [
      "Get-PnPTenantSequenceSite -Sequence $1"
    ]
  },
  "Get-PnPTenantServicePrincipal": {
    "description": "Returns the current tenant's \"SharePoint Online Client\" service principal.",
    "prefix": [
      "Get-PnPTenantServicePrincipal"
    ],
    "body": [
      "Get-PnPTenantServicePrincipal "
    ]
  },
  "Get-PnPTenantServicePrincipalPermissionGrants": {
    "description": [
      "Gets the collection of permission grants for the \"SharePoint Online Client\" service principal.",
      "A permission grant contains the following properties:",
      "ClientId: The objectId of the service principal granted consent to impersonate the user when accessing the resource(represented by the resourceId). \r\nConsentType: Whether consent was provided by the administrator on behalf of the organization or whether consent was provided by an individual.The possible values are \"AllPrincipals\" or \"Principal\". \r\nObjectId: The unique identifier for the permission grant. \r\nResource: The resource to which access has been granted (Coming soon) \r\nResourceId: The objectId of the resource service principal to which access has been granted. \r\nScope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. ",
      "ClientId: The objectId of the service principal granted consent to impersonate the user when accessing the resource(represented by the resourceId). ",
      "ConsentType: Whether consent was provided by the administrator on behalf of the organization or whether consent was provided by an individual.The possible values are \"AllPrincipals\" or \"Principal\". ",
      "ObjectId: The unique identifier for the permission grant. ",
      "Resource: The resource to which access has been granted (Coming soon) ",
      "ResourceId: The objectId of the resource service principal to which access has been granted. ",
      "Scope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. "
    ],
    "prefix": [
      "Get-PnPTenantServicePrincipalPermissionGrants"
    ],
    "body": [
      "Get-PnPTenantServicePrincipalPermissionGrants "
    ]
  },
  "Get-PnPTenantServicePrincipalPermissionRequests": {
    "description": [
      "Gets the collection of permission requests for the \"SharePoint Online Client\" service principal.",
      "Permission request object",
      "A permission request contains the following properties:",
      "Id: The identifier of the request. \r\nResource: The resource that the application requires access to. \r\nScope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. ",
      "Id: The identifier of the request. ",
      "Resource: The resource that the application requires access to. ",
      "Scope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. "
    ],
    "prefix": [
      "Get-PnPTenantServicePrincipalPermissionRequests"
    ],
    "body": [
      "Get-PnPTenantServicePrincipalPermissionRequests "
    ]
  },
  "Get-PnPTenantSite": {
    "description": "This cmdlet allows for retrieval of site collection information through the SharePoint Online tenant site. It requires having SharePoint Online administrator access.",
    "prefix": [
      "Get-PnPTenantSite"
    ],
    "body": [
      "Get-PnPTenantSite "
    ]
  },
  "Get-PnPTenantSyncClientRestriction": {
    "description": [
      "Returns organization-level OneDrive synchronization restriction properties such as BlockMacSync, OptOutOfGrooveBlock, and TenantRestrictionEnabled.",
      "Currently, there are no parameters for this cmdlet.",
      "You must have the SharePoint Online admin or Global admin role to run the cmdlet."
    ],
    "prefix": [
      "Get-PnPTenantSyncClientRestriction"
    ],
    "body": [
      "Get-PnPTenantSyncClientRestriction "
    ]
  },
  "Get-PnPTenantTemplate": {
    "description": "Allows to generate a provisioning tenant template from a site. If the site is a hubsite any connected site will be included.",
    "prefix": [
      "Get-PnPTenantTemplate"
    ],
    "body": [
      "Get-PnPTenantTemplate "
    ]
  },
  "Get-PnPTenantTheme": {
    "description": "Returns all or a specific tenant theme.",
    "prefix": [
      "Get-PnPTenantTheme"
    ],
    "body": [
      "Get-PnPTenantTheme "
    ]
  },
  "Get-PnPTerm": {
    "description": "Retries a Term Store Term.",
    "prefix": [
      "Get-PnPTerm"
    ],
    "body": [
      "Get-PnPTerm -Identity $1"
    ]
  },
  "Get-PnPTermGroup": {
    "description": "Allows to retrieve a taxonomy term group.",
    "prefix": [
      "Get-PnPTermGroup"
    ],
    "body": [
      "Get-PnPTermGroup "
    ]
  },
  "Get-PnPTermLabel": {
    "description": "This cmdlets allows to retrieve all or a specific translation label for a term",
    "prefix": [
      "Get-PnPTermLabel"
    ],
    "body": [
      "Get-PnPTermLabel -Term $1"
    ]
  },
  "Get-PnPTermSet": {
    "description": "This cmdlet returns a termset from the taxonomy store.",
    "prefix": [
      "Get-PnPTermSet"
    ],
    "body": [
      "Get-PnPTermSet "
    ]
  },
  "Get-PnPTheme": {
    "description": "Allows to retrieve current theme/composed look of the current web.",
    "prefix": [
      "Get-PnPTheme"
    ],
    "body": [
      "Get-PnPTheme "
    ]
  },
  "Get-PnPTimeZoneId": {
    "description": "In order to create a new classic site you need to specify the timezone this site will use. Use the cmdlet to retrieve a list of possible values.",
    "prefix": [
      "Get-PnPTimeZoneId"
    ],
    "body": [
      "Get-PnPTimeZoneId "
    ]
  },
  "Get-PnPUnifiedAuditLog": {
    "description": "Allows to retrieve unified audit logs from the Office 365 Management API.",
    "prefix": [
      "Get-PnPUnifiedAuditLog"
    ],
    "body": [
      "Get-PnPUnifiedAuditLog "
    ]
  },
  "Get-PnPUPABulkImportStatus": {
    "description": "Retrieve information about the status of submitted user profile bulk upload jobs.",
    "prefix": [
      "Get-PnPUPABulkImportStatus"
    ],
    "body": [
      "Get-PnPUPABulkImportStatus "
    ]
  },
  "Get-PnPUser": {
    "description": "This command will return all users that exist in the current site collection's User Information List, optionally identifying their current permissions to this site",
    "prefix": [
      "Get-PnPUser"
    ],
    "body": [
      "Get-PnPUser "
    ]
  },
  "Get-PnPUserOneDriveQuota": {
    "description": "This command allows you to request the quota set on the OneDrive for Business site of a specific user.",
    "prefix": [
      "Get-PnPUserOneDriveQuota"
    ],
    "body": [
      "Get-PnPUserOneDriveQuota "
    ]
  },
  "Get-PnPUserProfileProperty": {
    "description": "Requires a connection to a SharePoint Tenant Admin site.",
    "prefix": [
      "Get-PnPUserProfileProperty"
    ],
    "body": [
      "Get-PnPUserProfileProperty "
    ]
  },
  "Get-PnPView": {
    "description": [
      "Allows to retrieve list of views from a list. By using Identity option it is possible to retrieve a specific view.",
      "Identity"
    ],
    "prefix": [
      "Get-PnPView"
    ],
    "body": [
      "Get-PnPView "
    ]
  },
  "Get-PnPVivaConnectionsDashboardACE": {
    "description": "Allows to retrieve the adaptive card extensions from the Viva connections dashboard page.",
    "prefix": [
      "Get-PnPVivaConnectionsDashboardACE"
    ],
    "body": [
      "Get-PnPVivaConnectionsDashboardACE "
    ]
  },
  "Get-PnPWeb": {
    "description": "Allows to retrieve the current web.",
    "prefix": [
      "Get-PnPWeb"
    ],
    "body": [
      "Get-PnPWeb "
    ]
  },
  "Get-PnPWebHeader": {
    "description": "Through this cmdlet the current configuration of the various options offered through \"Change the look\" Header can be retrieved.",
    "prefix": [
      "Get-PnPWebHeader"
    ],
    "body": [
      "Get-PnPWebHeader "
    ]
  },
  "Get-PnPWebhookSubscriptions": {
    "description": "Allows to retrieve Webhook subscriptions of specified list.",
    "prefix": [
      "Get-PnPWebhookSubscriptions"
    ],
    "body": [
      "Get-PnPWebhookSubscriptions "
    ]
  },
  "Get-PnPWebPart": {
    "description": "Allows retrieval of the definition of a webpart on a classic SharePoint Online page.",
    "prefix": [
      "Get-PnPWebPart"
    ],
    "body": [
      "Get-PnPWebPart -ServerRelativePageUrl $1"
    ]
  },
  "Get-PnPWebPartProperty": {
    "description": "Allows to retrieve web part property.",
    "prefix": [
      "Get-PnPWebPartProperty"
    ],
    "body": [
      "Get-PnPWebPartProperty -ServerRelativePageUrl $1 -Identity $2"
    ]
  },
  "Get-PnPWebPartXml": {
    "description": "Allows to retrieve web part XML defintion.",
    "prefix": [
      "Get-PnPWebPartXml"
    ],
    "body": [
      "Get-PnPWebPartXml -ServerRelativePageUrl $1 -Identity $2"
    ]
  },
  "Get-PnPWebTemplates": {
    "description": "Will list all available classic templates one can use to create a site. Modern templates will not be returned.",
    "prefix": [
      "Get-PnPWebTemplates"
    ],
    "body": [
      "Get-PnPWebTemplates "
    ]
  },
  "Get-PnPWikiPageContent": {
    "description": "Allows to retrieve contents/source of a wiki page.",
    "prefix": [
      "Get-PnPWikiPageContent"
    ],
    "body": [
      "Get-PnPWikiPageContent "
    ]
  },
  "Grant-PnPAzureADAppSitePermission": {
    "description": [
      "This cmdlet adds permissions for a given Azure Active Directory application registration in a site collection. It is used in conjunction with the Azure Active Directory SharePoint application permission Sites.Selected. Notice that this cmdlet allows for fewer permissions compared for when updating rights through Set-PnPAzureADAppSitePermission. If you wish to i.e. assign FullControl permissions, you need to add read or write permissions through this cmdlet first and then update it to FullControl.",
      "Set-PnPAzureADAppSitePermission"
    ],
    "prefix": [
      "Grant-PnPAzureADAppSitePermission"
    ],
    "body": [
      "Grant-PnPAzureADAppSitePermission -AppId $1 -DisplayName $2 -Permissions $3"
    ]
  },
  "Grant-PnPHubSiteRights": {
    "description": "Allows to add additional permissions to existing once to associate sites to Hub Sites for specified users.",
    "prefix": [
      "Grant-PnPHubSiteRights"
    ],
    "body": [
      "Grant-PnPHubSiteRights "
    ]
  },
  "Grant-PnPSiteDesignRights": {
    "description": "Allows to grant permission to use the site design for specified principal.",
    "prefix": [
      "Grant-PnPSiteDesignRights"
    ],
    "body": [
      "Grant-PnPSiteDesignRights "
    ]
  },
  "Grant-PnPTenantServicePrincipalPermission": {
    "description": "Allows to grant a specified permission o the \"SharePoint Online Client Extensibility Web Application Principal\" service principal for SPFx solutions.",
    "prefix": [
      "Grant-PnPTenantServicePrincipalPermission"
    ],
    "body": [
      "Grant-PnPTenantServicePrincipalPermission -Scope $1"
    ]
  },
  "Import-PnPTaxonomy": {
    "description": "Allows to import taxonomy terms from array or file.",
    "prefix": [
      "Import-PnPTaxonomy"
    ],
    "body": [
      "Import-PnPTaxonomy "
    ]
  },
  "Import-PnPTermGroupFromXml": {
    "description": "Allows to import taxonomy term group from xml.",
    "prefix": [
      "Import-PnPTermGroupFromXml"
    ],
    "body": [
      "Import-PnPTermGroupFromXml "
    ]
  },
  "Import-PnPTermSet": {
    "description": [
      "The format of the file is the same as that used by the import function in the web interface. A sample file can be obtained from the web interface.",
      "This is a CSV file, with the following headings:",
      "Term Set Name,Term Set Description,LCID,Available for Tagging,Term Description,Level 1 Term,Level 2 Term,Level 3 Term,Level 4 Term,Level 5 Term,Level 6 Term,Level 7 Term",
      "The first data row must contain the Term Set Name, Term Set Description, and LCID, and should also contain the first term.",
      "It is recommended that a fixed GUID be used as the termSetId, to allow the term set to be easily updated (so do not pass Guid.Empty).",
      "In contrast to the web interface import, this is not a one-off import but runs synchronization logic allowing updating of an existing Term Set. When synchronizing, any existing terms are matched (with Term Description and Available for Tagging updated as necessary), any new terms are added in the correct place in the hierarchy, and (if synchronizeDeletions is set) any terms not in the imported file are removed.",
      "The import file also supports an expanded syntax for the Term Set Name and term names (Level 1 Term, Level 2 Term, etc). These columns support values with the format 'Name | GUID', with the name and GUID separated by a pipe character (note that the pipe character is invalid to use within a taxonomy item name). This expanded syntax is not required, but can be used to ensure all terms have fixed IDs."
    ],
    "prefix": [
      "Import-PnPTermSet"
    ],
    "body": [
      "Import-PnPTermSet -GroupName $1 -Path $2"
    ]
  },
  "Install-PnPApp": {
    "description": "Allows to install an available app from the app catalog.",
    "prefix": [
      "Install-PnPApp"
    ],
    "body": [
      "Install-PnPApp "
    ]
  },
  "Invoke-PnPBatch": {
    "description": "Executes any queued actions / changes in the batch.",
    "prefix": [
      "Invoke-PnPBatch"
    ],
    "body": [
      "Invoke-PnPBatch "
    ]
  },
  "Invoke-PnPGraphMethod": {
    "description": "Invokes a REST request towards the Microsoft Graph API",
    "prefix": [
      "Invoke-PnPGraphMethod"
    ],
    "body": [
      "Invoke-PnPGraphMethod -Url $1"
    ]
  },
  "Invoke-PnPListDesign": {
    "description": "Applies the List Design provided through Identity to an existing site.",
    "prefix": [
      "Invoke-PnPListDesign"
    ],
    "body": [
      "Invoke-PnPListDesign "
    ]
  },
  "Invoke-PnPQuery": {
    "description": "Executes any queued actions / changes on the SharePoint Client Side Object Model Context",
    "prefix": [
      "Invoke-PnPQuery"
    ],
    "body": [
      "Invoke-PnPQuery "
    ]
  },
  "Invoke-PnPSiteDesign": {
    "description": "Applies the Site Design provided through Identity to an existing site. When providing a site design name and multiple site designs exist with the same name, all of them will be invoked.",
    "prefix": [
      "Invoke-PnPSiteDesign"
    ],
    "body": [
      "Invoke-PnPSiteDesign "
    ]
  },
  "Invoke-PnPSiteScript": {
    "description": [
      "Applies the Site Design provided through Identity to an existing site. When providing a site design name and multiple site designs exist with the same name, all of them will be invoked and applied. It is also possible to provide a site script directly without having to add it as a site script first. This could be ideal for making quick one time copies of i.e. lists and sites.",
      "When passing in a site script through -Script, you only need to have permissions to the site you are applying the site script to. When passing in a site script through -Identity, you need to be connected to the SharePoint Online admin site collection and have rights to access it. Using the -WebUrl you can specify the full URL of the site collection you wish to apply the site script to.",
      "The output provided by this cmdlet are the site script actions that have been applied along with for each of them information on if they were successfully applied."
    ],
    "prefix": [
      "Invoke-PnPSiteScript"
    ],
    "body": [
      "Invoke-PnPSiteScript -Identity $1 -WebUrl $2"
    ]
  },
  "Invoke-PnPSiteSwap": {
    "description": [
      "Swaps the location of a source site with a target site while archiving the original target site.",
      "Please note, the target site must be either:",
      "The root site, for example https://tenant-name.sharepoint.com; or \r\nThe search center site, for example https://tenant-name.sharepoint.com/search. ",
      "The root site, for example https://tenant-name.sharepoint.com; or ",
      "The search center site, for example https://tenant-name.sharepoint.com/search. ",
      "https://tenant-name.sharepoint.com/search",
      "When the swap is initiated, the target site is moved to the archive location and the source site is moved to the target location. By default, a site redirect is created at the source location that will redirect traffic to the target location.",
      "If the target is the root site at https://tenant-name.sharepoint.com, then the following preparation activities should be performed prior to performing the swap:",
      "https://tenant-name.sharepoint.com",
      "Any Featured links defined in SharePoint Start Page at https://tenant-name.sharepoint.com/_layouts/15/sharepoint.aspx will not be displayed after performing the swap. If required, the Featured links should be documented so they can be manually recreated after the swap. \r\nFunctionality such as external sharing and application interfaces are dependent on the policies and permissions defined at the root site. Review the source site to ensure that it has the required policies and permissions as per the existing root site. This includes external sharing settings as well as site permissions. \r\nLarger tenants that have more than ~10,000 licenses may also need to run the Page Diagnostic Tool against the source site. Any analysis results that have the category Attention required (Red) or Improvement opprtunities (Orange) will need to be remediated before performing the swap. ",
      "Any Featured links defined in SharePoint Start Page at https://tenant-name.sharepoint.com/_layouts/15/sharepoint.aspx will not be displayed after performing the swap. If required, the Featured links should be documented so they can be manually recreated after the swap. ",
      "https://tenant-name.sharepoint.com/_layouts/15/sharepoint.aspx",
      "Functionality such as external sharing and application interfaces are dependent on the policies and permissions defined at the root site. Review the source site to ensure that it has the required policies and permissions as per the existing root site. This includes external sharing settings as well as site permissions. ",
      "Larger tenants that have more than ~10,000 licenses may also need to run the Page Diagnostic Tool against the source site. Any analysis results that have the category Attention required (Red) or Improvement opprtunities (Orange) will need to be remediated before performing the swap. ",
      "The source and target sites can't be connected to an Office 365 group. They also can't be hub sites or associated with a hub. If a site is a hub site, unregister it as a hub site, swap the root site, and then register the site as a hub site. If a site is associated with a hub, disassociate the site, swap the root site, and then reassociate the site."
    ],
    "prefix": [
      "Invoke-PnPSiteSwap"
    ],
    "body": [
      "Invoke-PnPSiteSwap -SourceUrl $1 -TargetUrl $2 -ArchiveUrl $3"
    ]
  },
  "Invoke-PnPSiteTemplate": {
    "description": "Allows to apply a site template on a web.",
    "prefix": [
      "Invoke-PnPSiteTemplate"
    ],
    "body": [
      "Invoke-PnPSiteTemplate "
    ]
  },
  "Invoke-PnPSPRestMethod": {
    "description": "Invokes a REST request towards a SharePoint site",
    "prefix": [
      "Invoke-PnPSPRestMethod"
    ],
    "body": [
      "Invoke-PnPSPRestMethod -Url $1"
    ]
  },
  "Invoke-PnPTenantTemplate": {
    "description": "Allows to apply a tenant template on current tenant.",
    "prefix": [
      "Invoke-PnPTenantTemplate"
    ],
    "body": [
      "Invoke-PnPTenantTemplate "
    ]
  },
  "Invoke-PnPWebAction": {
    "description": "Allows to execute operations on web, lists and list items.",
    "prefix": [
      "Invoke-PnPWebAction"
    ],
    "body": [
      "Invoke-PnPWebAction "
    ]
  },
  "Measure-PnPList": {
    "description": "Allows to retrieve statistics on specified list. The command may fail on lists larger than the list view threshold.",
    "prefix": [
      "Measure-PnPList"
    ],
    "body": [
      "Measure-PnPList "
    ]
  },
  "Measure-PnPWeb": {
    "description": [
      "Allows to retrieve statistics on specified web. By specifing Recursive it is possible to retrieve statistics on all subwebs as well.",
      "Recursive"
    ],
    "prefix": [
      "Measure-PnPWeb"
    ],
    "body": [
      "Measure-PnPWeb "
    ]
  },
  "Move-PnPFile": {
    "description": [
      "Allows moving a file or folder to a different location inside the same document library, such as in a subfolder, to a different document library on the same site collection or to a document library on another site collection. If you move a file to a different site or subweb you cannot specify a target filename.",
      "Moving files and folders is bound to some restrictions. You can find more on it here: https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites",
      "https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites"
    ],
    "prefix": [
      "Move-PnPFile"
    ],
    "body": [
      "Move-PnPFile "
    ]
  },
  "Move-PnPFolder": {
    "description": "Allows to move folder to another location in the current web. If you want to move a folder to a different site collection, use the Move-PnPFile cmdlet instead, which also supports moving folders and also accross site collections. Move-PnPFolder can be used to move folders that are within the list view threshold, the commandlet will fail if the list view threshold is exceeded.",
    "prefix": [
      "Move-PnPFolder"
    ],
    "body": [
      "Move-PnPFolder -Folder $1 -TargetFolder $2"
    ]
  },
  "Move-PnPListItemToRecycleBin": {
    "description": "Allows to move an item to the recycle bin.",
    "prefix": [
      "Move-PnPListItemToRecycleBin"
    ],
    "body": [
      "Move-PnPListItemToRecycleBin "
    ]
  },
  "Move-PnPPageComponent": {
    "description": "Moves a component to a different location on the page. Notice that the sections and or columns need to be present before moving the component.",
    "prefix": [
      "Move-PnPPageComponent"
    ],
    "body": [
      "Move-PnPPageComponent "
    ]
  },
  "Move-PnPRecycleBinItem": {
    "description": "",
    "prefix": [
      "Move-PnPRecycleBinItem"
    ],
    "body": [
      "Move-PnPRecycleBinItem "
    ]
  },
  "New-PnPAzureADGroup": {
    "description": "Allows to create an Azure Active Directory group. This can be either security or distribution group.",
    "prefix": [
      "New-PnPAzureADGroup"
    ],
    "body": [
      "New-PnPAzureADGroup -DisplayName $1 -Description $2 -MailNickname $3"
    ]
  },
  "New-PnPAzureADUserTemporaryAccessPass": {
    "description": [
      "This cmdlet allows creation of a temporary access pass for a specific user to allow the user to log on once using the generated token. This can be used i.e. when the user needs to sign in to replace the multi factor authentication token.",
      "You can read more on how to enable Temporary Access Pass in Azure Active Directory in this article. It is disabled by default on Azure Active Directory.",
      "this article"
    ],
    "prefix": [
      "New-PnPAzureADUserTemporaryAccessPass"
    ],
    "body": [
      "New-PnPAzureADUserTemporaryAccessPass -DisplayName $1 -Description $2 -MailNickname $3"
    ]
  },
  "New-PnPAzureCertificate": {
    "description": "Allows to create a self-signed certificate and manifest settings to be used with CSOM via an app-only ADAL application.",
    "prefix": [
      "New-PnPAzureCertificate"
    ],
    "body": [
      "New-PnPAzureCertificate "
    ]
  },
  "New-PnPBatch": {
    "description": "Creates a new batch to be used by cmdlets that support batching. The requests in the batch are clear after execute Invoke-PnPBatch, unless you specify -RetainRequests. That allows you to execute batch multiple times.",
    "prefix": [
      "New-PnPBatch"
    ],
    "body": [
      "New-PnPBatch "
    ]
  },
  "New-PnPExtensibilityHandlerObject": {
    "description": "Allows to create an ExtensibilityHandler.",
    "prefix": [
      "New-PnPExtensibilityHandlerObject"
    ],
    "body": [
      "New-PnPExtensibilityHandlerObject "
    ]
  },
  "New-PnPGraphSubscription": {
    "description": [
      "Creates a new Microsof Graph Subscription. The required Azure Active Directory application permission depends on the resource creating the subscription for, see https://learn.microsoft.com/graph/api/subscription-post-subscriptions#permissions. For a sample ASP.NET WebApi webhook implementation to receive the notifications from Microsoft Graph, see https://github.com/microsoftgraph/msgraph-training-changenotifications/blob/b8d21ca7aa5feeece336287c9a781e71b7ba01c6/demos/01-create-application/Controllers/NotificationsController.cs#L51.",
      "https://learn.microsoft.com/graph/api/subscription-post-subscriptions#permissions",
      "https://github.com/microsoftgraph/msgraph-training-changenotifications/blob/b8d21ca7aa5feeece336287c9a781e71b7ba01c6/demos/01-create-application/Controllers/NotificationsController.cs#L51"
    ],
    "prefix": [
      "New-PnPGraphSubscription"
    ],
    "body": [
      "New-PnPGraphSubscription -ChangeType $1 -NotificationUrl $2 -Resource $3"
    ]
  },
  "New-PnPGroup": {
    "description": "This command creates a SharePoint group in the current Site Collection connected to.",
    "prefix": [
      "New-PnPGroup"
    ],
    "body": [
      "New-PnPGroup -Title $1"
    ]
  },
  "New-PnPList": {
    "description": "Allows to create a new list.",
    "prefix": [
      "New-PnPList"
    ],
    "body": [
      "New-PnPList -Title $1 -Template $2"
    ]
  },
  "New-PnPMicrosoft365Group": {
    "description": "Allows to create a new Microsoft 365 Group.",
    "prefix": [
      "New-PnPMicrosoft365Group"
    ],
    "body": [
      "New-PnPMicrosoft365Group -DisplayName $1 -Description $2 -MailNickname $3"
    ]
  },
  "New-PnPMicrosoft365GroupSettings": {
    "description": "Allows to create a new Microsoft 365 Group setting for a specific group or the tenant.",
    "prefix": [
      "New-PnPMicrosoft365GroupSettings"
    ],
    "body": [
      "New-PnPMicrosoft365GroupSettings -Identity $1 -DisplayName $2 -TemplateId $3 -Values $4"
    ]
  },
  "New-PnPPersonalSite": {
    "description": [
      "Creates a OneDrive For Business site for the provided user(s)",
      "If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permisson to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx:",
      "must",
      "https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx",
      "https://tenant-admin.sharepoint.com/_layouts/appinv.aspx",
      "<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>",
      "<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>",
      "You then must connect using:",
      "must",
      "Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret>",
      "Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret>",
      "Authenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory.",
      "not",
      "If you want to run this cmdlet using an interactive login, you must connect using:",
      "must",
      "Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin",
      "Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin"
    ],
    "prefix": [
      "New-PnPPersonalSite"
    ],
    "body": [
      "New-PnPPersonalSite "
    ]
  },
  "New-PnPPlannerPlan": {
    "description": "This cmdlet creates a new Planner plan.",
    "prefix": [
      "New-PnPPlannerPlan"
    ],
    "body": [
      "New-PnPPlannerPlan -Group $1 -Title $2"
    ]
  },
  "New-PnPSdnProvider": {
    "description": "This Cmdlet creates a new Software-Defined Networking, and it receives two parameters, the Identity (ID) of the Hive and the License key of the Hive.",
    "prefix": [
      "New-PnPSdnProvider"
    ],
    "body": [
      "New-PnPSdnProvider -Identity $1 -License $2"
    ]
  },
  "New-PnPSite": {
    "description": "The New-PnPSite cmdlet creates a new site collection for the current tenant. Currently only 'modern' sites like Communication Site , Modern Microsoft 365 group-connected team sites and Modern Team sites not connected to M365 groups are supported. If you want to create a classic site, use New-PnPTenantSite. Note that the -Type parameter is mandatory to be used to indicate which type of site you would like to create. Based on the type of site you specify, you will be able to provide the additional arguments that are valid for that site type, so it is recommended to provide this as the first argument.",
    "prefix": [
      "New-PnPSite"
    ],
    "body": [
      "New-PnPSite -Type $1 -Title $2 -Alias $3"
    ]
  },
  "New-PnPSiteCollectionTermStore": {
    "description": "The site collection scoped term store will be created if it does not exist yet. If it does already exist for the currently connected to site collection, it will return the existing instance.",
    "prefix": [
      "New-PnPSiteCollectionTermStore"
    ],
    "body": [
      "New-PnPSiteCollectionTermStore "
    ]
  },
  "New-PnPSiteGroup": {
    "description": "A SharePoint group is a set of individual users. SharePoint groups enable you to manage sets of users instead of individual users.",
    "prefix": [
      "New-PnPSiteGroup"
    ],
    "body": [
      "New-PnPSiteGroup -Name $1 -PermissionLevels $2"
    ]
  },
  "New-PnPSiteTemplate": {
    "description": "Allows to create a new provisioning site template.",
    "prefix": [
      "New-PnPSiteTemplate"
    ],
    "body": [
      "New-PnPSiteTemplate "
    ]
  },
  "New-PnPSiteTemplateFromFolder": {
    "description": "Allows to create a new provisioning site template based on a given folder, including files present in it.",
    "prefix": [
      "New-PnPSiteTemplateFromFolder"
    ],
    "body": [
      "New-PnPSiteTemplateFromFolder "
    ]
  },
  "New-PnPTeamsApp": {
    "description": "Allows to add an app to the Teams App Catalog.",
    "prefix": [
      "New-PnPTeamsApp"
    ],
    "body": [
      "New-PnPTeamsApp -Path $1"
    ]
  },
  "New-PnPTeamsTeam": {
    "description": "Allows to create new team in Microsoft Teams or to teamify an existing Microsoft 365 Group. If the Microsoft 365 Group does not exist yet, it will create it first and then add a Microsoft Teams team to the group.",
    "prefix": [
      "New-PnPTeamsTeam"
    ],
    "body": [
      "New-PnPTeamsTeam -GroupId $1"
    ]
  },
  "New-PnPTenantSequence": {
    "description": "Allows to create a new tenant sequence object.",
    "prefix": [
      "New-PnPTenantSequence"
    ],
    "body": [
      "New-PnPTenantSequence "
    ]
  },
  "New-PnPTenantSequenceCommunicationSite": {
    "description": "Allows to create a new communication site object.",
    "prefix": [
      "New-PnPTenantSequenceCommunicationSite"
    ],
    "body": [
      "New-PnPTenantSequenceCommunicationSite -Url $1 -Title $2"
    ]
  },
  "New-PnPTenantSequenceTeamNoGroupSite": {
    "description": "Allows to create a new site without a Microsoft 365 group in-memory object.",
    "prefix": [
      "New-PnPTenantSequenceTeamNoGroupSite"
    ],
    "body": [
      "New-PnPTenantSequenceTeamNoGroupSite -Url $1 -Title $2 -TimeZoneId $3"
    ]
  },
  "New-PnPTenantSequenceTeamNoGroupSubSite": {
    "description": "Allows to create a new team site subsite with no Microsoft 365 group object.",
    "prefix": [
      "New-PnPTenantSequenceTeamNoGroupSubSite"
    ],
    "body": [
      "New-PnPTenantSequenceTeamNoGroupSubSite -Url $1 -Title $2 -TimeZoneId $3"
    ]
  },
  "New-PnPTenantSequenceTeamSite": {
    "description": "Allows to create a new team site object.",
    "prefix": [
      "New-PnPTenantSequenceTeamSite"
    ],
    "body": [
      "New-PnPTenantSequenceTeamSite -Alias $1 -Title $2"
    ]
  },
  "New-PnPTenantSite": {
    "description": "The New-PnPTenantSite cmdlet creates a new site collection for the current company. However, creating a new SharePoint Online site collection fails if a deleted site with the same URL exists in the Recycle Bin",
    "prefix": [
      "New-PnPTenantSite"
    ],
    "body": [
      "New-PnPTenantSite -Title $1 -Url $2 -Owner $3"
    ]
  },
  "New-PnPTenantTemplate": {
    "description": "Allows to create a new tenant template object.",
    "prefix": [
      "New-PnPTenantTemplate"
    ],
    "body": [
      "New-PnPTenantTemplate "
    ]
  },
  "New-PnPTerm": {
    "description": "This cmdlet adds a new taxonony term to a given termset.",
    "prefix": [
      "New-PnPTerm"
    ],
    "body": [
      "New-PnPTerm -Name $1"
    ]
  },
  "New-PnPTermGroup": {
    "description": "Allows to create a taxonomy term group.",
    "prefix": [
      "New-PnPTermGroup"
    ],
    "body": [
      "New-PnPTermGroup -Name $1"
    ]
  },
  "New-PnPTermLabel": {
    "description": "Creates a localized label for a taxonomy term. Use Get-PnPTerm -Include Labels to request the current labels on a taxonomy term.",
    "prefix": [
      "New-PnPTermLabel"
    ],
    "body": [
      "New-PnPTermLabel -Term $1 -Name $2 -Lcid $3"
    ]
  },
  "New-PnPTermSet": {
    "description": "Allows to create a taxonomy term set.",
    "prefix": [
      "New-PnPTermSet"
    ],
    "body": [
      "New-PnPTermSet -Name $1"
    ]
  },
  "New-PnPUPABulkImportJob": {
    "description": [
      "See https://learn.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online for information on the API and how the bulk import process works.",
      "https://learn.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online"
    ],
    "prefix": [
      "New-PnPUPABulkImportJob"
    ],
    "body": [
      "New-PnPUPABulkImportJob "
    ]
  },
  "New-PnPUser": {
    "description": "Allows to add a user to current site.",
    "prefix": [
      "New-PnPUser"
    ],
    "body": [
      "New-PnPUser -LoginName $1"
    ]
  },
  "New-PnPWeb": {
    "description": "Allows to create new subweb under the current web.",
    "prefix": [
      "New-PnPWeb"
    ],
    "body": [
      "New-PnPWeb -Title $1 -Url $2"
    ]
  },
  "Publish-PnPApp": {
    "description": "Allows to deploy/trust an available app in the app catalog.",
    "prefix": [
      "Publish-PnPApp"
    ],
    "body": [
      "Publish-PnPApp "
    ]
  },
  "Publish-PnPCompanyApp": {
    "description": "This cmdlet publishes a new company app (Microsoft Viva Connections) to Microsoft Teams. It will create a new package (zip file) in the current folder named after the CompanyApp value specified. E.g. if the name is 'Contoso Portal', the package will be called \"Contoso Portal.zip\". This package will be uploaded to the Teams App Catalog. If you do not want to upload the package automatically, e.g. prepare a package ahead of time, specify '-NoUpload'.",
    "prefix": [
      "Publish-PnPCompanyApp"
    ],
    "body": [
      "Publish-PnPCompanyApp -PortalUrl $1 -AppName $2"
    ]
  },
  "Publish-PnPContentType": {
    "description": "Allows to publish a content type present on content type hub site.",
    "prefix": [
      "Publish-PnPContentType"
    ],
    "body": [
      "Publish-PnPContentType -ContentType $1"
    ]
  },
  "Publish-PnPSyntexModel": {
    "description": "This command publishes Syntex document processing models to a list.",
    "prefix": [
      "Publish-PnPSyntexModel"
    ],
    "body": [
      "Publish-PnPSyntexModel -Model $1 -ListWebUrl $2 -List $3"
    ]
  },
  "Read-PnPSiteTemplate": {
    "description": "This cmdlet allows you to read a PnP Provisioning Template from disk, by passing in XML as text or from a stream to keep it in memory and not needing to physically save the template anywhere. The template can be modified in memory if needed and then applied to a site.",
    "prefix": [
      "Read-PnPSiteTemplate"
    ],
    "body": [
      "Read-PnPSiteTemplate "
    ]
  },
  "Read-PnPTenantTemplate": {
    "description": "Allows to load a PnP tenant template from the file system to memory and return its instance object.",
    "prefix": [
      "Read-PnPTenantTemplate"
    ],
    "body": [
      "Read-PnPTenantTemplate "
    ]
  },
  "Receive-PnPCopyMoveJobStatus": {
    "description": "This cmdlets outputs the results of a pending/finished copy or move job.",
    "prefix": [
      "Receive-PnPCopyMoveJobStatus"
    ],
    "body": [
      "Receive-PnPCopyMoveJobStatus -Job $1"
    ]
  },
  "Register-PnPAppCatalogSite": {
    "description": "Allows to create a new App Catalog Site and sets this site as the Tenant App Catalog.",
    "prefix": [
      "Register-PnPAppCatalogSite"
    ],
    "body": [
      "Register-PnPAppCatalogSite -Url $1 -Owner $2 -TimeZoneId $3"
    ]
  },
  "Register-PnPAzureADApp": {
    "description": [
      "Registers an Azure AD App and optionally creates a new self-signed certificate to use with the application registration. You can login either with username/password or you can use the -DeviceLogin option if your tenant has been configured for Multi-Factor Authentication.",
      "Note: if you want to use the newly created app to authentication with username/password you will have to make a modification to the app. Navigate to the application registration in your Azure AD, select the Authentication section, and set Allow public client flows to yes. Alternatively, navigate to the Manifest section and set allowPublicClient to true.",
      "Allow public client flows",
      "yes",
      "Manifest",
      "allowPublicClient",
      "true"
    ],
    "prefix": [
      "Register-PnPAzureADApp"
    ],
    "body": [
      "Register-PnPAzureADApp -ApplicationName $1 -Tenant $2"
    ]
  },
  "Register-PnPHubSite": {
    "description": "Registers a site as a hubsite",
    "prefix": [
      "Register-PnPHubSite"
    ],
    "body": [
      "Register-PnPHubSite -Site $1"
    ]
  },
  "Register-PnPManagementShellAccess": {
    "description": "This cmdlet grants access to the tenant for the PnP Management Shell Multi-Tenant Azure AD Application which simplifies the use of OAuth based access for PnP PowerShell when using credentials to authenticate. If you are not an administrator that can consent Azure AD Applications, use the -ShowConsentUrl option. It will ask you to log in and provides you with an URL you can share with a person with appropriate access rights to provide consent for the organization.",
    "prefix": [
      "Register-PnPManagementShellAccess"
    ],
    "body": [
      "Register-PnPManagementShellAccess "
    ]
  },
  "Remove-PnPAdaptiveScopeProperty": {
    "description": [
      "This cmdlet is used to remove a property bag value. Executing this cmdlet removes a value from the current web property bag just like Remove-PnPPropertyBagValue would do, but also takes care of toggling the noscript value to allow for this to be possible in one cmdlet. Using this cmdlet does therefore require having the SharePoint Online Admin role or equivallent app permissions.",
      "Remove-PnPPropertyBagValue"
    ],
    "prefix": [
      "Remove-PnPAdaptiveScopeProperty"
    ],
    "body": [
      "Remove-PnPAdaptiveScopeProperty "
    ]
  },
  "Remove-PnPAlert": {
    "description": "Allows to remove an alert for a user.",
    "prefix": [
      "Remove-PnPAlert"
    ],
    "body": [
      "Remove-PnPAlert "
    ]
  },
  "Remove-PnPApp": {
    "description": "Allows to remove an app from the app catalog.",
    "prefix": [
      "Remove-PnPApp"
    ],
    "body": [
      "Remove-PnPApp "
    ]
  },
  "Remove-PnPApplicationCustomizer": {
    "description": "Removes a SharePoint Framework client side extension application customizer by removing a user custom action from a web or sitecollection",
    "prefix": [
      "Remove-PnPApplicationCustomizer"
    ],
    "body": [
      "Remove-PnPApplicationCustomizer "
    ]
  },
  "Remove-PnPAvailableSiteClassification": {
    "description": "Allows to remove existing classic site classification values.",
    "prefix": [
      "Remove-PnPAvailableSiteClassification"
    ],
    "body": [
      "Remove-PnPAvailableSiteClassification -Classifications $1"
    ]
  },
  "Remove-PnPAzureADApp": {
    "description": "This cmdlet removes an Azure AD App registration.",
    "prefix": [
      "Remove-PnPAzureADApp"
    ],
    "body": [
      "Remove-PnPAzureADApp "
    ]
  },
  "Remove-PnPAzureADGroup": {
    "description": "Allows to remove Azure Active Directory group.",
    "prefix": [
      "Remove-PnPAzureADGroup"
    ],
    "body": [
      "Remove-PnPAzureADGroup -Identity $1"
    ]
  },
  "Remove-PnPAzureADGroupMember": {
    "description": "Allows to remove members from Azure Active Directory group.",
    "prefix": [
      "Remove-PnPAzureADGroupMember"
    ],
    "body": [
      "Remove-PnPAzureADGroupMember -Identity $1 -Users $2"
    ]
  },
  "Remove-PnPAzureADGroupOwner": {
    "description": "Allows to remove owners from Azure Active Directory group.",
    "prefix": [
      "Remove-PnPAzureADGroupOwner"
    ],
    "body": [
      "Remove-PnPAzureADGroupOwner -Identity $1 -Users $2"
    ]
  },
  "Remove-PnPAzureADServicePrincipalAssignedAppRole": {
    "description": "Allows removal of one or more assigned app roles on a specific service principals/app registration in Azure Active Directory.",
    "prefix": [
      "Remove-PnPAzureADServicePrincipalAssignedAppRole"
    ],
    "body": [
      "Remove-PnPAzureADServicePrincipalAssignedAppRole -Identity $1"
    ]
  },
  "Remove-PnPContentType": {
    "description": "This cmdlet allows to remove a content type from the current web.",
    "prefix": [
      "Remove-PnPContentType"
    ],
    "body": [
      "Remove-PnPContentType "
    ]
  },
  "Remove-PnPContentTypeFromDocumentSet": {
    "description": "This cmdlet allows to remove a content type from a document set.",
    "prefix": [
      "Remove-PnPContentTypeFromDocumentSet"
    ],
    "body": [
      "Remove-PnPContentTypeFromDocumentSet -ContentType $1 -DocumentSet $2"
    ]
  },
  "Remove-PnPContentTypeFromList": {
    "description": "Allows to remove a content type from a list.",
    "prefix": [
      "Remove-PnPContentTypeFromList"
    ],
    "body": [
      "Remove-PnPContentTypeFromList -List $1 -ContentType $2"
    ]
  },
  "Remove-PnPCustomAction": {
    "description": "Allows to remove a custom action.",
    "prefix": [
      "Remove-PnPCustomAction"
    ],
    "body": [
      "Remove-PnPCustomAction "
    ]
  },
  "Remove-PnPDeletedMicrosoft365Group": {
    "description": "Allows to permanently remove a deleted Microsoft 365 Group.",
    "prefix": [
      "Remove-PnPDeletedMicrosoft365Group"
    ],
    "body": [
      "Remove-PnPDeletedMicrosoft365Group -Identity $1"
    ]
  },
  "Remove-PnPEventReceiver": {
    "description": "Removes/unregisters a specific event receiver.",
    "prefix": [
      "Remove-PnPEventReceiver"
    ],
    "body": [
      "Remove-PnPEventReceiver -Identity $1"
    ]
  },
  "Remove-PnPExternalUser": {
    "description": [
      "The Remove-PnPExternalUser cmdlet permanently removes a collection of external users from the tenant.",
      "Users who are removed lose access to all tenant resources."
    ],
    "prefix": [
      "Remove-PnPExternalUser"
    ],
    "body": [
      "Remove-PnPExternalUser -UniqueIDs $1"
    ]
  },
  "Remove-PnPField": {
    "description": "Allows to remove a field from a list or a site.",
    "prefix": [
      "Remove-PnPField"
    ],
    "body": [
      "Remove-PnPField "
    ]
  },
  "Remove-PnPFieldFromContentType": {
    "description": "Allows to remove a field from a content type.",
    "prefix": [
      "Remove-PnPFieldFromContentType"
    ],
    "body": [
      "Remove-PnPFieldFromContentType -Field $1 -ContentType $2"
    ]
  },
  "Remove-PnPFile": {
    "description": "This cmdlet removes the specified file based on the site-relative or server-relative url.",
    "prefix": [
      "Remove-PnPFile"
    ],
    "body": [
      "Remove-PnPFile "
    ]
  },
  "Remove-PnPFileFromSiteTemplate": {
    "description": "Allows to remove a file from a PnP Provisioning Template.",
    "prefix": [
      "Remove-PnPFileFromSiteTemplate"
    ],
    "body": [
      "Remove-PnPFileFromSiteTemplate "
    ]
  },
  "Remove-PnPFileVersion": {
    "description": "This cmdlet removes all versions or one specific version for the specified file.",
    "prefix": [
      "Remove-PnPFileVersion"
    ],
    "body": [
      "Remove-PnPFileVersion -Url $1"
    ]
  },
  "Remove-PnPFlow": {
    "description": "This cmdlet removes the specified flow.",
    "prefix": [
      "Remove-PnPFlow"
    ],
    "body": [
      "Remove-PnPFlow -Environment $1 -Identity $2"
    ]
  },
  "Remove-PnPFolder": {
    "description": "Allows to remove a folder.",
    "prefix": [
      "Remove-PnPFolder"
    ],
    "body": [
      "Remove-PnPFolder -Name $1 -Folder $2"
    ]
  },
  "Remove-PnPGraphSubscription": {
    "description": "Allows to remove an existing Microsoft Graph subscription.",
    "prefix": [
      "Remove-PnPGraphSubscription"
    ],
    "body": [
      "Remove-PnPGraphSubscription -Identity $1"
    ]
  },
  "Remove-PnPGroup": {
    "description": "Allows to remove a group from web.",
    "prefix": [
      "Remove-PnPGroup"
    ],
    "body": [
      "Remove-PnPGroup "
    ]
  },
  "Remove-PnPGroupMember": {
    "description": "Allows to remove a user from group.",
    "prefix": [
      "Remove-PnPGroupMember"
    ],
    "body": [
      "Remove-PnPGroupMember -LoginName $1 -Group $2"
    ]
  },
  "Remove-PnPHomeSite": {
    "description": "Allows to remove a site which currently is set as home site.",
    "prefix": [
      "Remove-PnPHomeSite"
    ],
    "body": [
      "Remove-PnPHomeSite "
    ]
  },
  "Remove-PnPHubSiteAssociation": {
    "description": "Allows to remove a hub site association from a site.",
    "prefix": [
      "Remove-PnPHubSiteAssociation"
    ],
    "body": [
      "Remove-PnPHubSiteAssociation -Site $1"
    ]
  },
  "Remove-PnPHubToHubAssociation": {
    "description": "Use this cmdlet to remove the selected hub site from its parent hub.",
    "prefix": [
      "Remove-PnPHubToHubAssociation"
    ],
    "body": [
      "Remove-PnPHubToHubAssociation -HubSiteId $1"
    ]
  },
  "Remove-PnPIndexedProperty": {
    "description": "Allows to remove indexed property from the current web.",
    "prefix": [
      "Remove-PnPIndexedProperty"
    ],
    "body": [
      "Remove-PnPIndexedProperty "
    ]
  },
  "Remove-PnPJavaScriptLink": {
    "description": "Allows to remove JavaScript link or block from a web or sitecollection.",
    "prefix": [
      "Remove-PnPJavaScriptLink"
    ],
    "body": [
      "Remove-PnPJavaScriptLink "
    ]
  },
  "Remove-PnPKnowledgeHubSite": {
    "description": "Allows to remove Knowledge Hub Site setting for your tenant.",
    "prefix": [
      "Remove-PnPKnowledgeHubSite"
    ],
    "body": [
      "Remove-PnPKnowledgeHubSite "
    ]
  },
  "Remove-PnPList": {
    "description": "Allows to remove a list.",
    "prefix": [
      "Remove-PnPList"
    ],
    "body": [
      "Remove-PnPList "
    ]
  },
  "Remove-PnPListDesign": {
    "description": "Allows to remove a list design.",
    "prefix": [
      "Remove-PnPListDesign"
    ],
    "body": [
      "Remove-PnPListDesign -Identity $1"
    ]
  },
  "Remove-PnPListItem": {
    "description": "Allows to remove a list item.",
    "prefix": [
      "Remove-PnPListItem"
    ],
    "body": [
      "Remove-PnPListItem "
    ]
  },
  "Remove-PnPListItemAttachment": {
    "description": "This cmdlet removes one or all attachments from the specified list item in a SharePoint list.",
    "prefix": [
      "Remove-PnPListItemAttachment"
    ],
    "body": [
      "Remove-PnPListItemAttachment "
    ]
  },
  "Remove-PnPListItemComment": {
    "description": "Allows to remove comments from list item.",
    "prefix": [
      "Remove-PnPListItemComment"
    ],
    "body": [
      "Remove-PnPListItemComment "
    ]
  },
  "Remove-PnPMicrosoft365Group": {
    "description": "Allows to remove Microsoft 365 Group.",
    "prefix": [
      "Remove-PnPMicrosoft365Group"
    ],
    "body": [
      "Remove-PnPMicrosoft365Group -Identity $1"
    ]
  },
  "Remove-PnPMicrosoft365GroupMember": {
    "description": "Allows to remove members from a specified Microsoft 365 Group.",
    "prefix": [
      "Remove-PnPMicrosoft365GroupMember"
    ],
    "body": [
      "Remove-PnPMicrosoft365GroupMember -Identity $1 -Users $2"
    ]
  },
  "Remove-PnPMicrosoft365GroupOwner": {
    "description": "Allows to remove owners from a specified Microsoft 365 Group.",
    "prefix": [
      "Remove-PnPMicrosoft365GroupOwner"
    ],
    "body": [
      "Remove-PnPMicrosoft365GroupOwner -Identity $1 -Users $2"
    ]
  },
  "Remove-PnPMicrosoft365GroupSettings": {
    "description": "Allows to remove Microsoft 365 Group settings from the tenant or the specified group.",
    "prefix": [
      "Remove-PnPMicrosoft365GroupSettings"
    ],
    "body": [
      "Remove-PnPMicrosoft365GroupSettings -Identity $1 -Group $2"
    ]
  },
  "Remove-PnPNavigationNode": {
    "description": "Allows to remove menu item from either the quick launch or top navigation.",
    "prefix": [
      "Remove-PnPNavigationNode"
    ],
    "body": [
      "Remove-PnPNavigationNode "
    ]
  },
  "Remove-PnPOrgAssetsLibrary": {
    "description": "Removes a given document library as an organizational asset source based on its server relative URL in your SharePoint Online tenant. It will not remove the document library itself. It may take some time before this change will be reflected in the web interface.",
    "prefix": [
      "Remove-PnPOrgAssetsLibrary"
    ],
    "body": [
      "Remove-PnPOrgAssetsLibrary -LibraryUrl $1"
    ]
  },
  "Remove-PnPOrgNewsSite": {
    "description": "Removes a given site from the list of organizational news sites based on its URL in your SharePoint Online tenant.",
    "prefix": [
      "Remove-PnPOrgNewsSite"
    ],
    "body": [
      "Remove-PnPOrgNewsSite -OrgNewsSiteUrl $1"
    ]
  },
  "Remove-PnPPage": {
    "description": "Allows to remove a page.",
    "prefix": [
      "Remove-PnPPage"
    ],
    "body": [
      "Remove-PnPPage "
    ]
  },
  "Remove-PnPPageComponent": {
    "description": "This cmdlet removes specified page component from a page.",
    "prefix": [
      "Remove-PnPPageComponent"
    ],
    "body": [
      "Remove-PnPPageComponent "
    ]
  },
  "Remove-PnPPlannerBucket": {
    "description": "This cmdlet removes a Planner bucket.",
    "prefix": [
      "Remove-PnPPlannerBucket"
    ],
    "body": [
      "Remove-PnPPlannerBucket -Group $1 -Plan $2 -Identity $3"
    ]
  },
  "Remove-PnPPlannerPlan": {
    "description": "This cmdlet removes a Planner plan.",
    "prefix": [
      "Remove-PnPPlannerPlan"
    ],
    "body": [
      "Remove-PnPPlannerPlan -Group $1 -Identity $2"
    ]
  },
  "Remove-PnPPlannerRoster": {
    "description": "Removes a Microsoft Planner Roster",
    "prefix": [
      "Remove-PnPPlannerRoster"
    ],
    "body": [
      "Remove-PnPPlannerRoster -Identity $1"
    ]
  },
  "Remove-PnPPlannerRosterMember": {
    "description": "Removes a member from a Microsoft Planner Roster.",
    "prefix": [
      "Remove-PnPPlannerRosterMember"
    ],
    "body": [
      "Remove-PnPPlannerRosterMember -Identity $1"
    ]
  },
  "Remove-PnPPlannerTask": {
    "description": "This cmdlet removes a specific Planner task.",
    "prefix": [
      "Remove-PnPPlannerTask"
    ],
    "body": [
      "Remove-PnPPlannerTask -Task $1"
    ]
  },
  "Remove-PnPPropertyBagValue": {
    "description": [
      "Removes a value from the property bag. If working with a modern SharePoint Online site or having noscript enabled, you will have to disable this yourself temporarily using Set-PnPTenantSite -Url <url> -NoScriptSite:$false to be able to make the change.",
      "Set-PnPTenantSite -Url <url> -NoScriptSite:$false"
    ],
    "prefix": [
      "Remove-PnPPropertyBagValue"
    ],
    "body": [
      "Remove-PnPPropertyBagValue "
    ]
  },
  "Remove-PnPPublishingImageRendition": {
    "description": "Allows to remove an existing image rendition.",
    "prefix": [
      "Remove-PnPPublishingImageRendition"
    ],
    "body": [
      "Remove-PnPPublishingImageRendition "
    ]
  },
  "Remove-PnPRoleDefinition": {
    "description": "This cmdlet removes the specified role definition from a site collection.",
    "prefix": [
      "Remove-PnPRoleDefinition"
    ],
    "body": [
      "Remove-PnPRoleDefinition "
    ]
  },
  "Remove-PnPSdnProvider": {
    "description": "Removes SDN Support in your SharePoint Online tenant.",
    "prefix": [
      "Remove-PnPSdnProvider"
    ],
    "body": [
      "Remove-PnPSdnProvider "
    ]
  },
  "Remove-PnPSearchConfiguration": {
    "description": "This cmdlet removes the search configuration from a single web, site collection or a tenant, using path or a configuration string.",
    "prefix": [
      "Remove-PnPSearchConfiguration"
    ],
    "body": [
      "Remove-PnPSearchConfiguration -Configuration $1"
    ]
  },
  "Remove-PnPSiteCollectionAdmin": {
    "description": "This command allows removing one to many users as site collection administrators from the site collection in the current context. All existing site collection administrators not included in this command will remain site collection administrator.",
    "prefix": [
      "Remove-PnPSiteCollectionAdmin"
    ],
    "body": [
      "Remove-PnPSiteCollectionAdmin -Owners $1"
    ]
  },
  "Remove-PnPSiteCollectionAppCatalog": {
    "description": "Notice that this will not remove the App Catalog list and its contents from the site.",
    "prefix": [
      "Remove-PnPSiteCollectionAppCatalog"
    ],
    "body": [
      "Remove-PnPSiteCollectionAppCatalog -Site $1"
    ]
  },
  "Remove-PnPSiteCollectionTermStore": {
    "description": "Removes the site collection scoped term store for the currently connected site collection. If it does not exist yet, it will not do anything.",
    "prefix": [
      "Remove-PnPSiteCollectionTermStore"
    ],
    "body": [
      "Remove-PnPSiteCollectionTermStore "
    ]
  },
  "Remove-PnPSiteDesign": {
    "description": "This cmdlet removes the specified site design.",
    "prefix": [
      "Remove-PnPSiteDesign"
    ],
    "body": [
      "Remove-PnPSiteDesign "
    ]
  },
  "Remove-PnPSiteDesignTask": {
    "description": "This cmdlet removes a site design task. If the execution of the associated site script has already started, the execution will not be terminated.",
    "prefix": [
      "Remove-PnPSiteDesignTask"
    ],
    "body": [
      "Remove-PnPSiteDesignTask "
    ]
  },
  "Remove-PnPSiteGroup": {
    "description": "Allows to remove a group from specified site.",
    "prefix": [
      "Remove-PnPSiteGroup"
    ],
    "body": [
      "Remove-PnPSiteGroup -Identity $1"
    ]
  },
  "Remove-PnPSiteScript": {
    "description": "This cmdlet removes specified site script.",
    "prefix": [
      "Remove-PnPSiteScript"
    ],
    "body": [
      "Remove-PnPSiteScript "
    ]
  },
  "Remove-PnPSiteUserInvitations": {
    "description": "Searches against all stored sharing links on a Site and removes an email invites. If the site parameter is omitted the current site will be searched.",
    "prefix": [
      "Remove-PnPSiteUserInvitations"
    ],
    "body": [
      "Remove-PnPSiteUserInvitations "
    ]
  },
  "Remove-PnPStorageEntity": {
    "description": "Allows to remove Storage Entities / Farm Properties from either the tenant scoped app catalog or the current site collection app catalog.",
    "prefix": [
      "Remove-PnPStorageEntity"
    ],
    "body": [
      "Remove-PnPStorageEntity -Key $1"
    ]
  },
  "Remove-PnPStoredCredential": {
    "description": "Removes a stored credential from the Credential Manager",
    "prefix": [
      "Remove-PnPStoredCredential"
    ],
    "body": [
      "Remove-PnPStoredCredential -Name $1"
    ]
  },
  "Remove-PnPTaxonomyItem": {
    "description": "This cmdlet removes a taxonomy item.",
    "prefix": [
      "Remove-PnPTaxonomyItem"
    ],
    "body": [
      "Remove-PnPTaxonomyItem "
    ]
  },
  "Remove-PnPTeamsApp": {
    "description": "Allows to remove an app from the Teams AppCatalog.",
    "prefix": [
      "Remove-PnPTeamsApp"
    ],
    "body": [
      "Remove-PnPTeamsApp -Identity $1"
    ]
  },
  "Remove-PnPTeamsChannel": {
    "description": "Allows to remove a channel from specified team.",
    "prefix": [
      "Remove-PnPTeamsChannel"
    ],
    "body": [
      "Remove-PnPTeamsChannel -Team $1 -Identity $2"
    ]
  },
  "Remove-PnPTeamsChannelUser": {
    "description": "Allows to remove a user from specified private channel.",
    "prefix": [
      "Remove-PnPTeamsChannelUser"
    ],
    "body": [
      "Remove-PnPTeamsChannelUser -Team $1 -Channel $2 -Identity $3"
    ]
  },
  "Remove-PnPTeamsTab": {
    "description": "Allows to remove a tab from channel.",
    "prefix": [
      "Remove-PnPTeamsTab"
    ],
    "body": [
      "Remove-PnPTeamsTab -Team $1 -Channel $2 -Identity $3"
    ]
  },
  "Remove-PnPTeamsTag": {
    "description": "",
    "prefix": [
      "Remove-PnPTeamsTag"
    ],
    "body": [
      "Remove-PnPTeamsTag -Team $1 -Identity $2"
    ]
  },
  "Remove-PnPTeamsTeam": {
    "description": [
      "Removes a Microsoft Teams Team. This also removes the associated Microsoft 365 Group, and is functionally identical to Remove-PnPMicrosoft365Group",
      "Remove-PnPMicrosoft365Group"
    ],
    "prefix": [
      "Remove-PnPTeamsTeam"
    ],
    "body": [
      "Remove-PnPTeamsTeam -Identity $1"
    ]
  },
  "Remove-PnPTeamsUser": {
    "description": "Allows to remove user from a team.",
    "prefix": [
      "Remove-PnPTeamsUser"
    ],
    "body": [
      "Remove-PnPTeamsUser -Team $1 -User $2"
    ]
  },
  "Remove-PnPTenantCdnOrigin": {
    "description": [
      "Removes an origin from the Public or Private content delivery network (CDN).",
      "You must be a SharePoint Online Administrator to run the cmdlet."
    ],
    "prefix": [
      "Remove-PnPTenantCdnOrigin"
    ],
    "body": [
      "Remove-PnPTenantCdnOrigin -OriginUrl $1 -CdnType $2"
    ]
  },
  "Remove-PnPTenantDeletedSite": {
    "description": "Removes a site collection which is listed in your tenant administration site from the tenant's recycle bin.",
    "prefix": [
      "Remove-PnPTenantDeletedSite"
    ],
    "body": [
      "Remove-PnPTenantDeletedSite "
    ]
  },
  "Remove-PnPTenantSite": {
    "description": "Removes a site collection which is listed in your tenant administration site.",
    "prefix": [
      "Remove-PnPTenantSite"
    ],
    "body": [
      "Remove-PnPTenantSite "
    ]
  },
  "Remove-PnPTenantSyncClientRestriction": {
    "description": "The Remove-PnPTenantSyncClientRestriction cmdlet disables the feature for the tenant, but does not remove any present domain GUID entries from the safe sender recipient list. After the Remove-PnPTenantSyncClientRestriction cmdlet is run it can take up to 24 hours for change to take effect. This parameter will also remove any values set from the GrooveBlockOption parameter for syncing.",
    "prefix": [
      "Remove-PnPTenantSyncClientRestriction"
    ],
    "body": [
      "Remove-PnPTenantSyncClientRestriction "
    ]
  },
  "Remove-PnPTenantTheme": {
    "description": "Removes the specified theme from the tenant configuration.",
    "prefix": [
      "Remove-PnPTenantTheme"
    ],
    "body": [
      "Remove-PnPTenantTheme "
    ]
  },
  "Remove-PnPTerm": {
    "description": "This cmdlet removes a term from the term store.",
    "prefix": [
      "Remove-PnPTerm"
    ],
    "body": [
      "Remove-PnPTerm -Identity $1"
    ]
  },
  "Remove-PnPTermGroup": {
    "description": "This cmdlet removes a term group and all the contained term sets.",
    "prefix": [
      "Remove-PnPTermGroup"
    ],
    "body": [
      "Remove-PnPTermGroup -Identity $1"
    ]
  },
  "Remove-PnPTermLabel": {
    "description": "This cmdlet removes a label/translation from a term.",
    "prefix": [
      "Remove-PnPTermLabel"
    ],
    "body": [
      "Remove-PnPTermLabel -Label $1 -Term $2 -Lcid $3"
    ]
  },
  "Remove-PnPUser": {
    "description": "This command will allow the removal of a specific user from the User Information List",
    "prefix": [
      "Remove-PnPUser"
    ],
    "body": [
      "Remove-PnPUser "
    ]
  },
  "Remove-PnPUserInfo": {
    "description": "Removes user information from the site user information list.",
    "prefix": [
      "Remove-PnPUserInfo"
    ],
    "body": [
      "Remove-PnPUserInfo -LoginName $1"
    ]
  },
  "Remove-PnPUserProfile": {
    "description": [
      "Removes SharePoint User Profile data from the tenant.",
      "[!NOTE] The User must first be deleted from AAD before the user profile can be deleted. You can use the Azure AD cmdlet Remove-AzureADUser for this action.",
      "[!NOTE] The User must first be deleted from AAD before the user profile can be deleted. You can use the Azure AD cmdlet Remove-AzureADUser for this action."
    ],
    "prefix": [
      "Remove-PnPUserProfile"
    ],
    "body": [
      "Remove-PnPUserProfile -LoginName $1"
    ]
  },
  "Remove-PnPView": {
    "description": "Allows to remove view from a list.",
    "prefix": [
      "Remove-PnPView"
    ],
    "body": [
      "Remove-PnPView "
    ]
  },
  "Remove-PnPVivaConnectionsDashboardACE": {
    "description": "Allows to remove Adaptive card extensions from the Viva connections dashboard page.",
    "prefix": [
      "Remove-PnPVivaConnectionsDashboardACE"
    ],
    "body": [
      "Remove-PnPVivaConnectionsDashboardACE "
    ]
  },
  "Remove-PnPWeb": {
    "description": "This cmdlet removes the specified subsite.",
    "prefix": [
      "Remove-PnPWeb"
    ],
    "body": [
      "Remove-PnPWeb -Identity $1"
    ]
  },
  "Remove-PnPWebhookSubscription": {
    "description": "Allows to remove Webhook subscription from list.",
    "prefix": [
      "Remove-PnPWebhookSubscription"
    ],
    "body": [
      "Remove-PnPWebhookSubscription "
    ]
  },
  "Remove-PnPWebPart": {
    "description": "Allows to remove web part from a page.",
    "prefix": [
      "Remove-PnPWebPart"
    ],
    "body": [
      "Remove-PnPWebPart -Identity $1 -ServerRelativePageUrl $2"
    ]
  },
  "Remove-PnPWikiPage": {
    "description": "This cmdlet removes a single wiki page specified by server relative url or site relative url.",
    "prefix": [
      "Remove-PnPWikiPage"
    ],
    "body": [
      "Remove-PnPWikiPage "
    ]
  },
  "Rename-PnPFile": {
    "description": "Allows to rename a file.",
    "prefix": [
      "Rename-PnPFile"
    ],
    "body": [
      "Rename-PnPFile "
    ]
  },
  "Rename-PnPFolder": {
    "description": "Allows to rename a folder.",
    "prefix": [
      "Rename-PnPFolder"
    ],
    "body": [
      "Rename-PnPFolder -Folder $1 -TargetFolderName $2"
    ]
  },
  "Rename-PnPTenantSite": {
    "description": [
      "This cmdlet starts a rename of a site on a SharePoint Online site. You can change the URL, and optionally the site title along with changing the URL.",
      "This will not work between Multi-geo environments."
    ],
    "prefix": [
      "Rename-PnPTenantSite"
    ],
    "body": [
      "Rename-PnPTenantSite "
    ]
  },
  "Repair-PnPSite": {
    "description": [
      "The Repair-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. This cmdlet will make changes if issues are found and automatically repairable.",
      "The cmdlet reports the health check rules with a summary of the results. The rules might not support automatic repair. Tests without repair mode can be initiated by running the Test-PnPSite cmdlet."
    ],
    "prefix": [
      "Repair-PnPSite"
    ],
    "body": [
      "Repair-PnPSite -Identity $1"
    ]
  },
  "Request-PnPAccessToken": {
    "description": "Returns an access token using the password grant, using the PnP O365 Management Shell client id by default and the AllSites.FullControl scope by default.",
    "prefix": [
      "Request-PnPAccessToken"
    ],
    "body": [
      "Request-PnPAccessToken "
    ]
  },
  "Request-PnPPersonalSite": {
    "description": [
      "The Request-PnPPersonalSite cmdlet requests that the users specified be enqueued so that a Personal Site be created for each. The actual OneDrive for Business site is created by a Timer Job later.",
      "[!NOTE] • You must specify a string array of user logins that contains one or more valid user email (logins) and cannot contain any empty fields. The command will stop if it encounters any empty strings in the array. A maximum of 200 users can be specified. \r\n\r\n• The actor executing this cmdlet must be at least assigned the SharePoint Online administrator role and have been assigned a SharePoint Online license to be able to provision the OneDrive for Business sites. The users who the sites will be provisioned for must also have a SharePoint license assigned. \r\n\r\n• This cmdlet is NOT OneDrive Multi-Geo aware. If you need to request Personal Sites for Multi-Geo enabled tenants, you must run this cmdlet for users in the region their data is to be hosted in. To retrieve users with a specific PDL, use the following sample: Get-MSOLUser | Where {$_.PreferredDataLocation -eq \"EUR\"}\r\n\r\n• If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permisson to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx:\r\n\r\n<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>\r\n\r\nYou then must connect using\r\nConnect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret>\r\nAuthenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory.\r\n\r\nIf you want to run this cmdlet using an interactive login, you must connect using:\r\nConnect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin",
      "[!NOTE] • You must specify a string array of user logins that contains one or more valid user email (logins) and cannot contain any empty fields. The command will stop if it encounters any empty strings in the array. A maximum of 200 users can be specified. \r\n\r\n• The actor executing this cmdlet must be at least assigned the SharePoint Online administrator role and have been assigned a SharePoint Online license to be able to provision the OneDrive for Business sites. The users who the sites will be provisioned for must also have a SharePoint license assigned. \r\n\r\n• This cmdlet is NOT OneDrive Multi-Geo aware. If you need to request Personal Sites for Multi-Geo enabled tenants, you must run this cmdlet for users in the region their data is to be hosted in. To retrieve users with a specific PDL, use the following sample: Get-MSOLUser | Where {$_.PreferredDataLocation -eq \"EUR\"}\r\n\r\n• If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permisson to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx:\r\n\r\n<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>\r\n\r\nYou then must connect using\r\nConnect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret>\r\nAuthenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory.\r\n\r\nIf you want to run this cmdlet using an interactive login, you must connect using:\r\nConnect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin",
      null,
      null,
      null,
      null,
      "Get-MSOLUser | Where {$_.PreferredDataLocation -eq \"EUR\"}",
      null,
      null,
      "must",
      "https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx",
      "https://tenant-admin.sharepoint.com/_layouts/appinv.aspx",
      null,
      null,
      "<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>",
      null,
      null,
      "must",
      null,
      "Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret>",
      null,
      "not",
      null,
      null,
      "must",
      null,
      "Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin"
    ],
    "prefix": [
      "Request-PnPPersonalSite"
    ],
    "body": [
      "Request-PnPPersonalSite -UserEmails $1"
    ]
  },
  "Request-PnPReIndexList": {
    "description": "Allows to mark the list for full indexing during the next incremental crawl.",
    "prefix": [
      "Request-PnPReIndexList"
    ],
    "body": [
      "Request-PnPReIndexList "
    ]
  },
  "Request-PnPReIndexWeb": {
    "description": "This cmdlet marks the web for full indexing during the next incremental crawl.",
    "prefix": [
      "Request-PnPReIndexWeb"
    ],
    "body": [
      "Request-PnPReIndexWeb "
    ]
  },
  "Request-PnPSyntexClassifyAndExtract": {
    "description": [
      "This command requests for all files in a library, folder or individual files to be classified and extracted via the published Syntex models on the libraries hosting the files. When using with the OffPeak switch then the files are send to the off peak Syntex document processing queue, this way there's no need to enumerate all files in the library and submit them to the regular queue. When using the Force switch without setting OffPeak then all files are enumerated and sent to the regular queue, regardless of whether they were processed in the past.",
      "OffPeak",
      "Force",
      "When the list contains more than 5000 files or when using the folder parameter the cmdlet will use the off peak Syntex queue."
    ],
    "prefix": [
      "Request-PnPSyntexClassifyAndExtract"
    ],
    "body": [
      "Request-PnPSyntexClassifyAndExtract -FileUrl $1"
    ]
  },
  "Reset-PnPFileVersion": {
    "description": "Allows to rolback a file to its previous version.",
    "prefix": [
      "Reset-PnPFileVersion"
    ],
    "body": [
      "Reset-PnPFileVersion -ServerRelativeUrl $1"
    ]
  },
  "Reset-PnPLabel": {
    "description": "Removes the retention label on a list or library and its items. Does not work for sensitivity labels.",
    "prefix": [
      "Reset-PnPLabel"
    ],
    "body": [
      "Reset-PnPLabel "
    ]
  },
  "Reset-PnPMicrosoft365GroupExpiration": {
    "description": "Allows to extend the Microsoft 365 Group expiration date by the number of days defined in the group expiration policy.",
    "prefix": [
      "Reset-PnPMicrosoft365GroupExpiration"
    ],
    "body": [
      "Reset-PnPMicrosoft365GroupExpiration -Identity $1"
    ]
  },
  "Reset-PnPUserOneDriveQuotaToDefault": {
    "description": [
      "This command allows you to reset the quota set on the OneDrive for Business site of a specific user to the default as set on the tenant. You must connect to the tenant admin website (https://:-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet.",
      null
    ],
    "prefix": [
      "Reset-PnPUserOneDriveQuotaToDefault"
    ],
    "body": [
      "Reset-PnPUserOneDriveQuotaToDefault "
    ]
  },
  "Resolve-PnPFolder": {
    "description": "Returns a folder from a given site relative path, and will create it if it does not exist. If you do not want the folder to be created, for instance just to test if a folder exists, use Get-PnPFolder",
    "prefix": [
      "Resolve-PnPFolder"
    ],
    "body": [
      "Resolve-PnPFolder "
    ]
  },
  "Restart-PnPFlowRun": {
    "description": "This cmdlet restarts/resubmits a specific Power Automate flow run.",
    "prefix": [
      "Restart-PnPFlowRun"
    ],
    "body": [
      "Restart-PnPFlowRun -Environment $1 -Flow $2 -Identity $3"
    ]
  },
  "Restore-PnPDeletedMicrosoft365Group": {
    "description": "",
    "prefix": [
      "Restore-PnPDeletedMicrosoft365Group"
    ],
    "body": [
      "Restore-PnPDeletedMicrosoft365Group -Identity $1"
    ]
  },
  "Restore-PnPFileVersion": {
    "description": "This cmdlet restores a specific file version.",
    "prefix": [
      "Restore-PnPFileVersion"
    ],
    "body": [
      "Restore-PnPFileVersion -Url $1 -Identity $2"
    ]
  },
  "Restore-PnPRecycleBinItem": {
    "description": "This cmdlet restores the specified item from the recycle bin to its original location.",
    "prefix": [
      "Restore-PnPRecycleBinItem"
    ],
    "body": [
      "Restore-PnPRecycleBinItem -Identity $1"
    ]
  },
  "Restore-PnPTenantRecycleBinItem": {
    "description": "The Restore-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be restored to its original location.",
    "prefix": [
      "Restore-PnPTenantRecycleBinItem"
    ],
    "body": [
      "Restore-PnPTenantRecycleBinItem -Url $1"
    ]
  },
  "Restore-PnPTenantSite": {
    "description": "Restores a site collection which is listed in your tenant administration site from the tenant's recycle bin.",
    "prefix": [
      "Restore-PnPTenantSite"
    ],
    "body": [
      "Restore-PnPTenantSite "
    ]
  },
  "Revoke-PnPAzureADAppSitePermission": {
    "description": "This cmdlets revokes permissions for a given app in a site.",
    "prefix": [
      "Revoke-PnPAzureADAppSitePermission"
    ],
    "body": [
      "Revoke-PnPAzureADAppSitePermission -PermissionId $1"
    ]
  },
  "Revoke-PnPHubSiteRights": {
    "description": "Allows to revoke permissions from existing once to associate sites to Hub Sites for specified users.",
    "prefix": [
      "Revoke-PnPHubSiteRights"
    ],
    "body": [
      "Revoke-PnPHubSiteRights "
    ]
  },
  "Revoke-PnPSiteDesignRights": {
    "description": "Revokes the rights to use the site design for the specified users.",
    "prefix": [
      "Revoke-PnPSiteDesignRights"
    ],
    "body": [
      "Revoke-PnPSiteDesignRights "
    ]
  },
  "Revoke-PnPTenantServicePrincipalPermission": {
    "description": "Revokes a permission that was previously granted to the \"SharePoint Online Client Extensibility Web Application Service Principal\" service principal.",
    "prefix": [
      "Revoke-PnPTenantServicePrincipalPermission"
    ],
    "body": [
      "Revoke-PnPTenantServicePrincipalPermission -Scope $1"
    ]
  },
  "Revoke-PnPUserSession": {
    "description": [
      "User will be signed out of browser, desktop and mobile applications accessing Office 365 resources across all devices.",
      "It is not applicable to guest users."
    ],
    "prefix": [
      "Revoke-PnPUserSession"
    ],
    "body": [
      "Revoke-PnPUserSession -User $1"
    ]
  },
  "Save-PnPPageConversionLog": {
    "description": [
      "------------------EXAMPLE 1------------------",
      "Save-PnPPageConversionLog",
      "Save-PnPPageConversionLog",
      "Persists the current client side page conversion log data to the loggers linked to the last used page transformation run. Needs to be used in conjunction with the -LogSkipFlush flag on the ConvertTo-PnPPage cmdlet."
    ],
    "prefix": [
      "Save-PnPPageConversionLog"
    ],
    "body": [
      "Save-PnPPageConversionLog "
    ]
  },
  "Save-PnPSiteTemplate": {
    "description": "Allows to save a PnP site template to the file system.",
    "prefix": [
      "Save-PnPSiteTemplate"
    ],
    "body": [
      "Save-PnPSiteTemplate -Template $1"
    ]
  },
  "Save-PnPTenantTemplate": {
    "description": "This cmdlet saves the tenant template for provisioning hierarchy to the file system in the latest or specified schema.",
    "prefix": [
      "Save-PnPTenantTemplate"
    ],
    "body": [
      "Save-PnPTenantTemplate -Template $1"
    ]
  },
  "Send-PnPMail": {
    "description": "Allows to send an email using the Office 365 SMTP Service or SharePoint.",
    "prefix": [
      "Send-PnPMail"
    ],
    "body": [
      "Send-PnPMail "
    ]
  },
  "Set-PnPAdaptiveScopeProperty": {
    "description": [
      "This cmdlet is used to set or create an indexed property bag value for use in SharePoint site scopes with adaptive policy scopes. Executing this cmdlet is similar to setting or adding an indexed value to the current web property bag using Set-PnPPropertyBagValue with the -Indexed parameter with the addition that it will also ensure the noscript is temporarily disabled to allow for this to happen. It will revert its state back to what it was after adding or updating the property bag value. Using this cmdlet does therefore require having the SharePoint Online Admin role or equivalent app permissions.",
      "SharePoint site scopes",
      "adaptive policy scopes",
      "Set-PnPPropertyBagValue",
      "-Indexed"
    ],
    "prefix": [
      "Set-PnPAdaptiveScopeProperty"
    ],
    "body": [
      "Set-PnPAdaptiveScopeProperty -Key $1 -Value $2"
    ]
  },
  "Set-PnPApplicationCustomizer": {
    "description": "Updates a SharePoint Framework client side extension application customizer by updating its custom action. Only the properties that will be provided will be updated. Others will remain as they are.",
    "prefix": [
      "Set-PnPApplicationCustomizer"
    ],
    "body": [
      "Set-PnPApplicationCustomizer "
    ]
  },
  "Set-PnPAppSideLoading": {
    "description": [
      "This cmdlet enables or disables the app sideloading feature on the site.",
      "Allows to enable the App SideLoading Feature on a site."
    ],
    "prefix": [
      "Set-PnPAppSideLoading"
    ],
    "body": [
      "Set-PnPAppSideLoading "
    ]
  },
  "Set-PnPAuditing": {
    "description": "Allows to modify Auditing setting for a site.",
    "prefix": [
      "Set-PnPAuditing"
    ],
    "body": [
      "Set-PnPAuditing "
    ]
  },
  "Set-PnPAvailablePageLayouts": {
    "description": "This cmdlet sets the available page layouts for the current site. It requires NoScript feature to be disabled.",
    "prefix": [
      "Set-PnPAvailablePageLayouts"
    ],
    "body": [
      "Set-PnPAvailablePageLayouts -PageLayouts $1"
    ]
  },
  "Set-PnPAzureADAppSitePermission": {
    "description": [
      "This cmdlet updates permissions for a given Azure Active Directory application registration in a site collection. It is used in conjunction with the Azure Active Directory SharePoint application permission Sites.Selected. Notice that this cmdlet allows for more permissions compared for when initially setting rights through Grant-PnPAzureADAppSitePermission.",
      "Grant-PnPAzureADAppSitePermission"
    ],
    "prefix": [
      "Set-PnPAzureADAppSitePermission"
    ],
    "body": [
      "Set-PnPAzureADAppSitePermission -PermissionId $1 -Permissions $2"
    ]
  },
  "Set-PnPAzureADGroup": {
    "description": "This cmdlet sets the properties of a specific Azure Active Directory group. This can be a security, distribution or Microsoft 365 group.",
    "prefix": [
      "Set-PnPAzureADGroup"
    ],
    "body": [
      "Set-PnPAzureADGroup -Identity $1"
    ]
  },
  "Set-PnPBrowserIdleSignOut": {
    "description": "Use this cmdlet to set the current configuration values for Idle session sign-out, the time at which users are warned and subsequently signed out of Microsoft 365 after a period of browser inactivity in SharePoint Online and OneDrive.",
    "prefix": [
      "Set-PnPBrowserIdleSignOut"
    ],
    "body": [
      "Set-PnPBrowserIdleSignOut -Enabled $1 -WarnAfter $2 -SignOutAfter $3"
    ]
  },
  "Set-PnPBuiltInDesignPackageVisibility": {
    "description": "Sets the visibility of the available built-in Design Packages.",
    "prefix": [
      "Set-PnPBuiltInDesignPackageVisibility"
    ],
    "body": [
      "Set-PnPBuiltInDesignPackageVisibility "
    ]
  },
  "Set-PnPBuiltInSiteTemplateSettings": {
    "description": "This cmdlet allows the built-in SharePoint Online site templates to be shown or hidden.",
    "prefix": [
      "Set-PnPBuiltInSiteTemplateSettings"
    ],
    "body": [
      "Set-PnPBuiltInSiteTemplateSettings -Identity $1 -IsHidden $2"
    ]
  },
  "Set-PnPContentType": {
    "description": "Allows modification of the settings of a content type in a list or site.",
    "prefix": [
      "Set-PnPContentType"
    ],
    "body": [
      "Set-PnPContentType "
    ]
  },
  "Set-PnPContext": {
    "description": "Sets the Client Context to be used by the cmdlets, which allows easy context switching. See examples for details.",
    "prefix": [
      "Set-PnPContext"
    ],
    "body": [
      "Set-PnPContext -Context $1"
    ]
  },
  "Set-PnPDefaultColumnValues": {
    "description": "Sets default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified. Supports both text and taxonomy fields.",
    "prefix": [
      "Set-PnPDefaultColumnValues"
    ],
    "body": [
      "Set-PnPDefaultColumnValues "
    ]
  },
  "Set-PnPDefaultContentTypeToList": {
    "description": "Allows to modify the default content type for a list.",
    "prefix": [
      "Set-PnPDefaultContentTypeToList"
    ],
    "body": [
      "Set-PnPDefaultContentTypeToList -List $1 -ContentType $2"
    ]
  },
  "Set-PnPDefaultPageLayout": {
    "description": "Allows to set the default page layout for a publishing site.",
    "prefix": [
      "Set-PnPDefaultPageLayout"
    ],
    "body": [
      "Set-PnPDefaultPageLayout -Title $1"
    ]
  },
  "Set-PnPDisableSpacesActivation": {
    "description": "This cmdlet disables or enables SharePoint Spaces for a specific site collection or entire SharePoint tenant.",
    "prefix": [
      "Set-PnPDisableSpacesActivation"
    ],
    "body": [
      "Set-PnPDisableSpacesActivation -Disable $1"
    ]
  },
  "Set-PnPDocumentSetField": {
    "description": "Allows to set a site column from the available content types to a document set.",
    "prefix": [
      "Set-PnPDocumentSetField"
    ],
    "body": [
      "Set-PnPDocumentSetField -DocumentSet $1 -Field $2"
    ]
  },
  "Set-PnPField": {
    "description": "Allows to modify a field in a specific list or for the whole site.",
    "prefix": [
      "Set-PnPField"
    ],
    "body": [
      "Set-PnPField "
    ]
  },
  "Set-PnPFileCheckedIn": {
    "description": "This cmdlet checks in a single file, optionally with a comment.",
    "prefix": [
      "Set-PnPFileCheckedIn"
    ],
    "body": [
      "Set-PnPFileCheckedIn "
    ]
  },
  "Set-PnPFileCheckedOut": {
    "description": "Allows to check out a file.",
    "prefix": [
      "Set-PnPFileCheckedOut"
    ],
    "body": [
      "Set-PnPFileCheckedOut "
    ]
  },
  "Set-PnPFolderPermission": {
    "description": "Sets or clears permissions on folders within SharePoint Online. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet.",
    "prefix": [
      "Set-PnPFolderPermission"
    ],
    "body": [
      "Set-PnPFolderPermission "
    ]
  },
  "Set-PnPFooter": {
    "description": "Allows the footer to be enabled or disabled and fine tuned in the current web. For modifying the navigation links shown in the footer, use Add-PnPNavigationNode -Location Footer.",
    "prefix": [
      "Set-PnPFooter"
    ],
    "body": [
      "Set-PnPFooter "
    ]
  },
  "Set-PnPGraphSubscription": {
    "description": "Allows to update an existing Microsoft Graph subscription.",
    "prefix": [
      "Set-PnPGraphSubscription"
    ],
    "body": [
      "Set-PnPGraphSubscription -Identity $1 -ExpirationDate $2"
    ]
  },
  "Set-PnPGroup": {
    "description": "This cmdlet updates the roles and settings of the specified group.",
    "prefix": [
      "Set-PnPGroup"
    ],
    "body": [
      "Set-PnPGroup -Identity $1"
    ]
  },
  "Set-PnPGroupPermissions": {
    "description": "This cmdlet adds or removes roles (permissions) of a specified group on a site or list level.",
    "prefix": [
      "Set-PnPGroupPermissions"
    ],
    "body": [
      "Set-PnPGroupPermissions "
    ]
  },
  "Set-PnPHideDefaultThemes": {
    "description": [
      "Use this cmdlet to hide or show the default themes to users as an option to change the look of their site.",
      "You must be a SharePoint Online Administrator to run the cmdlet."
    ],
    "prefix": [
      "Set-PnPHideDefaultThemes"
    ],
    "body": [
      "Set-PnPHideDefaultThemes -HideDefaultThemes $1"
    ]
  },
  "Set-PnPHomePage": {
    "description": "Allows to set the home page of the current site.",
    "prefix": [
      "Set-PnPHomePage"
    ],
    "body": [
      "Set-PnPHomePage "
    ]
  },
  "Set-PnPHomeSite": {
    "description": "Allows to set the home site of the current tenant.",
    "prefix": [
      "Set-PnPHomeSite"
    ],
    "body": [
      "Set-PnPHomeSite -HomeSiteUrl $1"
    ]
  },
  "Set-PnPHubSite": {
    "description": "Allows configuring a hub site.",
    "prefix": [
      "Set-PnPHubSite"
    ],
    "body": [
      "Set-PnPHubSite "
    ]
  },
  "Set-PnPImageListItemColumn": {
    "description": "Allows setting the Image/Thumbnail column value of a list item.",
    "prefix": [
      "Set-PnPImageListItemColumn"
    ],
    "body": [
      "Set-PnPImageListItemColumn "
    ]
  },
  "Set-PnPIndexedProperties": {
    "description": "Marks values of the propertybag to be indexed by search. Notice that this will overwrite the existing flags, i.e. only the properties you define with the cmdlet will be indexed.",
    "prefix": [
      "Set-PnPIndexedProperties"
    ],
    "body": [
      "Set-PnPIndexedProperties -Keys $1"
    ]
  },
  "Set-PnPInPlaceRecordsManagement": {
    "description": "Activates or deactivates in place records management feature in the site collection.",
    "prefix": [
      "Set-PnPInPlaceRecordsManagement"
    ],
    "body": [
      "Set-PnPInPlaceRecordsManagement -Enabled $1"
    ]
  },
  "Set-PnPKnowledgeHubSite": {
    "description": "Allows to set Knowledge Hub Site of the current tenant.",
    "prefix": [
      "Set-PnPKnowledgeHubSite"
    ],
    "body": [
      "Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl $1"
    ]
  },
  "Set-PnPLabel": {
    "description": "Allows setting a retention label on a list or library and its items. Does not work for sensitivity labels.",
    "prefix": [
      "Set-PnPLabel"
    ],
    "body": [
      "Set-PnPLabel "
    ]
  },
  "Set-PnPList": {
    "description": "Allows the configuration of a specific SharePoint Online list to be set.",
    "prefix": [
      "Set-PnPList"
    ],
    "body": [
      "Set-PnPList -Identity $1"
    ]
  },
  "Set-PnPListInformationRightsManagement": {
    "description": "This cmdlet enables Information Rights Management (IRM) on the list and updates the IRM settings.",
    "prefix": [
      "Set-PnPListInformationRightsManagement"
    ],
    "body": [
      "Set-PnPListInformationRightsManagement -List $1"
    ]
  },
  "Set-PnPListItem": {
    "description": "Allows to modify a list item.",
    "prefix": [
      "Set-PnPListItem"
    ],
    "body": [
      "Set-PnPListItem "
    ]
  },
  "Set-PnPListItemAsRecord": {
    "description": "Allows to set a list item as a record.",
    "prefix": [
      "Set-PnPListItemAsRecord"
    ],
    "body": [
      "Set-PnPListItemAsRecord "
    ]
  },
  "Set-PnPListItemPermission": {
    "description": "Allows to modify list item permissions.",
    "prefix": [
      "Set-PnPListItemPermission"
    ],
    "body": [
      "Set-PnPListItemPermission "
    ]
  },
  "Set-PnPListPermission": {
    "description": [
      "Allows changing permissions on a SharePoint list. In case you would like to break the permission inheritance on a list from its parent, you can use Set-PnPList -BreakRoleInheritance.",
      "Set-PnPList -BreakRoleInheritance"
    ],
    "prefix": [
      "Set-PnPListPermission"
    ],
    "body": [
      "Set-PnPListPermission -Identity $1 -Group $2"
    ]
  },
  "Set-PnPListRecordDeclaration": {
    "description": [
      "The RecordDeclaration parameter supports 3 values:",
      "AlwaysAllowManualDeclaration \r\nNeverAllowManualDeclaration \r\nUseSiteCollectionDefaults ",
      "AlwaysAllowManualDeclaration ",
      "NeverAllowManualDeclaration ",
      "UseSiteCollectionDefaults "
    ],
    "prefix": [
      "Set-PnPListRecordDeclaration"
    ],
    "body": [
      "Set-PnPListRecordDeclaration -List $1"
    ]
  },
  "Set-PnPMasterPage": {
    "description": "Sets the default master page of the current web.",
    "prefix": [
      "Set-PnPMasterPage"
    ],
    "body": [
      "Set-PnPMasterPage "
    ]
  },
  "Set-PnPMessageCenterAnnouncementAsArchived": {
    "description": "Allows to mark message center announcements as archived.",
    "prefix": [
      "Set-PnPMessageCenterAnnouncementAsArchived"
    ],
    "body": [
      "Set-PnPMessageCenterAnnouncementAsArchived "
    ]
  },
  "Set-PnPMessageCenterAnnouncementAsFavorite": {
    "description": "Allows to mark message center announcements as favorite.",
    "prefix": [
      "Set-PnPMessageCenterAnnouncementAsFavorite"
    ],
    "body": [
      "Set-PnPMessageCenterAnnouncementAsFavorite "
    ]
  },
  "Set-PnPMessageCenterAnnouncementAsNotArchived": {
    "description": "Allows to mark message center announcements as not archived.",
    "prefix": [
      "Set-PnPMessageCenterAnnouncementAsNotArchived"
    ],
    "body": [
      "Set-PnPMessageCenterAnnouncementAsNotArchived "
    ]
  },
  "Set-PnPMessageCenterAnnouncementAsNotFavorite": {
    "description": "Allows to mark message center announcements as not favorite.",
    "prefix": [
      "Set-PnPMessageCenterAnnouncementAsNotFavorite"
    ],
    "body": [
      "Set-PnPMessageCenterAnnouncementAsNotFavorite "
    ]
  },
  "Set-PnPMessageCenterAnnouncementAsRead": {
    "description": "Allows to mark message center announcements as read.",
    "prefix": [
      "Set-PnPMessageCenterAnnouncementAsRead"
    ],
    "body": [
      "Set-PnPMessageCenterAnnouncementAsRead "
    ]
  },
  "Set-PnPMessageCenterAnnouncementAsUnread": {
    "description": "This cmdlet marks one or multiple message center announcements of the Office 365 Services as unread for the current user.",
    "prefix": [
      "Set-PnPMessageCenterAnnouncementAsUnread"
    ],
    "body": [
      "Set-PnPMessageCenterAnnouncementAsUnread "
    ]
  },
  "Set-PnPMicrosoft365Group": {
    "description": "Allows to modify Microsoft 365 Group.",
    "prefix": [
      "Set-PnPMicrosoft365Group"
    ],
    "body": [
      "Set-PnPMicrosoft365Group -Identity $1"
    ]
  },
  "Set-PnPMicrosoft365GroupSettings": {
    "description": "Allows to modify Microsoft 365 Group settings for tenat or specified group.",
    "prefix": [
      "Set-PnPMicrosoft365GroupSettings"
    ],
    "body": [
      "Set-PnPMicrosoft365GroupSettings -Identity $1"
    ]
  },
  "Set-PnPMinimalDownloadStrategy": {
    "description": "Activates or deactivates the minimal download strategy feature of a site",
    "prefix": [
      "Set-PnPMinimalDownloadStrategy"
    ],
    "body": [
      "Set-PnPMinimalDownloadStrategy "
    ]
  },
  "Set-PnPPage": {
    "description": "Sets parameters of a page. All pages must be located inside the Site Pages library.",
    "prefix": [
      "Set-PnPPage"
    ],
    "body": [
      "Set-PnPPage "
    ]
  },
  "Set-PnPPageTextPart": {
    "description": "Sets the rendered text in existing client side text component",
    "prefix": [
      "Set-PnPPageTextPart"
    ],
    "body": [
      "Set-PnPPageTextPart "
    ]
  },
  "Set-PnPPageWebPart": {
    "description": "Sets specific client side web part properties. Notice that the title parameter will only set the -internal- title of web part. The title which is shown in the UI will, if possible, have to be set using the PropertiesJson parameter. Use Get-PnPPageComponent to retrieve the instance id and properties of a web part.",
    "prefix": [
      "Set-PnPPageWebPart"
    ],
    "body": [
      "Set-PnPPageWebPart "
    ]
  },
  "Set-PnPPlannerBucket": {
    "description": "This cmdlet updates an existing Planner bucket.",
    "prefix": [
      "Set-PnPPlannerBucket"
    ],
    "body": [
      "Set-PnPPlannerBucket -Bucket $1 -Group $2 -Plan $3 -Name $4"
    ]
  },
  "Set-PnPPlannerConfiguration": {
    "description": "This cmdlet allows the Microsoft Planner tenant configuration to be changed.",
    "prefix": [
      "Set-PnPPlannerConfiguration"
    ],
    "body": [
      "Set-PnPPlannerConfiguration "
    ]
  },
  "Set-PnPPlannerPlan": {
    "description": "This cmdlet updates an existing planner plan",
    "prefix": [
      "Set-PnPPlannerPlan"
    ],
    "body": [
      "Set-PnPPlannerPlan -Group $1 -Plan $2 -Title $3"
    ]
  },
  "Set-PnPPlannerTask": {
    "description": "This cmdlets allows you to update an existing task in a Planner plan.",
    "prefix": [
      "Set-PnPPlannerTask"
    ],
    "body": [
      "Set-PnPPlannerTask -TaskId $1"
    ]
  },
  "Set-PnPPlannerUserPolicy": {
    "description": "This cmdlet allows a Microsoft Planner user policy to be set for the provided user",
    "prefix": [
      "Set-PnPPlannerUserPolicy"
    ],
    "body": [
      "Set-PnPPlannerUserPolicy -Identity $1"
    ]
  },
  "Set-PnPPropertyBagValue": {
    "description": [
      "Updates an existing property bag value or adds it as a new key\\value pair if it doesn't exist yet. If working with a modern SharePoint Online site or having noscript enabled, you will have to disable this yourself temporarily using Set-PnPTenantSite -Url <url> -NoScriptSite:$false to be able to make the change.",
      "Set-PnPTenantSite -Url <url> -NoScriptSite:$false"
    ],
    "prefix": [
      "Set-PnPPropertyBagValue"
    ],
    "body": [
      "Set-PnPPropertyBagValue -Key $1 -Value $2"
    ]
  },
  "Set-PnPRequestAccessEmails": {
    "description": "Enables or disables access requests to be sent and configures which e-mail address should receive these requests. The web you apply this on must have unique rights.",
    "prefix": [
      "Set-PnPRequestAccessEmails"
    ],
    "body": [
      "Set-PnPRequestAccessEmails "
    ]
  },
  "Set-PnPRoleDefinition": {
    "description": "Allows updating an existing Role Definition (Permission Level) in the site collection in the current context.",
    "prefix": [
      "Set-PnPRoleDefinition"
    ],
    "body": [
      "Set-PnPRoleDefinition -Identity $1"
    ]
  },
  "Set-PnPSearchConfiguration": {
    "description": "This cmdlet sets the search configuration for a single web, site collection or a tenant, using a file or a configuration string.",
    "prefix": [
      "Set-PnPSearchConfiguration"
    ],
    "body": [
      "Set-PnPSearchConfiguration -Configuration $1"
    ]
  },
  "Set-PnPSearchSettings": {
    "description": "Allows to modify search settings for a site.",
    "prefix": [
      "Set-PnPSearchSettings"
    ],
    "body": [
      "Set-PnPSearchSettings "
    ]
  },
  "Set-PnPSite": {
    "description": "Allows to modify a site properties.",
    "prefix": [
      "Set-PnPSite"
    ],
    "body": [
      "Set-PnPSite "
    ]
  },
  "Set-PnPSiteClassification": {
    "description": [
      "This cmdlet allows for setting a classic site classification on the currently connected to site. If the site has a Microsoft 365 Group behind it, the classification will be placed on the Microsoft 365 Group and will require either Directory.Read.All or Directory.ReadWrite.All application permissions on Microsoft Graph. If it does not have a Microsoft 365 Group behind it, it will set the site classification on the SharePoint Online site and will not require Microsoft Graph permissions. Use Get-PnPAvailableSiteClassification to get an overview of the available site classifications on the tenant. For the new Microsoft Purview sensitivity labels, use Set-PnPSiteSensitivityLabel instead.",
      "Get-PnPAvailableSiteClassification",
      "Set-PnPSiteSensitivityLabel"
    ],
    "prefix": [
      "Set-PnPSiteClassification"
    ],
    "body": [
      "Set-PnPSiteClassification -Identity $1"
    ]
  },
  "Set-PnPSiteClosure": {
    "description": "Allows to open or close a site which has a site policy applied.",
    "prefix": [
      "Set-PnPSiteClosure"
    ],
    "body": [
      "Set-PnPSiteClosure -State $1"
    ]
  },
  "Set-PnPSiteDesign": {
    "description": "Allows to update a Site Design on the current tenant.",
    "prefix": [
      "Set-PnPSiteDesign"
    ],
    "body": [
      "Set-PnPSiteDesign -Identity $1"
    ]
  },
  "Set-PnPSiteGroup": {
    "description": [
      "For permissions and the most current information about Windows PowerShell for SharePoint Online, see the online documentation at Intro to SharePoint Online Management Shell.",
      "Intro to SharePoint Online Management Shell"
    ],
    "prefix": [
      "Set-PnPSiteGroup"
    ],
    "body": [
      "Set-PnPSiteGroup -Identity $1"
    ]
  },
  "Set-PnPSitePolicy": {
    "description": "Allows to modify a site policy.",
    "prefix": [
      "Set-PnPSitePolicy"
    ],
    "body": [
      "Set-PnPSitePolicy -Name $1"
    ]
  },
  "Set-PnPSiteScript": {
    "description": "This cmdlet updates an existing site script.",
    "prefix": [
      "Set-PnPSiteScript"
    ],
    "body": [
      "Set-PnPSiteScript -Identity $1"
    ]
  },
  "Set-PnPSiteScriptPackage": {
    "description": "Allows to update an existing Site Script Package on the current tenant.",
    "prefix": [
      "Set-PnPSiteScriptPackage"
    ],
    "body": [
      "Set-PnPSiteScriptPackage -Identity $1"
    ]
  },
  "Set-PnPSiteSensitivityLabel": {
    "description": [
      "This cmdlet allows for setting a Microsoft Purview sensitivity label on the currently connected to site. If the site has a Microsoft 365 Group behind it, the label will be placed on the Microsoft 365 Group and will require either Group.ReadWrite.All or Directory.ReadWrite.All delegate permissions on Microsoft Graph. This currently cannot be done using App Only permissions due to a limitation in Microsoft Graph. If it does not have a Microsoft 365 Group behind it, it will set the label on the SharePoint Online site and will not require Microsoft Graph permissions and will work with both delegate as well as app only logins.",
      "It may take up to a few minutes for a change to the sensitity label to become visible in SharePoint Online and Azure Active Directory.",
      "Use Get-PnPAvailableSensitivityLabel to get an overview of the available Microsoft Purview sensitivity labels on the tenant.",
      "Get-PnPAvailableSensitivityLabel",
      "For the classic classification labels, use Set-PnPSiteClassification instead.",
      "Set-PnPSiteClassification"
    ],
    "prefix": [
      "Set-PnPSiteSensitivityLabel"
    ],
    "body": [
      "Set-PnPSiteSensitivityLabel -Identity $1"
    ]
  },
  "Set-PnPSiteTemplateMetadata": {
    "description": "Allows to modify metadata of a provisioning template.",
    "prefix": [
      "Set-PnPSiteTemplateMetadata"
    ],
    "body": [
      "Set-PnPSiteTemplateMetadata "
    ]
  },
  "Set-PnPStorageEntity": {
    "description": "Allows to set Storage Entities / Farm Properties in either the tenant scoped app catalog or the site collection app catalog.",
    "prefix": [
      "Set-PnPStorageEntity"
    ],
    "body": [
      "Set-PnPStorageEntity -Key $1 -Value $2"
    ]
  },
  "Set-PnPStructuralNavigationCacheSiteState": {
    "description": "The Set-PnPStructuralNavigationCacheSiteState cmdlet can be used to enable or disable caching for all webs in a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used.",
    "prefix": [
      "Set-PnPStructuralNavigationCacheSiteState"
    ],
    "body": [
      "Set-PnPStructuralNavigationCacheSiteState -IsEnabled $1"
    ]
  },
  "Set-PnPStructuralNavigationCacheWebState": {
    "description": "The Set-PnPStructuralNavigationCacheWebState cmdlet can be used to enable or disable caching for a webs in a site collection. If the WebUrl parameter has not been specified the currently connected to site will be used.",
    "prefix": [
      "Set-PnPStructuralNavigationCacheWebState"
    ],
    "body": [
      "Set-PnPStructuralNavigationCacheWebState -IsEnabled $1"
    ]
  },
  "Set-PnPSubscribeSharePointNewsDigest": {
    "description": [
      "Requires a connection to a SharePoint Tenant Admin site.",
      "Enables or disables the SharePoint News Digest mails for a particular user."
    ],
    "prefix": [
      "Set-PnPSubscribeSharePointNewsDigest"
    ],
    "body": [
      "Set-PnPSubscribeSharePointNewsDigest -Account $1 -Enabled $2"
    ]
  },
  "Set-PnPTaxonomyFieldValue": {
    "description": "Allows to update taxonomy term value in a listitem field.",
    "prefix": [
      "Set-PnPTaxonomyFieldValue"
    ],
    "body": [
      "Set-PnPTaxonomyFieldValue -ListItem $1 -InternalFieldName $2 -TermId $3"
    ]
  },
  "Set-PnPTeamifyPromptHidden": {
    "description": "This cmdlet hides the teamify prompt for the current site.",
    "prefix": [
      "Set-PnPTeamifyPromptHidden"
    ],
    "body": [
      "Set-PnPTeamifyPromptHidden "
    ]
  },
  "Set-PnPTeamsChannel": {
    "description": "Allows to update an existing Teams Channel.",
    "prefix": [
      "Set-PnPTeamsChannel"
    ],
    "body": [
      "Set-PnPTeamsChannel -Team $1 -Identity $2"
    ]
  },
  "Set-PnPTeamsChannelUser": {
    "description": "Allows to update the role of a user in an existing Microsoft Teams private channel.",
    "prefix": [
      "Set-PnPTeamsChannelUser"
    ],
    "body": [
      "Set-PnPTeamsChannelUser -Team $1 -Channel $2 -Identity $3 -Role $4"
    ]
  },
  "Set-PnPTeamsTab": {
    "description": "Allows to update Teams Tab settings.",
    "prefix": [
      "Set-PnPTeamsTab"
    ],
    "body": [
      "Set-PnPTeamsTab -Team $1 -Channel $2"
    ]
  },
  "Set-PnPTeamsTag": {
    "description": "",
    "prefix": [
      "Set-PnPTeamsTag"
    ],
    "body": [
      "Set-PnPTeamsTag -Team $1 -Identity $2 -DisplayName $3"
    ]
  },
  "Set-PnPTeamsTeam": {
    "description": "Allows to update team settings.",
    "prefix": [
      "Set-PnPTeamsTeam"
    ],
    "body": [
      "Set-PnPTeamsTeam -Identity $1"
    ]
  },
  "Set-PnPTeamsTeamArchivedState": {
    "description": "Allows to update the archived state of a team.",
    "prefix": [
      "Set-PnPTeamsTeamArchivedState"
    ],
    "body": [
      "Set-PnPTeamsTeamArchivedState -Identity $1 -Archived $2"
    ]
  },
  "Set-PnPTeamsTeamPicture": {
    "description": "Notice that this cmdlet will immediately return but it can take a few hours before the changes are reflected in Microsoft Teams.",
    "prefix": [
      "Set-PnPTeamsTeamPicture"
    ],
    "body": [
      "Set-PnPTeamsTeamPicture -Team $1 -Path $2"
    ]
  },
  "Set-PnPTemporarilyDisableAppBar": {
    "description": "Allows to disable/enable SharePoint Online App Bar.",
    "prefix": [
      "Set-PnPTemporarilyDisableAppBar"
    ],
    "body": [
      "Set-PnPTemporarilyDisableAppBar -Enabled $1"
    ]
  },
  "Set-PnPTenant": {
    "description": [
      "Sets organization-level tenant properties which impact the entire tenant.",
      "You must have the SharePoint Online admin or Global admin role to run the cmdlet."
    ],
    "prefix": [
      "Set-PnPTenant"
    ],
    "body": [
      "Set-PnPTenant "
    ]
  },
  "Set-PnPTenantAppCatalogUrl": {
    "description": "This cmdlet sets the tenant scoped app catalog to the specified url.",
    "prefix": [
      "Set-PnPTenantAppCatalogUrl"
    ],
    "body": [
      "Set-PnPTenantAppCatalogUrl -Url $1"
    ]
  },
  "Set-PnPTenantCdnEnabled": {
    "description": "Enables or disables the public or private Office 365 Content Delivery Network (CDN) for the tenant.",
    "prefix": [
      "Set-PnPTenantCdnEnabled"
    ],
    "body": [
      "Set-PnPTenantCdnEnabled "
    ]
  },
  "Set-PnPTenantCdnPolicy": {
    "description": "Sets the CDN Policies for the specified CDN (Public | Private).",
    "prefix": [
      "Set-PnPTenantCdnPolicy"
    ],
    "body": [
      "Set-PnPTenantCdnPolicy -CdnType $1 -PolicyType $2 -PolicyValue $3"
    ]
  },
  "Set-PnPTenantSite": {
    "description": "Allows settings of a site collection to be updated",
    "prefix": [
      "Set-PnPTenantSite"
    ],
    "body": [
      "Set-PnPTenantSite "
    ]
  },
  "Set-PnPTenantSyncClientRestriction": {
    "description": [
      "Sets organization-level sync client restriction properties such as BlockMacSync, OptOutOfGroveBlock, and DisableReportProblemDialog.",
      "You must have the SharePoint Online admin or Global admin role to run the cmdlet."
    ],
    "prefix": [
      "Set-PnPTenantSyncClientRestriction"
    ],
    "body": [
      "Set-PnPTenantSyncClientRestriction "
    ]
  },
  "Set-PnPTerm": {
    "description": "This cmdlet allows you to update an existing term.",
    "prefix": [
      "Set-PnPTerm"
    ],
    "body": [
      "Set-PnPTerm -Identity $1"
    ]
  },
  "Set-PnPTermGroup": {
    "description": "The cmdles allows you to update an existing term group.",
    "prefix": [
      "Set-PnPTermGroup"
    ],
    "body": [
      "Set-PnPTermGroup -Identity $1"
    ]
  },
  "Set-PnPTermSet": {
    "description": "This cmdlet allows you to update an existing term set.",
    "prefix": [
      "Set-PnPTermSet"
    ],
    "body": [
      "Set-PnPTermSet -Identity $1"
    ]
  },
  "Set-PnPTheme": {
    "description": "Sets the theme of the current web, if any of the attributes is not set, that value will be set to null",
    "prefix": [
      "Set-PnPTheme"
    ],
    "body": [
      "Set-PnPTheme "
    ]
  },
  "Set-PnPTraceLog": {
    "description": "Defines if tracing should be turned on. PnP Core, which is the foundation of these cmdlets, uses the standard Trace functionality of .NET. With this cmdlet you can turn capturing of this trace to a log file on or off. Notice that basically only the Provisioning Engine writes to the tracelog which means that cmdlets related to the engine will produce output.",
    "prefix": [
      "Set-PnPTraceLog"
    ],
    "body": [
      "Set-PnPTraceLog "
    ]
  },
  "Set-PnPUserOneDriveQuota": {
    "description": [
      "This command allows you to set the quota on the OneDrive for Business site of a specific user. You must connect to the tenant admin website (https://:-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet.",
      null
    ],
    "prefix": [
      "Set-PnPUserOneDriveQuota"
    ],
    "body": [
      "Set-PnPUserOneDriveQuota "
    ]
  },
  "Set-PnPUserProfileProperty": {
    "description": "Requires a connection to a SharePoint Tenant Admin site.",
    "prefix": [
      "Set-PnPUserProfileProperty"
    ],
    "body": [
      "Set-PnPUserProfileProperty -Account $1 -PropertyName $2 -Value $3"
    ]
  },
  "Set-PnPView": {
    "description": [
      "Sets one or more properties of an existing view, see here https://learn.microsoft.com/previous-versions/office/sharepoint-server/ee543328(v=office.15) for the list of view properties.",
      "https://learn.microsoft.com/previous-versions/office/sharepoint-server/ee543328(v=office.15)"
    ],
    "prefix": [
      "Set-PnPView"
    ],
    "body": [
      "Set-PnPView "
    ]
  },
  "Set-PnPVivaConnectionsDashboardACE": {
    "description": "Allows to update the Adaptive card extension in the Viva connections dashboard page.",
    "prefix": [
      "Set-PnPVivaConnectionsDashboardACE"
    ],
    "body": [
      "Set-PnPVivaConnectionsDashboardACE -Identity $1"
    ]
  },
  "Set-PnPWeb": {
    "description": "Allows setting various properties on a web",
    "prefix": [
      "Set-PnPWeb"
    ],
    "body": [
      "Set-PnPWeb "
    ]
  },
  "Set-PnPWebHeader": {
    "description": "Through this cmdlet the various options offered through \"Change the look\" Header can be configured.",
    "prefix": [
      "Set-PnPWebHeader"
    ],
    "body": [
      "Set-PnPWebHeader "
    ]
  },
  "Set-PnPWebhookSubscription": {
    "description": "Allows to update Webhook subscription.",
    "prefix": [
      "Set-PnPWebhookSubscription"
    ],
    "body": [
      "Set-PnPWebhookSubscription "
    ]
  },
  "Set-PnPWebPartProperty": {
    "description": "Allows to modify web part property.",
    "prefix": [
      "Set-PnPWebPartProperty"
    ],
    "body": [
      "Set-PnPWebPartProperty -ServerRelativePageUrl $1 -Identity $2 -Key $3 -Value $4"
    ]
  },
  "Set-PnPWebPermission": {
    "description": "This cmdlet adds permissions to a user or a group or removes permissions from a user or a group.",
    "prefix": [
      "Set-PnPWebPermission"
    ],
    "body": [
      "Set-PnPWebPermission -Group $1"
    ]
  },
  "Set-PnPWebTheme": {
    "description": "Sets the theme of the current web. * Requires SharePoint Online Administrator Rights *",
    "prefix": [
      "Set-PnPWebTheme"
    ],
    "body": [
      "Set-PnPWebTheme "
    ]
  },
  "Set-PnPWikiPageContent": {
    "description": "This cmdlet updates the content of the specified wikipage to the value specified either in a string or a file.",
    "prefix": [
      "Set-PnPWikiPageContent"
    ],
    "body": [
      "Set-PnPWikiPageContent -Content $1 -ServerRelativePageUrl $2"
    ]
  },
  "Stop-PnPFlowRun": {
    "description": "This cmdlet cancels a running Power Automate flow run.",
    "prefix": [
      "Stop-PnPFlowRun"
    ],
    "body": [
      "Stop-PnPFlowRun -Environment $1 -Flow $2 -Identity $3"
    ]
  },
  "Submit-PnPSearchQuery": {
    "description": "Allows to run an arbitrary search query against the SharePoint search index.",
    "prefix": [
      "Submit-PnPSearchQuery"
    ],
    "body": [
      "Submit-PnPSearchQuery "
    ]
  },
  "Submit-PnPTeamsChannelMessage": {
    "description": "Allows to send a message to a Microsoft Teams Channel.",
    "prefix": [
      "Submit-PnPTeamsChannelMessage"
    ],
    "body": [
      "Submit-PnPTeamsChannelMessage -Team $1 -Channel $2 -Message $3"
    ]
  },
  "Sync-PnPAppToTeams": {
    "description": "Allows to Synchronize an app from the tenant app catalog to the Microsoft Teams app catalog.",
    "prefix": [
      "Sync-PnPAppToTeams"
    ],
    "body": [
      "Sync-PnPAppToTeams "
    ]
  },
  "Sync-PnPSharePointUserProfilesFromAzureActiveDirectory": {
    "description": [
      "This cmdlet allows synchronizing user profiles from Azure Active Directory to their SharePoint Online User Profile equivallents. Note that certain properties are already synced by default. A list of these can be found here: https://learn.microsoft.com/sharepoint/user-profile-sync#properties-that-are-synced-into-sharepoint-user-profiles",
      "https://learn.microsoft.com/sharepoint/user-profile-sync#properties-that-are-synced-into-sharepoint-user-profiles",
      "For other properties not listed on this page, you can use this cmdlet to synchronize them. You can provide the property name(s) in Azure Active Directory and specify its equivallent property in SharePoint Online for the values to be mapped to.",
      "Note that SharePoint Online User Profile properties you wish to sync to must have the checkbox unchecked for \"Allow users to edit values for this property\" in the user profile property in the SharePoint User Profile service application. It also must have \"User can override\" checked under Policy Settings of the user profile property in the SharePoint User Profile service application.",
      "must",
      "must",
      "When running this cmdlet, it will upload a file named userprofilesyncdata-<timestamp>-<guid>.json to the documents library of the SharePoint Online site you are connected to. From there an asynchronous process will be started that processed the JSON file and updates the user profiles on the SharePoint Online side. The time before this process starts varies. Once that process is done and only if something failed, you will find a new folder created in the same document library of which the folder name starts with the same name as the filename. It will contain a .log file in which you can find the results of it trying to update the user profiles in SharePoint Online which were specified in the JSON file. If all the user profile properties have been updated successfully, it will not create such a folder and log file.",
      "userprofilesyncdata-<timestamp>-<guid>.json",
      "You can also query the import job status using Get-PnPUPABulkImportStatus -JobId <jobid>. The jobid will be returned upon running this cmdlet and can be fed into this cmdlet to get the actual status. It will show State: Submitted after running this cmdlet and before processing it and State: Succeeded once its done and was successful or State: Error if it failed. It will also return full details on the file it will use to update the user profiles and the location of the log file once its done processing and only if it failed. For documentation on all the possible states it can be in, see https://learn.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online#parameters-2.",
      "Get-PnPUPABulkImportStatus -JobId <jobid>",
      "State: Submitted",
      "State: Succeeded",
      "State: Error",
      "https://learn.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online#parameters-2",
      "When not providing -Users, it will fetch all the users and the properties defined in the mapping from Azure Active Directory itself. You can also opt to query for a subset of Azure Active Directory users to update using i.e. Get-PnPAzureAdUser and feed the outcome of that to the -Users parameter. In this case you must ensure that the user objects you supply contain the properties you wish to sync towards SharePoint Online.",
      "Get-PnPAzureAdUser",
      "When not providing -Folder, it will assume a document library named \"Shared Documents\" is present within the site collection you're currently connected to. In case you are not using an English site collection, this name may be different and localized. In that case use the -Folder parameter passing in the localized name of the document library you wish to upload the mapping file to.",
      "Required Permissions",
      "Required Permissions",
      "In order to be able to run this cmdlet you need to have [User.Read.All] and [Sites.FullControl.All] permissions on SharePoint and [User.Read.All] permissions on Microsoft Graph so it will be able to read the users directly from Azure Active Directory and upload the JSON file to SharePoint Online. It also needs to have the Tenant Full Control ACS permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx for it to be allowed to kick off the import user profile process:",
      "https://tenant-admin.sharepoint.com/_layouts/appinv.aspx",
      "<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/content/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>",
      "<AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/content/tenant\" Right=\"FullControl\" /> </AppPermissionRequests>"
    ],
    "prefix": [
      "Sync-PnPSharePointUserProfilesFromAzureActiveDirectory"
    ],
    "body": [
      "Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping $1"
    ]
  },
  "Test-PnPListItemIsRecord": {
    "description": "Allows to check if the specified list item is a record.",
    "prefix": [
      "Test-PnPListItemIsRecord"
    ],
    "body": [
      "Test-PnPListItemIsRecord "
    ]
  },
  "Test-PnPMicrosoft365GroupAliasIsUsed": {
    "description": "This command allows you to test if a provided alias is used or free, helps decide if it can be used as part of connecting an Microsoft 365 group to an existing classic site collection.",
    "prefix": [
      "Test-PnPMicrosoft365GroupAliasIsUsed"
    ],
    "body": [
      "Test-PnPMicrosoft365GroupAliasIsUsed -Alias $1"
    ]
  },
  "Test-PnPSite": {
    "description": "The Test-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. Tests are intended not to make any changes except in repair mode, which can be initiated by running the Repair-PnPSite cmdlet. This cmdlet reports the rules together with a summary of the results.",
    "prefix": [
      "Test-PnPSite"
    ],
    "body": [
      "Test-PnPSite -Identity $1"
    ]
  },
  "Test-PnPTenantTemplate": {
    "description": "Allows to check if the tenant template has invalid references.",
    "prefix": [
      "Test-PnPTenantTemplate"
    ],
    "body": [
      "Test-PnPTenantTemplate -Template $1"
    ]
  },
  "Uninstall-PnPApp": {
    "description": "Allows to uninstall an available add-in from the site.",
    "prefix": [
      "Uninstall-PnPApp"
    ],
    "body": [
      "Uninstall-PnPApp "
    ]
  },
  "Unpublish-PnPApp": {
    "description": "Allows to unpublish an available add-in from the site.",
    "prefix": [
      "Unpublish-PnPApp"
    ],
    "body": [
      "Unpublish-PnPApp "
    ]
  },
  "Unpublish-PnPContentType": {
    "description": "Allows to unpublish a content type present on content type hub site.",
    "prefix": [
      "Unpublish-PnPContentType"
    ],
    "body": [
      "Unpublish-PnPContentType -ContentType $1"
    ]
  },
  "Unpublish-PnPSyntexModel": {
    "description": "This command unpublishes a Syntex document processing model from a list.",
    "prefix": [
      "Unpublish-PnPSyntexModel"
    ],
    "body": [
      "Unpublish-PnPSyntexModel -Model $1 -ListWebUrl $2 -List $3"
    ]
  },
  "Unregister-PnPHubSite": {
    "description": "Allows to unregister a site as a hubsite.",
    "prefix": [
      "Unregister-PnPHubSite"
    ],
    "body": [
      "Unregister-PnPHubSite -Site $1"
    ]
  },
  "Update-PnPApp": {
    "description": "Allows to update an available app from the app catalog.",
    "prefix": [
      "Update-PnPApp"
    ],
    "body": [
      "Update-PnPApp "
    ]
  },
  "Update-PnPAvailableSiteClassification": {
    "description": "This cmdlet allows for updating the configuration of the classic site classifications configured within the tenant.",
    "prefix": [
      "Update-PnPAvailableSiteClassification"
    ],
    "body": [
      "Update-PnPAvailableSiteClassification -Settings $1"
    ]
  },
  "Update-PnPSiteDesignFromWeb": {
    "description": [
      "Updates an existing Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. It combines the steps of Get-PnPSiteScriptFromWeb and Set-PnPSiteScript to generate a site script from a web and update an existing site script with it into one cmdlet. The information returned from running the cmdlet is the information of the Site Design that has been updated.",
      "Get-PnPSiteScriptFromWeb",
      "Set-PnPSiteScript"
    ],
    "prefix": [
      "Update-PnPSiteDesignFromWeb"
    ],
    "body": [
      "Update-PnPSiteDesignFromWeb -Identity $1 -Url $2"
    ]
  },
  "Update-PnPTeamsApp": {
    "description": "Allows to update an existing app in the Teams App Catalog.",
    "prefix": [
      "Update-PnPTeamsApp"
    ],
    "body": [
      "Update-PnPTeamsApp -Identity $1 -Path $2"
    ]
  },
  "Update-PnPTeamsUser": {
    "description": "This cmdlet updates the role of the specified user in the selected Teams instance to Member or Owner.",
    "prefix": [
      "Update-PnPTeamsUser"
    ],
    "body": [
      "Update-PnPTeamsUser -Team $1 -User $2 -Role $3"
    ]
  },
  "Update-PnPUserType": {
    "description": "This cmdlet retrieves the UserType value of the specified user and updates the UserType across all SharePoint Online sites in the SharePoint Online tenant. This can be used, for example, to convert a Guest user to a standard (Member) user if the user's UserType was previously updated in Azure AD.",
    "prefix": [
      "Update-PnPUserType"
    ],
    "body": [
      "Update-PnPUserType -LoginName $1"
    ]
  }
}